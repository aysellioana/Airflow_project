[2024-03-07T02:24:16.291+0200] {processor.py:161} INFO - Started process (PID=25582) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:24:16.292+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:24:16.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.293+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:24:16.294+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.294+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:24:16.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.343+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:24:16.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.344+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:24:16.361+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.361+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:24:16.362+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.362+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:24:16.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.442+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:24:16.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.461+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:24:16.641+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.638+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:24:16.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.664+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:24:16.760+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:16.760+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:24:16.772+0200] {processor.py:840} INFO - DAG(s) 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_external_task_marker_child', 'example_sensors', 'example_task_group_decorator', 'dag_id_2', 'example_bash_operator', 'example_trigger_controller_dag', 'example_passing_params_via_test_command', 'example_weekday_branch_operator', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator_2', 'example_skip_dag', 'example_nested_branch_dag', 'example_branch_datetime_operator_3', 'tutorial', 'latest_only', 'example_short_circuit_operator', 'example_external_task_marker_parent', 'example_complex', 'dataset_consumes_1', 'example_branch_datetime_operator', 'dataset_consumes_1_never_scheduled', 'example_time_delta_sensor_async', 'tutorial_dag', 'example_dag_decorator', 'example_sla_dag', 'example_python_decorator', 'example_trigger_target_dag', 'example_xcom', 'dataset_produces_1', 'example_setup_teardown_taskflow', 'dag_id_3', 'tutorial_taskflow_api', 'example_short_circuit_decorator', 'dataset_consumes_1_and_2', 'example_python_operator', 'example_xcom_args_with_operators', 'tutorial_objectstorage', 'dataset_consumes_unknown_never_scheduled', 'example_params_ui_tutorial', 'example_xcom_args', 'example_branch_labels', 'example_dynamic_task_mapping', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_sensor_decorator', 'example_params_trigger_ui', 'example_task_group', 'dataset_produces_2', 'example_setup_teardown', 'latest_only_with_trigger', 'dag_id_1' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:24:17.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.148+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:24:17.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.164+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:24:17.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.166+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:24:17.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.166+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:24:17.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.167+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:24:17.168+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.168+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:24:17.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.168+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:24:17.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.169+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:24:17.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.171+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.172+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.172+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:24:17.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.174+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.175+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.177+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.179+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.179+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.186+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:23:00+00:00, run_after=2024-03-07 00:24:00+00:00
[2024-03-07T02:24:17.188+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.188+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.189+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:24:17.190+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.190+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:24:17.191+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.191+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:24:17.192+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.192+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.192+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:24:17.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.193+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:24:17.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.195+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.196+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.196+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:24:17.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.197+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:24:17.201+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.201+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:23:00+00:00, run_after=2024-03-07 00:24:00+00:00
[2024-03-07T02:24:17.203+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.203+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:24:17.203+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.203+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:24:17.204+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.204+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:24:17.205+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.205+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:24:17.206+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.206+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.206+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.206+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.207+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.207+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.208+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.209+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.209+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.212+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:22:00+00:00, run_after=2024-03-07 00:24:00+00:00
[2024-03-07T02:24:17.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.212+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:24:17.213+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.213+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:24:17.214+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.214+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:24:17.215+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.214+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.215+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.215+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.216+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.216+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:24:17.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.217+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:24:17.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.217+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:24:17.219+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.219+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.220+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.220+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:24:17.220+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.220+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:24:17.221+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.221+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:24:17.222+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.222+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.223+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.222+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.223+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.223+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:24:17.224+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.224+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:24:17.225+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.225+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:24:17.226+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.225+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:24:17.253+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.252+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:24:17.256+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.255+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:24:17.256+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:24:17.256+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:24:17.267+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.978 seconds
[2024-03-07T02:25:52.587+0200] {processor.py:161} INFO - Started process (PID=25731) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:25:52.592+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:25:52.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.595+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:25:52.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.601+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:25:52.728+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.727+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:25:52.729+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.729+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:25:52.768+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.768+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:25:52.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.770+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:25:52.887+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.885+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:25:52.922+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:52.922+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:25:53.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:53.307+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:25:53.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:53.343+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:25:53.535+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:53.535+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:25:53.558+0200] {processor.py:840} INFO - DAG(s) 'example_bash_operator', 'example_sensors', 'example_weekday_branch_operator', 'example_setup_teardown_taskflow', 'dataset_produces_1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'latest_only_with_trigger', 'example_params_trigger_ui', 'example_nested_branch_dag', 'dag_id_1', 'example_subdag_operator.section-2', 'example_time_delta_sensor_async', 'example_xcom_args_with_operators', 'example_external_task_marker_parent', 'dag_id_2', 'example_task_group', 'example_branch_dop_operator_v3', 'dataset_consumes_1', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_sla_dag', 'example_dynamic_task_mapping', 'example_task_group_decorator', 'dataset_consumes_1_never_scheduled', 'dataset_consumes_unknown_never_scheduled', 'example_branch_datetime_operator_2', 'example_passing_params_via_test_command', 'tutorial', 'example_branch_labels', 'example_python_decorator', 'tutorial_objectstorage', 'example_xcom_args', 'example_external_task_marker_child', 'tutorial_dag', 'dataset_produces_2', 'example_python_operator', 'example_branch_datetime_operator_3', 'example_dag_decorator', 'example_skip_dag', 'example_complex', 'example_short_circuit_decorator', 'dag_id_3', 'example_trigger_target_dag', 'example_short_circuit_operator', 'latest_only', 'tutorial_taskflow_api', 'example_params_ui_tutorial', 'example_setup_teardown', 'example_xcom', 'example_trigger_controller_dag', 'example_sensor_decorator', 'example_branch_datetime_operator', 'dataset_consumes_1_and_2' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:25:54.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.499+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:25:54.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.531+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:25:54.535+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.535+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:25:54.536+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.536+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:25:54.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.537+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:25:54.538+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.538+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:25:54.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.539+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:25:54.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.541+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:25:54.547+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.547+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.549+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:25:54.553+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.553+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.558+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.558+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.571+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.578+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.591+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.590+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:24:00+00:00, run_after=2024-03-07 00:25:00+00:00
[2024-03-07T02:25:54.594+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.594+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.596+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.595+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:25:54.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.597+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:25:54.600+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.600+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:25:54.601+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.601+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.604+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.604+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:25:54.612+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:25:54.616+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.615+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.617+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:25:54.618+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.618+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:25:54.625+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.625+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:24:00+00:00, run_after=2024-03-07 00:25:00+00:00
[2024-03-07T02:25:54.627+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.627+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:25:54.628+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.628+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:25:54.629+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.629+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:25:54.630+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.630+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:25:54.632+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.632+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.634+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.636+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.636+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.637+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.637+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.647+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:22:00+00:00, run_after=2024-03-07 00:24:00+00:00
[2024-03-07T02:25:54.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.649+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:25:54.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.650+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:25:54.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.651+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:25:54.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.652+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.655+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:25:54.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.656+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:25:54.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.658+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:25:54.662+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.662+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.664+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:25:54.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.668+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:25:54.670+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.670+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:25:54.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.671+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.673+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.675+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:25:54.676+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.676+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:25:54.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.677+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:25:54.679+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.678+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:25:54.733+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.733+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:25:54.737+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.737+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:25:54.738+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:25:54.737+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:25:54.754+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 2.169 seconds
[2024-03-07T02:27:44.340+0200] {processor.py:161} INFO - Started process (PID=25823) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:27:44.341+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:27:44.342+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.342+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:27:44.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.343+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:27:44.403+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.402+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:27:44.403+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.403+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:27:44.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.424+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:27:44.425+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.425+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:27:44.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.487+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:27:44.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.502+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:27:44.698+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.697+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:27:44.718+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.718+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:27:44.832+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:44.832+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:27:44.846+0200] {processor.py:840} INFO - DAG(s) 'example_task_group_decorator', 'dag_id_2', 'example_task_group', 'tutorial_dag', 'example_sensors', 'example_dynamic_task_mapping', 'example_branch_datetime_operator', 'dag_id_3', 'example_params_trigger_ui', 'example_short_circuit_decorator', 'example_dag_decorator', 'example_xcom_args', 'example_nested_branch_dag', 'dataset_consumes_1', 'example_xcom', 'example_trigger_controller_dag', 'tutorial_objectstorage', 'example_branch_datetime_operator_3', 'example_external_task_marker_parent', 'example_xcom_args_with_operators', 'dataset_produces_2', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_branch_dop_operator_v3', 'example_trigger_target_dag', 'tutorial', 'example_setup_teardown', 'example_subdag_operator.section-2', 'example_skip_dag', 'dataset_produces_1', 'example_passing_params_via_test_command', 'example_external_task_marker_child', 'example_sla_dag', 'example_weekday_branch_operator', 'latest_only', 'example_bash_operator', 'example_time_delta_sensor_async', 'example_sensor_decorator', 'example_setup_teardown_taskflow', 'dataset_consumes_1_never_scheduled', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_branch_labels', 'example_params_ui_tutorial', 'example_python_decorator', 'example_branch_datetime_operator_2', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_complex', 'example_short_circuit_operator', 'dataset_consumes_unknown_never_scheduled', 'dag_id_1', 'example_python_operator', 'latest_only_with_trigger' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:27:45.286+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.286+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:27:45.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.307+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:27:45.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.309+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:27:45.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.310+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:27:45.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.311+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:27:45.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.312+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:27:45.313+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.313+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:27:45.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.313+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:27:45.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.316+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.317+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.317+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:27:45.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.319+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.322+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.324+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.324+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.327+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.327+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.332+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.332+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:26:00+00:00, run_after=2024-03-07 00:27:00+00:00
[2024-03-07T02:27:45.335+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.334+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.335+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.335+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:27:45.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.336+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:27:45.337+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.337+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:27:45.338+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.338+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.339+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.339+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:27:45.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:27:45.342+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.342+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.343+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:27:45.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.343+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:27:45.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.348+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:26:00+00:00, run_after=2024-03-07 00:27:00+00:00
[2024-03-07T02:27:45.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:27:45.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:27:45.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.350+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:27:45.351+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.351+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:27:45.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.353+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.355+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.355+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.356+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.355+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.359+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.359+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:24:00+00:00, run_after=2024-03-07 00:26:00+00:00
[2024-03-07T02:27:45.360+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.360+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:27:45.360+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.360+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:27:45.361+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.361+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:27:45.362+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.362+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.363+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.363+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.363+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.363+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:27:45.364+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.364+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:27:45.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.365+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:27:45.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.367+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.367+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:27:45.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.368+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:27:45.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.369+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:27:45.370+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.370+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.371+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.371+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.372+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.372+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:27:45.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.373+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:27:45.374+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.374+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:27:45.375+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.375+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:27:45.402+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.401+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:27:45.405+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.405+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:27:45.405+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:27:45.405+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:27:45.417+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.078 seconds
[2024-03-07T02:29:22.367+0200] {processor.py:161} INFO - Started process (PID=25942) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:29:22.368+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:29:22.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.368+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:29:22.370+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.370+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:29:22.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.430+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:29:22.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.431+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:29:22.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.452+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:29:22.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.454+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:29:22.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.515+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:29:22.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.530+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:29:22.722+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.721+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:29:22.741+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.741+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:29:22.850+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:22.850+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:29:22.863+0200] {processor.py:840} INFO - DAG(s) 'example_time_delta_sensor_async', 'example_weekday_branch_operator', 'example_bash_operator', 'example_branch_datetime_operator_3', 'example_passing_params_via_test_command', 'latest_only_with_trigger', 'example_dag_decorator', 'example_dynamic_task_mapping', 'example_skip_dag', 'dataset_produces_2', 'example_external_task_marker_parent', 'tutorial', 'dataset_consumes_1_and_2', 'example_task_group', 'dag_id_2', 'tutorial_taskflow_api', 'dag_id_1', 'example_params_trigger_ui', 'example_xcom_args_with_operators', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_sensor_decorator', 'example_nested_branch_dag', 'example_setup_teardown_taskflow', 'example_trigger_controller_dag', 'example_branch_datetime_operator_2', 'example_external_task_marker_child', 'dataset_consumes_1_never_scheduled', 'example_setup_teardown', 'example_params_ui_tutorial', 'example_short_circuit_decorator', 'dag_id_3', 'example_python_decorator', 'example_branch_dop_operator_v3', 'tutorial_objectstorage', 'example_python_operator', 'example_xcom', 'example_complex', 'tutorial_dag', 'dataset_consumes_1', 'dataset_produces_1', 'example_branch_labels', 'dataset_consumes_unknown_never_scheduled', 'latest_only', 'example_sla_dag', 'example_sensors', 'example_xcom_args', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_trigger_target_dag', 'example_short_circuit_operator', 'example_branch_datetime_operator', 'example_task_group_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:29:23.270+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.270+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:29:23.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.287+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:29:23.290+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.290+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:29:23.290+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.290+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:29:23.291+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.291+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:29:23.292+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.292+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:29:23.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.293+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:29:23.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.293+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:29:23.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.295+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.296+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.296+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:29:23.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.298+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.300+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.302+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.302+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.304+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.304+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.309+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:28:00+00:00, run_after=2024-03-07 00:29:00+00:00
[2024-03-07T02:29:23.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.311+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.312+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:29:23.313+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.313+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:29:23.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.314+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:29:23.315+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.315+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.315+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:29:23.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.316+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:29:23.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.318+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.319+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:29:23.320+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.319+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:29:23.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.324+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:28:00+00:00, run_after=2024-03-07 00:29:00+00:00
[2024-03-07T02:29:23.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.325+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:29:23.326+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.326+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:29:23.327+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.327+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:29:23.328+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.328+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:29:23.329+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.329+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.329+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.330+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.331+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.331+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.332+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.332+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.335+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.335+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:26:00+00:00, run_after=2024-03-07 00:28:00+00:00
[2024-03-07T02:29:23.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.336+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:29:23.338+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.337+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:29:23.338+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.338+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:29:23.339+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.339+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.341+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:29:23.341+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.341+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:29:23.342+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.342+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:29:23.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.344+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.344+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:29:23.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.345+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:29:23.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.346+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:29:23.347+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.347+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.347+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.348+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:29:23.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.349+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:29:23.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.350+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:29:23.351+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.350+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:29:23.377+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.377+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:29:23.380+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.380+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:29:23.380+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:29:23.380+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:29:23.393+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.027 seconds
[2024-03-07T02:31:07.456+0200] {processor.py:161} INFO - Started process (PID=26044) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:31:07.457+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:31:07.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.457+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:31:07.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.459+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:31:07.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.519+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:31:07.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.520+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:31:07.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.541+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:31:07.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.542+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:31:07.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.600+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:31:07.615+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.615+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:31:07.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.809+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:31:07.830+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.830+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:31:07.942+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:07.941+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:31:07.956+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_task_group_decorator', 'dag_id_3', 'example_sensor_decorator', 'example_branch_datetime_operator_2', 'dataset_produces_2', 'example_branch_datetime_operator_3', 'example_python_operator', 'example_setup_teardown', 'tutorial_dag', 'example_dynamic_task_mapping', 'example_dag_decorator', 'dataset_consumes_1_and_2', 'example_nested_branch_dag', 'example_branch_labels', 'dataset_consumes_1', 'example_task_group', 'latest_only_with_trigger', 'example_sensors', 'example_bash_operator', 'example_external_task_marker_child', 'example_params_trigger_ui', 'dataset_consumes_1_never_scheduled', 'dag_id_1', 'example_sla_dag', 'dag_id_2', 'example_setup_teardown_taskflow', 'dataset_consumes_unknown_never_scheduled', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_python_decorator', 'tutorial_taskflow_api', 'example_time_delta_sensor_async', 'example_branch_dop_operator_v3', 'latest_only', 'example_xcom_args_with_operators', 'example_skip_dag', 'example_weekday_branch_operator', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'tutorial_objectstorage', 'example_branch_datetime_operator', 'example_external_task_marker_parent', 'example_short_circuit_operator', 'tutorial', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_xcom', 'example_xcom_args', 'dataset_produces_1', 'example_trigger_target_dag' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:31:08.384+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.384+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:31:08.403+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.403+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:31:08.405+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.405+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:31:08.406+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.406+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:31:08.407+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.406+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:31:08.407+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.407+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:31:08.408+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.408+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:31:08.409+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.409+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:31:08.411+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.411+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.412+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.412+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:31:08.415+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.414+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.417+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.417+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.419+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.419+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.421+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.421+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.426+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.426+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:30:00+00:00, run_after=2024-03-07 00:31:00+00:00
[2024-03-07T02:31:08.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.427+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.428+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:31:08.429+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.429+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:31:08.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.430+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:31:08.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.431+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.431+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:31:08.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.432+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:31:08.434+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.434+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.435+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.435+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:31:08.436+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.436+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:31:08.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.441+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:30:00+00:00, run_after=2024-03-07 00:31:00+00:00
[2024-03-07T02:31:08.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.442+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:31:08.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.443+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:31:08.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:31:08.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:31:08.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.445+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.446+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.447+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.448+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.449+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.453+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:28:00+00:00, run_after=2024-03-07 00:30:00+00:00
[2024-03-07T02:31:08.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.453+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:31:08.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.454+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:31:08.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.455+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:31:08.456+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.456+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.458+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:31:08.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.458+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:31:08.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:31:08.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.462+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:31:08.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:31:08.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:31:08.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.464+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.465+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.465+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.466+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:31:08.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.467+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:31:08.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.467+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:31:08.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.468+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:31:08.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.494+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:31:08.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:31:08.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:31:08.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:31:08.510+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.056 seconds
[2024-03-07T02:32:54.045+0200] {processor.py:161} INFO - Started process (PID=26155) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:32:54.046+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:32:54.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.047+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:32:54.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.048+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:32:54.109+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.109+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:32:54.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.109+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:32:54.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.130+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:32:54.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.132+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:32:54.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.197+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:32:54.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.212+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:32:54.412+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.411+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:32:54.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.432+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:32:54.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.548+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:32:54.563+0200] {processor.py:840} INFO - DAG(s) 'dag_id_1', 'dataset_produces_1', 'example_short_circuit_operator', 'example_python_operator', 'dataset_consumes_unknown_never_scheduled', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_passing_params_via_test_command', 'example_sla_dag', 'example_nested_branch_dag', 'example_task_group_decorator', 'dag_id_3', 'example_xcom_args_with_operators', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_skip_dag', 'tutorial_taskflow_api', 'example_branch_labels', 'latest_only_with_trigger', 'example_external_task_marker_child', 'example_dag_decorator', 'example_external_task_marker_parent', 'example_xcom_args', 'example_setup_teardown', 'tutorial_dag', 'example_sensor_decorator', 'example_bash_operator', 'example_dynamic_task_mapping', 'dataset_consumes_1_never_scheduled', 'tutorial_objectstorage', 'example_short_circuit_decorator', 'dataset_produces_2', 'example_task_group', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'dag_id_2', 'tutorial', 'example_python_decorator', 'dataset_consumes_1_and_2', 'example_params_ui_tutorial', 'example_branch_dop_operator_v3', 'example_weekday_branch_operator', 'example_time_delta_sensor_async', 'example_branch_datetime_operator_3', 'example_sensors', 'example_complex', 'example_params_trigger_ui', 'example_xcom', 'example_trigger_target_dag', 'latest_only', 'example_trigger_controller_dag', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:32:54.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.974+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:32:54.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.992+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:32:54.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.994+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:32:54.995+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.995+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:32:54.995+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.995+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:32:54.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.996+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:32:54.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.997+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:32:54.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.998+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:32:55.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:54.999+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.001+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.001+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:32:55.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.007+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.009+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.013+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:31:00+00:00, run_after=2024-03-07 00:32:00+00:00
[2024-03-07T02:32:55.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.015+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:32:55.018+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.018+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:32:55.019+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.019+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:32:55.020+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.020+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.021+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:32:55.022+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.022+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:32:55.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.024+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.025+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:32:55.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.025+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:32:55.030+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.030+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:31:00+00:00, run_after=2024-03-07 00:32:00+00:00
[2024-03-07T02:32:55.031+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.031+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:32:55.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.031+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:32:55.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.032+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:32:55.033+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.033+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:32:55.034+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.034+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.035+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.036+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.036+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.038+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.041+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:30:00+00:00, run_after=2024-03-07 00:32:00+00:00
[2024-03-07T02:32:55.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.042+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:32:55.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.042+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:32:55.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.043+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:32:55.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.044+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.045+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.046+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:32:55.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.046+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:32:55.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.047+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:32:55.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.050+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.050+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:32:55.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.051+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:32:55.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.052+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:32:55.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.053+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.054+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.055+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:32:55.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.055+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:32:55.056+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.056+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:32:55.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.057+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:32:55.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.081+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:32:55.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:32:55.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:32:55.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:32:55.098+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.055 seconds
[2024-03-07T02:34:36.508+0200] {processor.py:161} INFO - Started process (PID=27938) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:34:36.509+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:34:36.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.509+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:34:36.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.511+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:34:36.573+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.572+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:34:36.573+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.573+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:34:36.594+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.594+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:34:36.596+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.596+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:34:36.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.657+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:34:36.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.672+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:34:36.873+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.872+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:34:36.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:36.893+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:34:37.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.004+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:34:37.018+0200] {processor.py:840} INFO - DAG(s) 'example_branch_labels', 'example_short_circuit_operator', 'example_bash_operator', 'example_params_trigger_ui', 'dataset_consumes_1_never_scheduled', 'example_time_delta_sensor_async', 'example_external_task_marker_parent', 'example_branch_dop_operator_v3', 'dataset_consumes_unknown_never_scheduled', 'latest_only', 'tutorial_objectstorage', 'latest_only_with_trigger', 'example_xcom', 'example_subdag_operator.section-2', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_trigger_controller_dag', 'dataset_produces_2', 'example_sensors', 'example_trigger_target_dag', 'example_python_decorator', 'dag_id_1', 'example_branch_datetime_operator', 'example_sensor_decorator', 'example_setup_teardown', 'example_passing_params_via_test_command', 'tutorial_dag', 'example_setup_teardown_taskflow', 'example_skip_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom_args', 'example_branch_datetime_operator_2', 'example_task_group', 'tutorial', 'example_python_operator', 'example_xcom_args_with_operators', 'example_sla_dag', 'dataset_consumes_1', 'example_dynamic_task_mapping', 'example_complex', 'tutorial_taskflow_api', 'dataset_produces_1', 'dataset_consumes_1_and_2', 'example_dag_decorator', 'example_short_circuit_decorator', 'dag_id_3', 'example_external_task_marker_child', 'example_params_ui_tutorial', 'dag_id_2', 'example_weekday_branch_operator', 'example_nested_branch_dag', 'example_branch_datetime_operator_3', 'example_task_group_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:34:37.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.438+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:34:37.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.457+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:34:37.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.459+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:34:37.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.460+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:34:37.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.461+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:34:37.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.462+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:34:37.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.463+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:34:37.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.464+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:34:37.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.466+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.467+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:34:37.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:33:00+00:00, run_after=2024-03-07 00:34:00+00:00
[2024-03-07T02:34:37.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.485+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:34:37.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:34:37.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:34:37.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:34:37.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:34:37.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:34:37.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:34:37.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:33:00+00:00, run_after=2024-03-07 00:34:00+00:00
[2024-03-07T02:34:37.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:34:37.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:34:37.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:34:37.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:34:37.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.502+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.505+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:32:00+00:00, run_after=2024-03-07 00:34:00+00:00
[2024-03-07T02:34:37.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.509+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:34:37.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:34:37.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:34:37.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.511+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.512+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.513+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:34:37.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.514+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:34:37.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.515+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:34:37.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.517+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:34:37.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.519+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:34:37.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.520+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:34:37.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.521+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.522+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.522+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:34:37.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.523+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:34:37.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.525+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:34:37.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.525+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:34:37.551+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.551+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:34:37.554+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.554+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:34:37.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:34:37.555+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:34:37.567+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.060 seconds
[2024-03-07T02:36:22.460+0200] {processor.py:161} INFO - Started process (PID=28042) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:36:22.461+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:36:22.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.461+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:36:22.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.463+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:36:22.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.523+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:36:22.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.524+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:36:22.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.545+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:36:22.546+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.546+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:36:22.607+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.605+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:36:22.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.620+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:36:22.813+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.812+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:36:22.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.833+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:36:22.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:22.943+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:36:22.958+0200] {processor.py:840} INFO - DAG(s) 'dataset_produces_1', 'example_dynamic_task_mapping', 'latest_only_with_trigger', 'dag_id_1', 'example_branch_datetime_operator', 'example_complex', 'example_branch_labels', 'example_branch_datetime_operator_3', 'example_skip_dag', 'example_external_task_marker_child', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_setup_teardown', 'example_branch_dop_operator_v3', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'latest_only', 'tutorial', 'example_python_decorator', 'example_bash_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_python_operator', 'dataset_consumes_1_never_scheduled', 'example_external_task_marker_parent', 'example_nested_branch_dag', 'example_sla_dag', 'example_branch_datetime_operator_2', 'example_xcom_args_with_operators', 'dataset_produces_2', 'dag_id_2', 'example_xcom', 'example_dag_decorator', 'example_task_group_decorator', 'example_xcom_args', 'tutorial_dag', 'example_params_trigger_ui', 'example_trigger_controller_dag', 'tutorial_objectstorage', 'example_task_group', 'example_time_delta_sensor_async', 'example_weekday_branch_operator', 'example_short_circuit_operator', 'example_trigger_target_dag', 'example_passing_params_via_test_command', 'dataset_consumes_1', 'example_params_ui_tutorial', 'dag_id_3', 'example_short_circuit_decorator', 'example_sensors', 'dataset_consumes_1_and_2', 'example_setup_teardown_taskflow', 'tutorial_taskflow_api' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:36:23.399+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.399+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:36:23.418+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.417+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:36:23.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.420+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:36:23.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.420+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:36:23.421+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.421+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:36:23.422+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.422+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:36:23.423+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.423+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:36:23.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.423+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:36:23.427+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.426+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.427+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:36:23.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.430+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.432+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.435+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.435+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.437+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.437+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.442+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:35:00+00:00, run_after=2024-03-07 00:36:00+00:00
[2024-03-07T02:36:23.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.445+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:36:23.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.446+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:36:23.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.447+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:36:23.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.448+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.449+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:36:23.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.449+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:36:23.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.451+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:36:23.453+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.453+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:36:23.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:35:00+00:00, run_after=2024-03-07 00:36:00+00:00
[2024-03-07T02:36:23.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.458+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:36:23.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:36:23.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:36:23.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.460+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:36:23.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.462+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.464+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.465+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.465+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:34:00+00:00, run_after=2024-03-07 00:36:00+00:00
[2024-03-07T02:36:23.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:36:23.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:36:23.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:36:23.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:36:23.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:36:23.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:36:23.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:36:23.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:36:23.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.479+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:36:23.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.480+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.482+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.483+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:36:23.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.484+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:36:23.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.485+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:36:23.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.486+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:36:23.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.513+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:36:23.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.516+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:36:23.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:36:23.517+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:36:23.529+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.071 seconds
[2024-03-07T02:38:11.510+0200] {processor.py:161} INFO - Started process (PID=28144) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:38:11.512+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:38:11.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.512+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:38:11.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.513+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:38:11.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.574+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:38:11.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.575+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:38:11.596+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.596+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:38:11.598+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.598+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:38:11.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.660+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:38:11.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.674+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:38:11.873+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.872+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:38:11.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:11.893+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:38:12.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.012+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:38:12.027+0200] {processor.py:840} INFO - DAG(s) 'example_external_task_marker_parent', 'dag_id_2', 'tutorial', 'example_short_circuit_operator', 'example_trigger_target_dag', 'dataset_produces_1', 'example_time_delta_sensor_async', 'example_python_operator', 'latest_only', 'example_passing_params_via_test_command', 'example_branch_labels', 'example_branch_dop_operator_v3', 'dataset_consumes_1_never_scheduled', 'dataset_consumes_1_and_2', 'example_external_task_marker_child', 'example_sla_dag', 'dag_id_3', 'dataset_produces_2', 'tutorial_taskflow_api', 'dataset_consumes_unknown_never_scheduled', 'example_params_trigger_ui', 'example_python_decorator', 'example_setup_teardown', 'example_xcom_args', 'example_setup_teardown_taskflow', 'example_sensor_decorator', 'example_bash_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_datetime_operator', 'dag_id_1', 'example_complex', 'example_nested_branch_dag', 'latest_only_with_trigger', 'example_task_group', 'dataset_consumes_1', 'example_skip_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_ui_tutorial', 'example_short_circuit_decorator', 'example_xcom', 'example_xcom_args_with_operators', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_trigger_controller_dag', 'tutorial_dag', 'example_dynamic_task_mapping', 'example_task_group_decorator', 'tutorial_objectstorage', 'example_sensors', 'example_dag_decorator', 'example_weekday_branch_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:38:12.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.467+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:38:12.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.485+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:38:12.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.487+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:38:12.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.488+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:38:12.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.488+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:38:12.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.489+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:38:12.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.490+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:38:12.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.491+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:38:12.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.493+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.494+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:38:12.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:37:00+00:00, run_after=2024-03-07 00:38:00+00:00
[2024-03-07T02:38:12.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.511+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:38:12.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.512+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:38:12.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.513+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:38:12.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.514+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.515+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:38:12.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.516+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:38:12.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:38:12.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.519+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:38:12.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.523+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:37:00+00:00, run_after=2024-03-07 00:38:00+00:00
[2024-03-07T02:38:12.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.525+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:38:12.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.526+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:38:12.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.526+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:38:12.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.527+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:38:12.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.528+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.529+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.529+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.531+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.532+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.532+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.536+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.536+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:36:00+00:00, run_after=2024-03-07 00:38:00+00:00
[2024-03-07T02:38:12.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.536+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:38:12.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.537+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:38:12.538+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.538+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:38:12.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.539+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.540+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.540+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.540+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.540+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:38:12.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.541+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:38:12.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.542+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:38:12.544+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.544+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.544+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:38:12.546+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.545+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:38:12.547+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.547+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:38:12.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.548+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.549+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.550+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.550+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:38:12.550+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.550+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:38:12.551+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.551+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:38:12.552+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.552+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:38:12.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.579+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:38:12.583+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.582+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:38:12.583+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:38:12.583+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:38:12.598+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.090 seconds
[2024-03-07T02:39:58.015+0200] {processor.py:161} INFO - Started process (PID=28287) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:39:58.017+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:39:58.017+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.017+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:39:58.019+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.018+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:39:58.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.079+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:39:58.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.080+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:39:58.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.099+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:39:58.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.100+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:39:58.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.157+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:39:58.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.171+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:39:58.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.364+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:39:58.383+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.383+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:39:58.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.491+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:39:58.506+0200] {processor.py:840} INFO - DAG(s) 'example_weekday_branch_operator', 'example_branch_datetime_operator_2', 'example_branch_labels', 'dataset_consumes_unknown_never_scheduled', 'example_python_decorator', 'example_task_group_decorator', 'dataset_consumes_1', 'example_params_ui_tutorial', 'example_trigger_controller_dag', 'example_skip_dag', 'example_short_circuit_decorator', 'dag_id_2', 'dag_id_1', 'example_nested_branch_dag', 'example_dynamic_task_mapping', 'dataset_produces_1', 'dataset_consumes_1_never_scheduled', 'example_dag_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_python_operator', 'example_time_delta_sensor_async', 'example_trigger_target_dag', 'example_complex', 'example_sla_dag', 'dataset_produces_2', 'example_subdag_operator.section-2', 'tutorial_objectstorage', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_branch_datetime_operator_3', 'example_sensor_decorator', 'example_setup_teardown', 'example_sensors', 'example_bash_operator', 'tutorial', 'example_short_circuit_operator', 'example_passing_params_via_test_command', 'example_task_group', 'example_branch_datetime_operator', 'example_setup_teardown_taskflow', 'tutorial_taskflow_api', 'tutorial_dag', 'example_xcom_args_with_operators', 'example_params_trigger_ui', 'dag_id_3', 'example_xcom', 'example_xcom_args', 'example_branch_dop_operator_v3', 'latest_only_with_trigger', 'dataset_consumes_1_and_2', 'latest_only', 'example_external_task_marker_parent', 'example_external_task_marker_child' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:39:58.924+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.924+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:39:58.944+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.943+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:39:58.946+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.946+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:39:58.947+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.947+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:39:58.948+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.948+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:39:58.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.949+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:39:58.950+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.949+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:39:58.950+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.950+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:39:58.953+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.953+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.953+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:39:58.956+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.956+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.958+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.958+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.960+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.962+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.967+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:38:00+00:00, run_after=2024-03-07 00:39:00+00:00
[2024-03-07T02:39:58.969+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.969+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.970+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:39:58.971+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.970+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:39:58.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.971+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:39:58.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.972+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.973+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.973+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:39:58.974+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.974+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:39:58.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.976+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.977+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.977+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:39:58.978+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.978+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:39:58.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:38:00+00:00, run_after=2024-03-07 00:39:00+00:00
[2024-03-07T02:39:58.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:39:58.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.984+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:39:58.985+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:39:58.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:39:58.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.986+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.987+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.987+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.989+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.993+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:36:00+00:00, run_after=2024-03-07 00:38:00+00:00
[2024-03-07T02:39:58.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.994+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:39:58.995+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.995+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:39:58.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:39:58.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.997+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:58.999+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.999+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:39:59.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:58.999+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:39:59.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:39:59.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:59.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:39:59.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.004+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:39:59.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:39:59.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.006+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:59.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.007+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:59.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.008+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:39:59.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.008+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:39:59.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.009+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:39:59.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.010+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:39:59.034+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.034+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:39:59.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:39:59.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:39:59.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:39:59.049+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.036 seconds
[2024-03-07T02:41:49.733+0200] {processor.py:161} INFO - Started process (PID=28391) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:41:49.734+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:41:49.735+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.734+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:41:49.736+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.736+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:41:49.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.808+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:41:49.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.809+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:41:49.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.833+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:41:49.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.835+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:41:49.906+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.904+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:41:49.924+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:49.924+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:41:50.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:50.160+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:41:50.191+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:50.191+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:41:50.361+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:50.361+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:41:50.379+0200] {processor.py:840} INFO - DAG(s) 'example_sensors', 'example_params_trigger_ui', 'example_task_group_decorator', 'example_xcom_args_with_operators', 'example_dynamic_task_mapping', 'tutorial_taskflow_api', 'example_branch_labels', 'example_task_group', 'dataset_consumes_unknown_never_scheduled', 'example_subdag_operator.section-1', 'example_time_delta_sensor_async', 'dag_id_2', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_datetime_operator_2', 'example_sensor_decorator', 'dag_id_1', 'example_trigger_controller_dag', 'example_short_circuit_decorator', 'example_branch_datetime_operator_3', 'example_sla_dag', 'example_python_decorator', 'dataset_produces_2', 'example_bash_operator', 'latest_only', 'example_dag_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_consumes_1', 'dag_id_3', 'example_trigger_target_dag', 'tutorial', 'example_branch_dop_operator_v3', 'dataset_consumes_1_never_scheduled', 'example_xcom', 'example_python_operator', 'example_nested_branch_dag', 'example_external_task_marker_parent', 'example_xcom_args', 'example_skip_dag', 'example_weekday_branch_operator', 'latest_only_with_trigger', 'dataset_produces_1', 'example_setup_teardown_taskflow', 'example_params_ui_tutorial', 'tutorial_dag', 'example_passing_params_via_test_command', 'dataset_consumes_1_and_2', 'example_external_task_marker_child', 'example_short_circuit_operator', 'example_setup_teardown', 'tutorial_objectstorage', 'example_complex', 'example_branch_datetime_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:41:51.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.041+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:41:51.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.071+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:41:51.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.074+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:41:51.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.076+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:41:51.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.078+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:41:51.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.080+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:41:51.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.081+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:41:51.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.082+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:41:51.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.086+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.087+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:41:51.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.097+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.109+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.109+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:40:00+00:00, run_after=2024-03-07 00:41:00+00:00
[2024-03-07T02:41:51.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.112+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.114+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:41:51.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.115+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:41:51.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.118+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:41:51.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.120+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.121+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:41:51.123+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.123+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:41:51.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.127+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:41:51.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.129+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:41:51.136+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.136+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:40:00+00:00, run_after=2024-03-07 00:41:00+00:00
[2024-03-07T02:41:51.137+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.137+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:41:51.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:41:51.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:41:51.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:41:51.142+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.146+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.146+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.147+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.147+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.152+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:38:00+00:00, run_after=2024-03-07 00:40:00+00:00
[2024-03-07T02:41:51.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:41:51.156+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.155+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:41:51.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:41:51.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.159+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.161+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.160+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.161+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:41:51.163+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.162+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:41:51.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.163+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:41:51.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.166+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.168+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.168+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:41:51.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.169+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:41:51.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.170+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:41:51.172+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.172+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.174+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.176+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.176+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:41:51.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.177+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:41:51.178+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.178+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:41:51.179+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.179+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:41:51.219+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.219+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:41:51.223+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.223+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:41:51.224+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:41:51.224+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:41:51.240+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.509 seconds
[2024-03-07T02:43:34.025+0200] {processor.py:161} INFO - Started process (PID=28494) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:43:34.026+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:43:34.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.027+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:43:34.028+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.028+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:43:34.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.088+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:43:34.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.089+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:43:34.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.110+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:43:34.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.112+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:43:34.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.172+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:43:34.187+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.187+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:43:34.382+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.381+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:43:34.400+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.400+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:43:34.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.511+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:43:34.524+0200] {processor.py:840} INFO - DAG(s) 'dataset_produces_2', 'dag_id_2', 'tutorial', 'example_xcom_args', 'example_bash_operator', 'dataset_consumes_1_and_2', 'example_branch_datetime_operator_3', 'example_python_operator', 'example_nested_branch_dag', 'example_task_group_decorator', 'tutorial_objectstorage', 'example_sla_dag', 'latest_only_with_trigger', 'example_complex', 'latest_only', 'example_dag_decorator', 'example_branch_datetime_operator_2', 'example_passing_params_via_test_command', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom_args_with_operators', 'example_sensors', 'example_subdag_operator.section-1', 'example_branch_dop_operator_v3', 'dataset_consumes_1', 'example_trigger_target_dag', 'example_short_circuit_operator', 'example_branch_labels', 'example_params_ui_tutorial', 'example_subdag_operator.section-2', 'example_xcom', 'example_python_decorator', 'dataset_consumes_unknown_never_scheduled', 'example_params_trigger_ui', 'example_external_task_marker_parent', 'example_short_circuit_decorator', 'example_branch_datetime_operator', 'example_dynamic_task_mapping', 'example_skip_dag', 'example_sensor_decorator', 'dataset_consumes_1_never_scheduled', 'example_setup_teardown_taskflow', 'dag_id_3', 'example_trigger_controller_dag', 'example_subdag_operator', 'example_setup_teardown', 'example_task_group', 'example_time_delta_sensor_async', 'dag_id_1', 'tutorial_dag', 'example_weekday_branch_operator', 'tutorial_taskflow_api', 'dataset_produces_1', 'example_external_task_marker_child' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:43:34.929+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.929+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:43:34.947+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.946+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:43:34.948+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.948+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:43:34.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.949+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:43:34.950+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.950+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:43:34.951+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.950+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:43:34.951+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.951+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:43:34.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.952+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:43:34.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.954+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.955+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.954+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:43:34.957+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.957+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.959+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.959+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.961+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.963+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.968+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.968+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:42:00+00:00, run_after=2024-03-07 00:43:00+00:00
[2024-03-07T02:43:34.971+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.971+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.971+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:43:34.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.972+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:43:34.973+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.973+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:43:34.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.974+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.975+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:43:34.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.976+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:43:34.978+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.978+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.979+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.979+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:43:34.980+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.979+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:43:34.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.984+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:42:00+00:00, run_after=2024-03-07 00:43:00+00:00
[2024-03-07T02:43:34.985+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:43:34.985+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:43:34.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.986+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:43:34.987+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.987+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:43:34.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.989+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.995+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.995+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:40:00+00:00, run_after=2024-03-07 00:42:00+00:00
[2024-03-07T02:43:34.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:43:34.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:43:34.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.997+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:43:34.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:34.999+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:34.999+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:35.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:43:35.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:43:35.001+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.001+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:43:35.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.004+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:35.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:43:35.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:43:35.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.006+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:43:35.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.007+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:35.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.008+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:35.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.009+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:43:35.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.010+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:43:35.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.011+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:43:35.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.011+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:43:35.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.037+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:43:35.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.040+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:43:35.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:43:35.041+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:43:35.053+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.030 seconds
[2024-03-07T02:45:19.012+0200] {processor.py:161} INFO - Started process (PID=28594) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:45:19.013+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:45:19.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.013+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:45:19.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.014+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:45:19.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.076+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:45:19.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.076+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:45:19.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.097+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:45:19.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.099+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:45:19.161+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.159+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:45:19.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.173+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:45:19.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.366+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:45:19.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.385+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:45:19.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.493+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:45:19.508+0200] {processor.py:840} INFO - DAG(s) 'dag_id_1', 'example_trigger_target_dag', 'example_branch_labels', 'dag_id_3', 'example_params_ui_tutorial', 'example_setup_teardown', 'example_xcom_args_with_operators', 'tutorial_objectstorage', 'dataset_consumes_1', 'example_sensor_decorator', 'example_short_circuit_decorator', 'latest_only', 'example_python_operator', 'example_task_group_decorator', 'example_external_task_marker_child', 'example_branch_datetime_operator', 'tutorial', 'example_dynamic_task_mapping', 'example_branch_datetime_operator_3', 'example_subdag_operator.section-2', 'example_setup_teardown_taskflow', 'example_nested_branch_dag', 'example_xcom_args', 'example_params_trigger_ui', 'tutorial_dag', 'dag_id_2', 'example_python_decorator', 'example_passing_params_via_test_command', 'example_external_task_marker_parent', 'example_xcom', 'latest_only_with_trigger', 'dataset_produces_1', 'example_time_delta_sensor_async', 'dataset_produces_2', 'dataset_consumes_1_never_scheduled', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_short_circuit_operator', 'example_dag_decorator', 'dataset_consumes_unknown_never_scheduled', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_sensors', 'example_branch_dop_operator_v3', 'example_trigger_controller_dag', 'dataset_consumes_1_and_2', 'example_branch_datetime_operator_2', 'example_weekday_branch_operator', 'example_sla_dag', 'example_skip_dag', 'example_complex', 'tutorial_taskflow_api', 'example_bash_operator', 'example_task_group' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:45:19.934+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.933+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:45:19.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.951+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:45:19.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.954+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:45:19.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.954+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:45:19.955+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.955+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:45:19.956+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.956+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:45:19.957+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.957+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:45:19.958+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.958+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:45:19.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.960+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.961+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:45:19.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.963+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.965+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.965+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.967+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.969+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.968+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.974+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.973+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:44:00+00:00, run_after=2024-03-07 00:45:00+00:00
[2024-03-07T02:45:19.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.975+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.976+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:45:19.977+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.977+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:45:19.978+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.978+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:45:19.979+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.979+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.979+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.979+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:45:19.980+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.980+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:45:19.982+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.982+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:45:19.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:45:19.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:44:00+00:00, run_after=2024-03-07 00:45:00+00:00
[2024-03-07T02:45:19.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:45:19.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:45:19.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:45:19.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.992+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:45:19.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.993+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.994+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.995+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.995+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:19.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:19.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:42:00+00:00, run_after=2024-03-07 00:44:00+00:00
[2024-03-07T02:45:20.001+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:45:20.001+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.001+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:45:20.002+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.002+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:45:20.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.004+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.004+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:45:20.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:45:20.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.006+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:45:20.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.008+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.009+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:45:20.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.010+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:45:20.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.010+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:45:20.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.011+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.012+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.013+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:45:20.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.014+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:45:20.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.014+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:45:20.015+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.015+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:45:20.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.042+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:45:20.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.045+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:45:20.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:45:20.046+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:45:20.058+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.048 seconds
[2024-03-07T02:47:09.030+0200] {processor.py:161} INFO - Started process (PID=28691) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:47:09.032+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:47:09.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.032+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:47:09.034+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.034+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:47:09.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.117+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:47:09.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.118+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:47:09.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.148+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:47:09.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.150+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:47:09.240+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.238+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:47:09.260+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.259+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:47:09.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.532+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:47:09.564+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.564+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:47:09.741+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:09.741+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:47:09.762+0200] {processor.py:840} INFO - DAG(s) 'latest_only', 'example_dag_decorator', 'example_task_group', 'example_xcom', 'example_weekday_branch_operator', 'latest_only_with_trigger', 'example_time_delta_sensor_async', 'example_trigger_controller_dag', 'example_sla_dag', 'example_dynamic_task_mapping', 'example_xcom_args', 'dag_id_2', 'example_complex', 'example_xcom_args_with_operators', 'example_params_ui_tutorial', 'example_sensors', 'example_bash_operator', 'example_python_decorator', 'example_passing_params_via_test_command', 'example_params_trigger_ui', 'example_setup_teardown', 'dataset_produces_1', 'dataset_consumes_1_never_scheduled', 'example_trigger_target_dag', 'example_branch_datetime_operator_2', 'example_short_circuit_operator', 'example_task_group_decorator', 'example_branch_labels', 'tutorial_objectstorage', 'example_skip_dag', 'dag_id_1', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator_3', 'example_python_operator', 'dataset_produces_2', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_sensor_decorator', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_external_task_marker_child', 'example_branch_datetime_operator', 'dataset_consumes_unknown_never_scheduled', 'tutorial', 'dag_id_3', 'example_short_circuit_decorator', 'example_nested_branch_dag', 'example_subdag_operator.section-2', 'tutorial_dag', 'example_setup_teardown_taskflow', 'example_external_task_marker_parent', 'example_subdag_operator.section-1', 'example_subdag_operator', 'dataset_consumes_1' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:47:10.412+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.412+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:47:10.434+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.434+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:47:10.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.438+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:47:10.439+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.439+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:47:10.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.440+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:47:10.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.441+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:47:10.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.442+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:47:10.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.443+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:47:10.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.445+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.446+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:47:10.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.449+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.454+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:46:00+00:00, run_after=2024-03-07 00:47:00+00:00
[2024-03-07T02:47:10.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:47:10.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:47:10.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:47:10.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:47:10.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:47:10.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:47:10.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:47:10.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:46:00+00:00, run_after=2024-03-07 00:47:00+00:00
[2024-03-07T02:47:10.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:47:10.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.485+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:47:10.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:47:10.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:47:10.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.490+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:44:00+00:00, run_after=2024-03-07 00:46:00+00:00
[2024-03-07T02:47:10.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:47:10.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:47:10.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:47:10.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.502+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:47:10.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:47:10.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:47:10.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:47:10.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.509+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:47:10.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:47:10.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.511+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.512+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.513+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:47:10.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.514+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:47:10.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.515+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:47:10.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.516+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:47:10.551+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.551+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:47:10.556+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.556+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:47:10.556+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:47:10.556+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:47:10.571+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.543 seconds
[2024-03-07T02:49:01.525+0200] {processor.py:161} INFO - Started process (PID=28796) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:49:01.526+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:49:01.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.526+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:49:01.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.527+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:49:01.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.588+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:49:01.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.589+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:49:01.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.610+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:49:01.611+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.611+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:49:01.670+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.669+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:49:01.683+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.682+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:49:01.878+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.877+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:49:01.898+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:01.898+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:49:02.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.008+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:49:02.023+0200] {processor.py:840} INFO - DAG(s) 'example_sensors', 'example_external_task_marker_parent', 'tutorial_objectstorage', 'example_complex', 'tutorial_taskflow_api', 'example_subdag_operator.section-2', 'example_time_delta_sensor_async', 'dataset_consumes_1_never_scheduled', 'example_short_circuit_operator', 'example_external_task_marker_child', 'example_branch_datetime_operator_2', 'dag_id_2', 'dag_id_3', 'dataset_consumes_1', 'example_branch_datetime_operator_3', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'example_branch_labels', 'example_passing_params_via_test_command', 'example_skip_dag', 'dataset_consumes_unknown_never_scheduled', 'example_python_decorator', 'tutorial_dag', 'example_dag_decorator', 'dataset_consumes_1_and_2', 'dataset_produces_1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_bash_operator', 'dataset_produces_2', 'dag_id_1', 'example_dynamic_task_mapping', 'latest_only', 'example_xcom', 'example_task_group', 'example_python_operator', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_xcom_args', 'example_task_group_decorator', 'example_setup_teardown', 'example_xcom_args_with_operators', 'example_branch_datetime_operator', 'example_branch_dop_operator_v3', 'example_nested_branch_dag', 'example_weekday_branch_operator', 'example_short_circuit_decorator', 'example_setup_teardown_taskflow', 'example_sensor_decorator', 'tutorial', 'latest_only_with_trigger', 'example_sla_dag', 'example_trigger_target_dag', 'example_params_trigger_ui' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:49:02.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.450+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:49:02.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.468+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:49:02.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.471+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:49:02.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.472+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:49:02.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.473+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:49:02.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.474+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:49:02.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.474+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:49:02.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.475+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:49:02.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.477+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.478+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:49:02.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:48:00+00:00, run_after=2024-03-07 00:49:00+00:00
[2024-03-07T02:49:02.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:49:02.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.495+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:49:02.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:49:02.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:49:02.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:49:02.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:49:02.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.502+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:49:02.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:48:00+00:00, run_after=2024-03-07 00:49:00+00:00
[2024-03-07T02:49:02.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:49:02.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:49:02.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.509+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:49:02.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:49:02.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.511+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.511+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.512+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.513+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.514+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.517+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:46:00+00:00, run_after=2024-03-07 00:48:00+00:00
[2024-03-07T02:49:02.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:49:02.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.519+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:49:02.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.520+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:49:02.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.521+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.522+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.523+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:49:02.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.523+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:49:02.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.524+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:49:02.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.526+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.527+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:49:02.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.528+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:49:02.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.528+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:49:02.529+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.529+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.530+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.531+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:49:02.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.532+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:49:02.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.533+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:49:02.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.534+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:49:02.561+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.561+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:49:02.564+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.564+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:49:02.565+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:49:02.564+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:49:02.576+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.053 seconds
[2024-03-07T02:50:49.084+0200] {processor.py:161} INFO - Started process (PID=28904) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:50:49.085+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:50:49.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.086+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:50:49.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.087+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:50:49.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.148+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:50:49.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.148+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:50:49.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.169+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:50:49.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.171+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:50:49.233+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.232+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:50:49.247+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.247+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:50:49.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.439+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:50:49.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.459+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:50:49.567+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:49.567+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:50:49.580+0200] {processor.py:840} INFO - DAG(s) 'dataset_produces_2', 'tutorial_objectstorage', 'example_passing_params_via_test_command', 'example_python_decorator', 'example_params_ui_tutorial', 'example_branch_datetime_operator_2', 'example_weekday_branch_operator', 'example_dag_decorator', 'example_external_task_marker_parent', 'latest_only', 'example_setup_teardown', 'example_nested_branch_dag', 'example_short_circuit_decorator', 'example_skip_dag', 'tutorial_dag', 'example_time_delta_sensor_async', 'example_dynamic_task_mapping', 'example_bash_operator', 'dataset_consumes_1_never_scheduled', 'example_sensors', 'example_branch_datetime_operator', 'example_trigger_controller_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_external_task_marker_child', 'tutorial_taskflow_api', 'example_subdag_operator.section-1', 'example_branch_datetime_operator_3', 'example_branch_dop_operator_v3', 'example_short_circuit_operator', 'dataset_produces_1', 'latest_only_with_trigger', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'example_params_trigger_ui', 'example_xcom', 'dag_id_2', 'example_complex', 'example_trigger_target_dag', 'dataset_consumes_1_and_2', 'example_setup_teardown_taskflow', 'dag_id_1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_labels', 'example_task_group', 'example_xcom_args', 'dag_id_3', 'example_xcom_args_with_operators', 'example_python_operator', 'example_sla_dag', 'example_task_group_decorator', 'tutorial', 'dataset_consumes_1' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:50:50.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.024+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:50:50.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.042+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:50:50.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.044+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:50:50.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.045+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:50:50.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.045+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:50:50.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.046+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:50:50.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.047+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:50:50.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.048+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:50:50.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.049+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.050+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:50:50.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.055+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.059+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.059+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:49:00+00:00, run_after=2024-03-07 00:50:00+00:00
[2024-03-07T02:50:50.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:50:50.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:50:50.069+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.069+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:50:50.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.069+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:50:50.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:50:50.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.074+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:50:50.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:50:50.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:49:00+00:00, run_after=2024-03-07 00:50:00+00:00
[2024-03-07T02:50:50.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:50:50.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:50:50.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:50:50.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:50:50.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.086+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.087+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:48:00+00:00, run_after=2024-03-07 00:50:00+00:00
[2024-03-07T02:50:50.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:50:50.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:50:50.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.093+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:50:50.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:50:50.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.096+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:50:50.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.097+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:50:50.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.098+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.099+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:50:50.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:50:50.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.101+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:50:50.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.102+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.102+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.103+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:50:50.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.104+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:50:50.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.105+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:50:50.106+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.106+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:50:50.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.131+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:50:50.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:50:50.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:50:50.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:50:50.146+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.064 seconds
[2024-03-07T02:52:32.584+0200] {processor.py:161} INFO - Started process (PID=29005) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:52:32.585+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:52:32.585+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.585+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:52:32.587+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.586+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:52:32.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.648+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:52:32.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.648+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:52:32.670+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.669+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:52:32.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.671+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:52:32.734+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.733+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:52:32.748+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.748+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:52:32.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.942+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:52:32.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:32.962+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:52:33.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.096+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:52:33.114+0200] {processor.py:840} INFO - DAG(s) 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_xcom_args', 'dag_id_2', 'example_setup_teardown_taskflow', 'example_dynamic_task_mapping', 'dag_id_1', 'example_sla_dag', 'dag_id_3', 'example_sensor_decorator', 'example_branch_datetime_operator_3', 'example_weekday_branch_operator', 'dataset_consumes_1_and_2', 'example_skip_dag', 'example_complex', 'tutorial_objectstorage', 'example_short_circuit_decorator', 'example_python_decorator', 'dataset_produces_1', 'example_short_circuit_operator', 'example_task_group_decorator', 'dataset_produces_2', 'example_setup_teardown', 'example_params_ui_tutorial', 'example_branch_labels', 'example_bash_operator', 'example_branch_dop_operator_v3', 'example_params_trigger_ui', 'example_passing_params_via_test_command', 'example_branch_datetime_operator', 'example_subdag_operator.section-2', 'example_external_task_marker_child', 'example_subdag_operator.section-1', 'example_trigger_target_dag', 'example_trigger_controller_dag', 'example_sensors', 'example_xcom_args_with_operators', 'example_nested_branch_dag', 'tutorial', 'example_time_delta_sensor_async', 'example_dag_decorator', 'tutorial_dag', 'example_subdag_operator', 'tutorial_taskflow_api', 'example_external_task_marker_parent', 'example_branch_datetime_operator_2', 'example_task_group', 'dataset_consumes_1_never_scheduled', 'latest_only_with_trigger', 'latest_only', 'example_python_operator', 'example_xcom' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:52:33.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.573+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:52:33.593+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.593+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:52:33.595+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.595+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:52:33.596+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.596+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:52:33.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.597+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:52:33.598+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.598+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:52:33.598+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.598+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:52:33.599+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.599+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:52:33.601+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.601+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.602+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:52:33.605+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.605+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.608+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.608+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.610+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.612+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.618+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.617+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:51:00+00:00, run_after=2024-03-07 00:52:00+00:00
[2024-03-07T02:52:33.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.620+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.621+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.621+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:52:33.622+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.622+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:52:33.623+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.623+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:52:33.624+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.624+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.625+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.625+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:52:33.626+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.625+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:52:33.628+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.628+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.629+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.628+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:52:33.629+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.629+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:52:33.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.634+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:51:00+00:00, run_after=2024-03-07 00:52:00+00:00
[2024-03-07T02:52:33.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:52:33.636+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.636+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:52:33.636+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.636+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:52:33.637+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.637+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:52:33.638+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.638+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.639+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.640+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.641+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.641+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.641+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.645+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:50:00+00:00, run_after=2024-03-07 00:52:00+00:00
[2024-03-07T02:52:33.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.645+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:52:33.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.646+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:52:33.647+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.647+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:52:33.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.648+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.649+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.649+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:52:33.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.650+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:52:33.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.651+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:52:33.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.653+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:52:33.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.655+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:52:33.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.656+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:52:33.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.657+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.658+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.659+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.658+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:52:33.659+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.659+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:52:33.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.661+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:52:33.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.661+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:52:33.689+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.689+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:52:33.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.692+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:52:33.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:52:33.692+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:52:33.704+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.122 seconds
[2024-03-07T02:54:21.530+0200] {processor.py:161} INFO - Started process (PID=29110) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:54:21.531+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:54:21.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.532+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:54:21.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.533+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:54:21.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.597+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:54:21.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.597+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:54:21.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.619+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:54:21.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.620+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:54:21.683+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.682+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:54:21.696+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.696+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:54:21.899+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.898+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:54:21.918+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:21.918+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:54:22.031+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.031+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:54:22.044+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'dag_id_3', 'dataset_produces_1', 'example_xcom_args', 'example_subdag_operator.section-1', 'dag_id_1', 'example_sensor_decorator', 'example_branch_datetime_operator', 'tutorial_dag', 'example_short_circuit_operator', 'example_branch_dop_operator_v3', 'tutorial_objectstorage', 'example_bash_operator', 'example_xcom_args_with_operators', 'latest_only', 'example_nested_branch_dag', 'dag_id_2', 'example_python_operator', 'example_time_delta_sensor_async', 'example_sla_dag', 'example_branch_labels', 'example_params_ui_tutorial', 'example_task_group_decorator', 'dataset_consumes_1_never_scheduled', 'example_complex', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'tutorial', 'dataset_produces_2', 'example_trigger_target_dag', 'example_external_task_marker_parent', 'tutorial_taskflow_api', 'example_xcom', 'example_task_group', 'example_setup_teardown_taskflow', 'dataset_consumes_1_and_2', 'example_external_task_marker_child', 'example_python_decorator', 'example_trigger_controller_dag', 'example_weekday_branch_operator', 'example_skip_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_dynamic_task_mapping', 'example_setup_teardown', 'latest_only_with_trigger', 'example_sensors', 'example_dag_decorator', 'example_params_trigger_ui', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'example_branch_datetime_operator_3' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:54:22.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.497+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:54:22.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.514+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:54:22.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.517+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:54:22.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.518+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:54:22.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.519+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:54:22.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.520+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:54:22.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.521+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:54:22.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.522+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:54:22.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.524+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.525+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:54:22.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.527+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.529+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.532+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.534+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.539+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:53:00+00:00, run_after=2024-03-07 00:54:00+00:00
[2024-03-07T02:54:22.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.541+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.542+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:54:22.543+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.543+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:54:22.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.545+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:54:22.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.545+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.546+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.546+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:54:22.547+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.547+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:54:22.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.549+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.550+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.550+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:54:22.550+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.550+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:54:22.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.555+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:53:00+00:00, run_after=2024-03-07 00:54:00+00:00
[2024-03-07T02:54:22.556+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.556+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:54:22.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.557+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:54:22.558+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.558+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:54:22.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.558+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:54:22.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.559+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.560+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.560+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.561+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.561+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.562+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.563+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.563+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.566+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.566+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:52:00+00:00, run_after=2024-03-07 00:54:00+00:00
[2024-03-07T02:54:22.567+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.567+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:54:22.568+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.567+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:54:22.568+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.568+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:54:22.569+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.569+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.570+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.570+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.571+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:54:22.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.572+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:54:22.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.572+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:54:22.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.574+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.575+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:54:22.576+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.576+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:54:22.577+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.576+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:54:22.577+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.577+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.578+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.579+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:54:22.580+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.580+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:54:22.581+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.580+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:54:22.581+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.581+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:54:22.608+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.608+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:54:22.611+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.611+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:54:22.611+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:54:22.611+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:54:22.623+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.094 seconds
[2024-03-07T02:56:06.423+0200] {processor.py:161} INFO - Started process (PID=29206) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:56:06.424+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:56:06.425+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.424+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:56:06.426+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.426+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:56:06.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.486+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:56:06.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.487+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:56:06.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.508+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:56:06.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.509+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:56:06.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.570+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:56:06.584+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.583+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:56:06.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.776+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:56:06.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.797+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:56:06.912+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:06.911+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:56:06.926+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'dag_id_3', 'example_task_group', 'example_branch_datetime_operator_2', 'example_skip_dag', 'example_complex', 'example_sla_dag', 'example_nested_branch_dag', 'dataset_consumes_1_never_scheduled', 'example_xcom', 'example_external_task_marker_parent', 'example_params_ui_tutorial', 'example_trigger_controller_dag', 'example_subdag_operator.section-1', 'tutorial_objectstorage', 'example_python_decorator', 'example_python_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dag_id_1', 'latest_only', 'example_xcom_args', 'example_sensors', 'dataset_consumes_1_and_2', 'tutorial', 'example_dag_decorator', 'example_branch_labels', 'example_passing_params_via_test_command', 'dataset_produces_1', 'example_short_circuit_decorator', 'example_dynamic_task_mapping', 'dataset_consumes_unknown_never_scheduled', 'tutorial_dag', 'example_time_delta_sensor_async', 'tutorial_taskflow_api', 'example_task_group_decorator', 'dataset_produces_2', 'dag_id_2', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_dop_operator_v3', 'example_setup_teardown_taskflow', 'example_bash_operator', 'latest_only_with_trigger', 'example_xcom_args_with_operators', 'example_setup_teardown', 'example_weekday_branch_operator', 'example_external_task_marker_child', 'example_short_circuit_operator', 'dataset_consumes_1', 'example_branch_datetime_operator_3', 'example_params_trigger_ui', 'example_trigger_target_dag', 'example_sensor_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:56:07.347+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.347+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:56:07.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.364+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:56:07.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.366+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:56:07.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.367+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:56:07.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.368+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:56:07.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.369+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:56:07.370+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.370+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:56:07.371+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.371+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:56:07.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.372+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.373+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:56:07.376+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.375+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.377+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.377+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.379+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.379+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.381+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.381+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.387+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:55:00+00:00, run_after=2024-03-07 00:56:00+00:00
[2024-03-07T02:56:07.389+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.389+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.390+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.390+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:56:07.391+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.391+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:56:07.392+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.392+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:56:07.393+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.393+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.394+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.394+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:56:07.394+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.394+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:56:07.396+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.396+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.397+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.397+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:56:07.398+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.398+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:56:07.403+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.403+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:55:00+00:00, run_after=2024-03-07 00:56:00+00:00
[2024-03-07T02:56:07.404+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.404+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:56:07.405+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.405+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:56:07.406+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.405+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:56:07.406+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.406+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:56:07.407+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.407+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.408+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.408+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.409+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.409+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.410+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.410+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.411+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.410+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.414+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.414+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:54:00+00:00, run_after=2024-03-07 00:56:00+00:00
[2024-03-07T02:56:07.415+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.414+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:56:07.415+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.415+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:56:07.416+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.416+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:56:07.417+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.417+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.418+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.418+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.419+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.419+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:56:07.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.420+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:56:07.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.420+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:56:07.422+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.422+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.423+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.423+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:56:07.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.424+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:56:07.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.424+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:56:07.425+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.425+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.426+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.426+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.427+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.427+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:56:07.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.428+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:56:07.429+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.429+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:56:07.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.430+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:56:07.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.457+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:56:07.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:56:07.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:56:07.460+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:56:07.474+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.053 seconds
[2024-03-07T02:57:54.188+0200] {processor.py:161} INFO - Started process (PID=29307) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:57:54.189+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:57:54.190+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.190+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:57:54.191+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.191+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:57:54.252+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.251+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:57:54.252+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.252+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:57:54.273+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.273+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:57:54.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.274+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:57:54.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.335+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:57:54.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.349+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:57:54.543+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.543+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:57:54.563+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.563+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:57:54.681+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:54.681+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:57:54.696+0200] {processor.py:840} INFO - DAG(s) 'latest_only_with_trigger', 'example_setup_teardown', 'example_skip_dag', 'example_complex', 'example_branch_datetime_operator_2', 'example_sla_dag', 'example_xcom_args_with_operators', 'example_branch_datetime_operator_3', 'example_dag_decorator', 'example_sensors', 'example_external_task_marker_child', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dag_id_2', 'example_weekday_branch_operator', 'dataset_consumes_unknown_never_scheduled', 'tutorial', 'example_python_operator', 'example_passing_params_via_test_command', 'dataset_produces_1', 'tutorial_objectstorage', 'example_branch_dop_operator_v3', 'dag_id_3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'latest_only', 'example_params_trigger_ui', 'tutorial_taskflow_api', 'example_params_ui_tutorial', 'dag_id_1', 'example_python_decorator', 'tutorial_dag', 'example_xcom_args', 'example_short_circuit_operator', 'example_external_task_marker_parent', 'example_nested_branch_dag', 'example_sensor_decorator', 'example_task_group', 'example_trigger_target_dag', 'example_branch_labels', 'example_dynamic_task_mapping', 'example_short_circuit_decorator', 'dataset_consumes_1_never_scheduled', 'dataset_produces_2', 'example_task_group_decorator', 'dataset_consumes_1_and_2', 'example_trigger_controller_dag', 'example_bash_operator', 'dataset_consumes_1', 'example_branch_datetime_operator', 'example_setup_teardown_taskflow', 'example_time_delta_sensor_async', 'example_xcom' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:57:55.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.152+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:57:55.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.169+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:57:55.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.171+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:57:55.172+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.172+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:57:55.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.173+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:57:55.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.173+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:57:55.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.174+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:57:55.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.175+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:57:55.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.177+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.177+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:57:55.180+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.180+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.182+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.182+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.184+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.186+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.191+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.191+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:56:00+00:00, run_after=2024-03-07 00:57:00+00:00
[2024-03-07T02:57:55.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.192+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.193+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:57:55.194+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.194+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:57:55.196+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.196+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:57:55.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.196+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.197+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:57:55.198+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.198+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:57:55.201+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.200+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.201+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.201+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:57:55.202+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.202+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:57:55.207+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.207+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:56:00+00:00, run_after=2024-03-07 00:57:00+00:00
[2024-03-07T02:57:55.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.208+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:57:55.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.208+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:57:55.209+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.209+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:57:55.210+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.210+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:57:55.211+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.211+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.211+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.211+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.212+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.213+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.213+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.214+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.214+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.218+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.218+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:54:00+00:00, run_after=2024-03-07 00:56:00+00:00
[2024-03-07T02:57:55.219+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.219+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:57:55.220+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.220+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:57:55.221+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.221+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:57:55.222+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.221+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.222+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.222+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.223+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.223+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:57:55.224+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.224+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:57:55.225+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.224+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:57:55.226+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.226+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.227+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.227+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:57:55.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.228+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:57:55.229+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.228+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:57:55.229+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.229+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.230+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.230+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.231+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.231+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:57:55.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.232+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:57:55.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.232+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:57:55.234+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.233+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:57:55.259+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.259+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:57:55.262+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.262+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:57:55.262+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:57:55.262+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:57:55.275+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.088 seconds
[2024-03-07T02:59:36.552+0200] {processor.py:161} INFO - Started process (PID=29401) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:59:36.553+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T02:59:36.554+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.554+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:59:36.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.555+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T02:59:36.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.616+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T02:59:36.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.617+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:59:36.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.638+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:59:36.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.640+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T02:59:36.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.701+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:59:36.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.715+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T02:59:36.910+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.909+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T02:59:36.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:36.930+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T02:59:37.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.046+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T02:59:37.060+0200] {processor.py:840} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_trigger_controller_dag', 'example_branch_datetime_operator_3', 'example_skip_dag', 'example_short_circuit_decorator', 'example_branch_datetime_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dataset_consumes_1', 'example_params_ui_tutorial', 'example_branch_dop_operator_v3', 'example_branch_labels', 'dag_id_2', 'example_xcom_args', 'example_nested_branch_dag', 'dataset_consumes_unknown_never_scheduled', 'tutorial_objectstorage', 'example_xcom', 'example_sensors', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_consumes_1_and_2', 'tutorial', 'tutorial_taskflow_api', 'example_dynamic_task_mapping', 'dag_id_3', 'example_task_group', 'example_sensor_decorator', 'example_weekday_branch_operator', 'example_setup_teardown', 'example_passing_params_via_test_command', 'example_sla_dag', 'example_trigger_target_dag', 'example_dag_decorator', 'example_python_operator', 'dataset_consumes_1_never_scheduled', 'dataset_produces_2', 'tutorial_dag', 'example_external_task_marker_parent', 'dataset_produces_1', 'example_short_circuit_operator', 'example_setup_teardown_taskflow', 'example_branch_datetime_operator_2', 'example_external_task_marker_child', 'dag_id_1', 'example_python_decorator', 'example_params_trigger_ui', 'example_task_group_decorator', 'latest_only', 'example_complex', 'latest_only_with_trigger', 'example_bash_operator', 'example_time_delta_sensor_async' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T02:59:37.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.448+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T02:59:37.465+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.465+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T02:59:37.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.467+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T02:59:37.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.468+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T02:59:37.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.469+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T02:59:37.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.470+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T02:59:37.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.471+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T02:59:37.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.471+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T02:59:37.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.473+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.474+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T02:59:37.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 00:58:00+00:00, run_after=2024-03-07 00:59:00+00:00
[2024-03-07T02:59:37.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.490+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T02:59:37.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T02:59:37.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T02:59:37.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.495+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T02:59:37.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T02:59:37.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T02:59:37.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T02:59:37.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 00:58:00+00:00, run_after=2024-03-07 00:59:00+00:00
[2024-03-07T02:59:37.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T02:59:37.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.505+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T02:59:37.506+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.506+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T02:59:37.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T02:59:37.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.509+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.511+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.514+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:56:00+00:00, run_after=2024-03-07 00:58:00+00:00
[2024-03-07T02:59:37.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.515+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T02:59:37.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.516+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:59:37.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.517+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:59:37.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.519+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.519+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T02:59:37.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.520+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:59:37.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.521+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T02:59:37.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.523+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.523+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T02:59:37.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.524+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T02:59:37.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.525+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T02:59:37.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.526+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.527+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.528+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T02:59:37.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.528+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T02:59:37.529+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.529+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T02:59:37.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.530+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T02:59:37.558+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.558+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T02:59:37.561+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.561+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T02:59:37.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T02:59:37.561+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T02:59:37.573+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.023 seconds
[2024-03-07T03:01:21.477+0200] {processor.py:161} INFO - Started process (PID=29509) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:01:21.477+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:01:21.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.478+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:01:21.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.479+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:01:21.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.540+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:01:21.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.541+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:01:21.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.562+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:01:21.564+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.564+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:01:21.626+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.625+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:01:21.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.640+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:01:21.834+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.833+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:01:21.854+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.853+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:01:21.966+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:21.966+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:01:21.979+0200] {processor.py:840} INFO - DAG(s) 'example_dag_decorator', 'example_task_group', 'dataset_consumes_unknown_never_scheduled', 'tutorial_objectstorage', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_task_group_decorator', 'dataset_consumes_1', 'example_trigger_target_dag', 'example_setup_teardown_taskflow', 'dataset_produces_2', 'example_short_circuit_operator', 'latest_only', 'example_skip_dag', 'example_python_decorator', 'example_branch_datetime_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'tutorial', 'example_branch_dop_operator_v3', 'example_external_task_marker_parent', 'example_setup_teardown', 'example_weekday_branch_operator', 'example_branch_labels', 'dag_id_2', 'dataset_produces_1', 'example_xcom_args', 'example_sla_dag', 'example_params_ui_tutorial', 'dag_id_1', 'example_dynamic_task_mapping', 'dataset_consumes_1_and_2', 'example_external_task_marker_child', 'example_bash_operator', 'example_time_delta_sensor_async', 'example_xcom_args_with_operators', 'example_xcom', 'example_passing_params_via_test_command', 'latest_only_with_trigger', 'example_sensors', 'tutorial_taskflow_api', 'dataset_consumes_1_never_scheduled', 'example_complex', 'tutorial_dag', 'dag_id_3', 'example_sensor_decorator', 'example_nested_branch_dag', 'example_trigger_controller_dag', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_params_trigger_ui', 'example_short_circuit_decorator', 'example_python_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:01:22.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.423+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:01:22.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.441+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:01:22.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.444+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:01:22.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.445+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:01:22.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.446+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:01:22.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.447+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:01:22.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.448+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:01:22.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.449+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:01:22.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.451+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.452+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:01:22.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.455+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:00:00+00:00, run_after=2024-03-07 01:01:00+00:00
[2024-03-07T03:01:22.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:01:22.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:01:22.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:01:22.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:01:22.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:01:22.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:01:22.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:01:22.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.481+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:00:00+00:00, run_after=2024-03-07 01:01:00+00:00
[2024-03-07T03:01:22.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:01:22.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:01:22.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:01:22.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.485+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:01:22.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 00:58:00+00:00, run_after=2024-03-07 01:00:00+00:00
[2024-03-07T03:01:22.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:01:22.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:01:22.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.495+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:01:22.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:01:22.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:01:22.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:01:22.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.502+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:01:22.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:01:22.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:01:22.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.504+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.505+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.506+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.506+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:01:22.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.507+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:01:22.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.507+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:01:22.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.508+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:01:22.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.534+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:01:22.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.537+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:01:22.538+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:01:22.538+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:01:22.550+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.075 seconds
[2024-03-07T03:03:07.895+0200] {processor.py:161} INFO - Started process (PID=29614) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:03:07.897+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:03:07.897+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:07.897+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:03:07.898+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:07.898+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:03:07.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:07.959+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:03:07.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:07.960+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:03:07.980+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:07.980+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:03:07.981+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:07.981+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:03:08.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:08.042+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:03:08.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:08.057+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:03:08.251+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:08.250+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:03:08.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:08.271+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:03:08.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:08.386+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:03:08.400+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_dynamic_task_mapping', 'example_short_circuit_operator', 'example_passing_params_via_test_command', 'example_time_delta_sensor_async', 'example_short_circuit_decorator', 'example_params_trigger_ui', 'dag_id_3', 'example_python_decorator', 'example_branch_datetime_operator', 'example_params_ui_tutorial', 'example_external_task_marker_parent', 'example_xcom_args', 'example_branch_datetime_operator_2', 'example_external_task_marker_child', 'tutorial', 'example_weekday_branch_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_dag_decorator', 'example_branch_datetime_operator_3', 'example_xcom', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_setup_teardown', 'dataset_produces_1', 'example_branch_labels', 'example_nested_branch_dag', 'example_branch_dop_operator_v3', 'example_xcom_args_with_operators', 'tutorial_objectstorage', 'example_trigger_target_dag', 'dag_id_2', 'dataset_consumes_1_never_scheduled', 'latest_only', 'example_bash_operator', 'example_python_operator', 'example_task_group', 'tutorial_dag', 'dataset_produces_2', 'example_subdag_operator.section-2', 'dataset_consumes_1_and_2', 'latest_only_with_trigger', 'example_trigger_controller_dag', 'example_sla_dag', 'example_task_group_decorator', 'tutorial_taskflow_api', 'dag_id_1', 'example_skip_dag', 'example_sensors', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_setup_teardown_taskflow', 'example_sensor_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:03:08.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:08.990+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:03:09.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.013+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:03:09.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.015+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:03:09.017+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.017+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:03:09.018+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.018+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:03:09.019+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.019+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:03:09.020+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.019+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:03:09.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.020+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:03:09.023+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.023+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.024+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:03:09.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.027+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.030+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.030+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.032+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.034+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.040+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:02:00+00:00, run_after=2024-03-07 01:03:00+00:00
[2024-03-07T03:03:09.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.043+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.044+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:03:09.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.045+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:03:09.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.047+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:03:09.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.048+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:03:09.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:03:09.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.052+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:03:09.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.054+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:03:09.059+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.059+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:02:00+00:00, run_after=2024-03-07 01:03:00+00:00
[2024-03-07T03:03:09.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.060+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:03:09.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.061+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:03:09.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:03:09.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:03:09.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.069+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:00:00+00:00, run_after=2024-03-07 01:02:00+00:00
[2024-03-07T03:03:09.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.074+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:03:09.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:03:09.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:03:09.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:03:09.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:03:09.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:03:09.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:03:09.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:03:09.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.086+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:03:09.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.087+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.088+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.089+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:03:09.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.091+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:03:09.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.093+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:03:09.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.094+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:03:09.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.126+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:03:09.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:03:09.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:03:09.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:03:09.144+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.251 seconds
[2024-03-07T03:04:53.786+0200] {processor.py:161} INFO - Started process (PID=29710) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:04:53.787+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:04:53.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.787+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:04:53.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.789+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:04:53.852+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.851+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:04:53.852+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.852+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:04:53.873+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.873+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:04:53.874+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.874+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:04:53.938+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.936+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:04:53.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:53.951+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:04:54.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.148+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:04:54.168+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.168+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:04:54.283+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.283+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:04:54.296+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_consumes_unknown_never_scheduled', 'example_params_trigger_ui', 'dataset_consumes_1', 'dataset_consumes_1_and_2', 'example_time_delta_sensor_async', 'example_sensor_decorator', 'example_nested_branch_dag', 'example_python_decorator', 'example_task_group', 'dag_id_3', 'example_skip_dag', 'tutorial', 'example_setup_teardown_taskflow', 'dag_id_1', 'example_xcom', 'example_trigger_target_dag', 'dag_id_2', 'example_sensors', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_weekday_branch_operator', 'latest_only_with_trigger', 'dataset_consumes_1_never_scheduled', 'example_setup_teardown', 'example_params_ui_tutorial', 'example_dynamic_task_mapping', 'dataset_produces_1', 'example_task_group_decorator', 'latest_only', 'example_passing_params_via_test_command', 'example_xcom_args_with_operators', 'example_external_task_marker_parent', 'example_branch_dop_operator_v3', 'tutorial_dag', 'example_short_circuit_decorator', 'example_branch_datetime_operator_2', 'example_external_task_marker_child', 'dataset_produces_2', 'example_xcom_args', 'example_sla_dag', 'example_python_operator', 'tutorial_taskflow_api', 'example_bash_operator', 'example_trigger_controller_dag', 'example_branch_labels', 'tutorial_objectstorage', 'example_dag_decorator', 'example_short_circuit_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:04:54.753+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.753+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:04:54.772+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.772+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:04:54.774+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.774+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:04:54.774+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.774+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:04:54.775+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.775+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:04:54.776+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.776+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:04:54.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.777+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:04:54.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.777+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:04:54.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.780+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.780+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:04:54.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.783+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.785+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.785+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.787+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.789+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.794+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.793+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:03:00+00:00, run_after=2024-03-07 01:04:00+00:00
[2024-03-07T03:04:54.796+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.796+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.797+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:04:54.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.797+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:04:54.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:04:54.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.799+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:04:54.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.801+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:04:54.803+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.803+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.804+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.803+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:04:54.804+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.804+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:04:54.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.809+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:03:00+00:00, run_after=2024-03-07 01:04:00+00:00
[2024-03-07T03:04:54.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.809+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:04:54.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.810+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:04:54.811+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.811+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:04:54.812+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.812+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:04:54.813+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.813+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.814+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.813+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.815+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.814+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.815+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.815+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.816+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.816+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.820+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.819+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:02:00+00:00, run_after=2024-03-07 01:04:00+00:00
[2024-03-07T03:04:54.820+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.820+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:04:54.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.821+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:04:54.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.821+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:04:54.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.822+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.823+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.824+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.824+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:04:54.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.825+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:04:54.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.825+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:04:54.828+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.828+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.829+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.829+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:04:54.830+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.830+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:04:54.831+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.831+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:04:54.832+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.832+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.833+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.834+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.834+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:04:54.834+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.834+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:04:54.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.835+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:04:54.836+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.836+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:04:54.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.861+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:04:54.865+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.865+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:04:54.865+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:04:54.865+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:04:54.876+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.092 seconds
[2024-03-07T03:06:42.510+0200] {processor.py:161} INFO - Started process (PID=29805) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:06:42.511+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:06:42.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.512+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:06:42.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.513+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:06:42.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.574+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:06:42.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.575+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:06:42.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.597+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:06:42.598+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.598+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:06:42.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.659+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:06:42.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.674+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:06:42.869+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.868+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:06:42.889+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:42.889+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:06:43.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.008+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:06:43.024+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_time_delta_sensor_async', 'example_bash_operator', 'example_branch_datetime_operator_3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_skip_dag', 'example_python_decorator', 'tutorial_dag', 'example_setup_teardown_taskflow', 'dag_id_2', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'latest_only', 'dataset_produces_2', 'example_xcom_args', 'example_xcom_args_with_operators', 'dataset_consumes_1_and_2', 'example_branch_dop_operator_v3', 'example_short_circuit_decorator', 'tutorial', 'example_xcom', 'example_task_group_decorator', 'tutorial_objectstorage', 'example_setup_teardown', 'example_sensors', 'example_trigger_controller_dag', 'dataset_consumes_1', 'dag_id_3', 'example_dag_decorator', 'example_nested_branch_dag', 'dataset_consumes_unknown_never_scheduled', 'example_external_task_marker_parent', 'example_trigger_target_dag', 'tutorial_taskflow_api', 'example_weekday_branch_operator', 'example_python_operator', 'example_passing_params_via_test_command', 'example_params_trigger_ui', 'example_sla_dag', 'latest_only_with_trigger', 'dag_id_1', 'example_branch_datetime_operator_2', 'example_sensor_decorator', 'example_params_ui_tutorial', 'example_task_group', 'dataset_produces_1', 'example_branch_datetime_operator', 'example_branch_labels', 'dataset_consumes_1_never_scheduled', 'example_dynamic_task_mapping', 'example_short_circuit_operator', 'example_external_task_marker_child' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:06:43.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.471+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:06:43.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.490+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:06:43.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.493+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:06:43.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.494+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:06:43.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.495+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:06:43.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.496+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:06:43.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.496+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:06:43.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.497+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:06:43.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.500+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.500+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:06:43.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.505+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.510+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.515+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:05:00+00:00, run_after=2024-03-07 01:06:00+00:00
[2024-03-07T03:06:43.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.517+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:06:43.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.519+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:06:43.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.520+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:06:43.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.521+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.521+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:06:43.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.522+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:06:43.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.524+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.525+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:06:43.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.525+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:06:43.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.530+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:05:00+00:00, run_after=2024-03-07 01:06:00+00:00
[2024-03-07T03:06:43.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.531+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:06:43.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.532+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:06:43.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.533+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:06:43.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.533+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:06:43.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.534+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.535+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.535+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.536+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.536+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.537+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.538+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.538+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.541+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:04:00+00:00, run_after=2024-03-07 01:06:00+00:00
[2024-03-07T03:06:43.543+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.542+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:06:43.543+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.543+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:06:43.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.545+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:06:43.546+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.546+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.547+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.547+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.547+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.547+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:06:43.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.548+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:06:43.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.549+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:06:43.551+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.551+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.552+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.552+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:06:43.553+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.553+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:06:43.554+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.554+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:06:43.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.554+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.556+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.555+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.556+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:06:43.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.557+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:06:43.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.559+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:06:43.560+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.560+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:06:43.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.589+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:06:43.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.592+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:06:43.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:06:43.592+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:06:43.605+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.097 seconds
[2024-03-07T03:08:26.107+0200] {processor.py:161} INFO - Started process (PID=29908) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:08:26.108+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:08:26.109+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.108+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:08:26.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.110+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:08:26.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.172+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:08:26.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.173+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:08:26.194+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.193+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:08:26.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.195+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:08:26.253+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.252+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:08:26.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.266+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:08:26.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.456+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:08:26.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.477+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:08:26.593+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:26.593+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:08:26.607+0200] {processor.py:840} INFO - DAG(s) 'tutorial_dag', 'example_task_group', 'example_dynamic_task_mapping', 'dataset_produces_1', 'example_params_ui_tutorial', 'example_subdag_operator.section-1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'latest_only_with_trigger', 'example_xcom', 'example_task_group_decorator', 'example_nested_branch_dag', 'example_branch_datetime_operator_2', 'dataset_consumes_unknown_never_scheduled', 'tutorial_objectstorage', 'example_time_delta_sensor_async', 'example_branch_dop_operator_v3', 'example_params_trigger_ui', 'dataset_consumes_1_and_2', 'example_python_decorator', 'example_branch_datetime_operator', 'dag_id_2', 'example_short_circuit_operator', 'dag_id_1', 'example_weekday_branch_operator', 'example_subdag_operator.section-2', 'example_bash_operator', 'example_setup_teardown', 'dataset_consumes_1_never_scheduled', 'example_python_operator', 'example_branch_datetime_operator_3', 'dataset_consumes_1', 'dag_id_3', 'example_external_task_marker_parent', 'example_xcom_args', 'example_subdag_operator', 'example_trigger_controller_dag', 'tutorial_taskflow_api', 'latest_only', 'example_xcom_args_with_operators', 'example_skip_dag', 'example_sensor_decorator', 'example_sensors', 'example_setup_teardown_taskflow', 'example_sla_dag', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'example_external_task_marker_child', 'tutorial', 'dataset_produces_2', 'example_trigger_target_dag', 'example_dag_decorator', 'example_complex', 'example_branch_labels' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:08:27.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.070+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:08:27.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.088+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:08:27.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.090+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:08:27.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.091+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:08:27.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.092+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:08:27.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.093+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:08:27.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.094+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:08:27.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.095+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:08:27.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.097+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.098+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:08:27.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.103+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.105+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.107+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.107+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.112+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:07:00+00:00, run_after=2024-03-07 01:08:00+00:00
[2024-03-07T03:08:27.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.114+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.115+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:08:27.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.116+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:08:27.117+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:08:27.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.118+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.119+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:08:27.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.120+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:08:27.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.122+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:08:27.123+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.123+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:08:27.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:07:00+00:00, run_after=2024-03-07 01:08:00+00:00
[2024-03-07T03:08:27.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.129+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:08:27.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:08:27.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:08:27.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:08:27.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.132+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.133+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.133+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.135+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.136+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.136+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:06:00+00:00, run_after=2024-03-07 01:08:00+00:00
[2024-03-07T03:08:27.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:08:27.141+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:08:27.141+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.141+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:08:27.142+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.143+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.143+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:08:27.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:08:27.146+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:08:27.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.149+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:08:27.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.150+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:08:27.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.150+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:08:27.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.151+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.152+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.153+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:08:27.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.153+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:08:27.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.154+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:08:27.155+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.155+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:08:27.182+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.182+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:08:27.185+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.185+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:08:27.185+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:08:27.185+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:08:27.198+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.092 seconds
[2024-03-07T03:10:20.602+0200] {processor.py:161} INFO - Started process (PID=30026) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:10:20.603+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:10:20.604+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.603+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:10:20.605+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.605+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:10:20.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.669+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:10:20.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.669+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:10:20.690+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.690+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:10:20.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.692+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:10:20.756+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.755+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:10:20.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.770+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:10:20.966+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.965+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:10:20.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:20.986+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:10:21.106+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.106+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:10:21.121+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_trigger_target_dag', 'tutorial_objectstorage', 'example_branch_dop_operator_v3', 'example_short_circuit_decorator', 'example_xcom', 'dag_id_3', 'example_nested_branch_dag', 'example_setup_teardown_taskflow', 'example_task_group_decorator', 'tutorial', 'dataset_consumes_1', 'example_branch_datetime_operator', 'example_dag_decorator', 'example_trigger_controller_dag', 'example_setup_teardown', 'example_short_circuit_operator', 'example_branch_datetime_operator_3', 'dataset_consumes_1_never_scheduled', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom_args_with_operators', 'example_sla_dag', 'tutorial_taskflow_api', 'tutorial_dag', 'example_external_task_marker_child', 'dataset_consumes_1_and_2', 'latest_only', 'dag_id_2', 'dataset_consumes_unknown_never_scheduled', 'latest_only_with_trigger', 'example_sensors', 'example_external_task_marker_parent', 'example_weekday_branch_operator', 'example_skip_dag', 'dataset_produces_1', 'example_params_trigger_ui', 'example_sensor_decorator', 'dataset_produces_2', 'example_python_operator', 'example_branch_labels', 'example_passing_params_via_test_command', 'example_branch_datetime_operator_2', 'example_dynamic_task_mapping', 'example_python_decorator', 'example_bash_operator', 'example_xcom_args', 'example_time_delta_sensor_async', 'example_task_group', 'dag_id_1', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_params_ui_tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:10:21.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.588+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:10:21.607+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.606+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:10:21.609+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.609+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:10:21.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.610+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:10:21.611+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.611+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:10:21.612+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.612+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:10:21.613+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.613+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:10:21.614+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.613+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:10:21.616+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.616+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.617+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:10:21.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.619+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.622+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.621+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.624+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.624+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.626+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.626+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.632+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.631+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:09:00+00:00, run_after=2024-03-07 01:10:00+00:00
[2024-03-07T03:10:21.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.634+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:10:21.636+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:10:21.637+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.637+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:10:21.638+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.638+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.639+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:10:21.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.640+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:10:21.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.642+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.642+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:10:21.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.643+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:10:21.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.648+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:09:00+00:00, run_after=2024-03-07 01:10:00+00:00
[2024-03-07T03:10:21.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.649+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:10:21.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.650+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:10:21.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.650+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:10:21.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.651+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:10:21.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.652+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.653+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.655+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.659+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.659+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:08:00+00:00, run_after=2024-03-07 01:10:00+00:00
[2024-03-07T03:10:21.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.659+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:10:21.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.660+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:10:21.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.661+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:10:21.662+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.662+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.663+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.663+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.664+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:10:21.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.664+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:10:21.665+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.665+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:10:21.667+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.667+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.668+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:10:21.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.669+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:10:21.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.669+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:10:21.670+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.670+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.671+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.672+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:10:21.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.673+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:10:21.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.673+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:10:21.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.674+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:10:21.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.702+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:10:21.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:10:21.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:10:21.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:10:21.718+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.118 seconds
[2024-03-07T03:12:11.572+0200] {processor.py:161} INFO - Started process (PID=30139) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:12:11.588+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:12:11.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.589+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:12:11.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.590+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:12:11.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.653+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:12:11.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.653+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:12:11.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.674+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:12:11.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.675+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:12:11.737+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.736+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:12:11.752+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.752+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:12:11.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.942+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:12:11.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:11.962+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:12:12.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.073+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:12:12.088+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_xcom_args', 'example_time_delta_sensor_async', 'example_dynamic_task_mapping', 'example_short_circuit_operator', 'example_dag_decorator', 'tutorial_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'tutorial_taskflow_api', 'example_task_group_decorator', 'example_sensors', 'example_branch_datetime_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_external_task_marker_parent', 'example_task_group', 'example_branch_datetime_operator_2', 'example_params_trigger_ui', 'example_setup_teardown_taskflow', 'example_xcom', 'dag_id_2', 'example_setup_teardown', 'example_python_operator', 'example_params_ui_tutorial', 'dag_id_1', 'tutorial', 'example_branch_labels', 'example_xcom_args_with_operators', 'example_passing_params_via_test_command', 'example_complex', 'example_sensor_decorator', 'example_branch_dop_operator_v3', 'example_nested_branch_dag', 'dag_id_3', 'dataset_produces_2', 'dataset_produces_1', 'example_sla_dag', 'latest_only', 'dataset_consumes_1_and_2', 'example_trigger_controller_dag', 'example_external_task_marker_child', 'latest_only_with_trigger', 'example_weekday_branch_operator', 'example_bash_operator', 'example_python_decorator', 'example_trigger_target_dag', 'example_short_circuit_decorator', 'dataset_consumes_1_never_scheduled', 'example_skip_dag', 'tutorial_objectstorage' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:12:12.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.555+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:12:12.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.574+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:12:12.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.577+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:12:12.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.578+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:12:12.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.579+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:12:12.580+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.580+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:12:12.581+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.581+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:12:12.582+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.582+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:12:12.584+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.584+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.585+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.585+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:12:12.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.588+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.590+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.592+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.595+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.594+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.600+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.600+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:11:00+00:00, run_after=2024-03-07 01:12:00+00:00
[2024-03-07T03:12:12.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.602+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.603+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.603+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:12:12.604+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.604+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:12:12.605+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.605+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:12:12.606+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.606+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.607+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.607+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:12:12.609+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.609+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:12:12.612+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.613+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:12:12.613+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.613+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:12:12.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.619+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:11:00+00:00, run_after=2024-03-07 01:12:00+00:00
[2024-03-07T03:12:12.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.620+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:12:12.622+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.621+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:12:12.623+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.622+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:12:12.624+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.623+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:12:12.625+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.624+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.626+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.626+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.627+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.627+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.628+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.628+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.629+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.629+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.633+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.633+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:10:00+00:00, run_after=2024-03-07 01:12:00+00:00
[2024-03-07T03:12:12.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.633+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:12:12.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.634+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:12:12.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:12:12.636+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.636+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.637+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.637+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.638+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.638+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:12:12.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.639+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:12:12.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.640+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:12:12.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.642+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.643+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:12:12.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.644+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:12:12.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.645+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:12:12.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.646+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.647+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.647+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.648+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:12:12.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.649+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:12:12.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.649+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:12:12.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.650+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:12:12.676+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.676+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:12:12.680+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.680+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:12:12.680+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:12:12.680+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:12:12.692+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.122 seconds
[2024-03-07T03:13:56.491+0200] {processor.py:161} INFO - Started process (PID=30241) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:13:56.492+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:13:56.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.492+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:13:56.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.493+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:13:56.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.554+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:13:56.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.555+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:13:56.576+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.576+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:13:56.577+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.577+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:13:56.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.638+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:13:56.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.653+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:13:56.848+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.847+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:13:56.868+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.867+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:13:56.982+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:56.981+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:13:57.002+0200] {processor.py:840} INFO - DAG(s) 'tutorial_taskflow_api', 'dataset_produces_1', 'example_branch_datetime_operator_2', 'dataset_produces_2', 'tutorial_objectstorage', 'example_short_circuit_decorator', 'example_xcom_args', 'example_sensor_decorator', 'dag_id_1', 'example_external_task_marker_parent', 'example_branch_dop_operator_v3', 'example_task_group_decorator', 'dataset_consumes_1_and_2', 'example_sensors', 'dataset_consumes_1_never_scheduled', 'example_branch_labels', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_xcom_args_with_operators', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'latest_only', 'example_weekday_branch_operator', 'example_short_circuit_operator', 'example_branch_datetime_operator', 'example_sla_dag', 'example_python_operator', 'example_external_task_marker_child', 'example_setup_teardown', 'example_params_trigger_ui', 'tutorial', 'dag_id_2', 'example_time_delta_sensor_async', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom', 'example_passing_params_via_test_command', 'example_trigger_target_dag', 'example_dynamic_task_mapping', 'example_setup_teardown_taskflow', 'example_dag_decorator', 'example_python_decorator', 'example_task_group', 'latest_only_with_trigger', 'dag_id_3', 'example_nested_branch_dag', 'example_complex', 'example_bash_operator', 'tutorial_dag', 'example_skip_dag', 'example_branch_datetime_operator_3' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:13:57.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.450+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:13:57.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.470+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:13:57.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.472+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:13:57.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.473+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:13:57.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.474+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:13:57.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.475+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:13:57.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.476+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:13:57.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.476+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:13:57.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.479+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.480+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:13:57.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:12:00+00:00, run_after=2024-03-07 01:13:00+00:00
[2024-03-07T03:13:57.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.497+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:13:57.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:13:57.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:13:57.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:13:57.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:13:57.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:13:57.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.505+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:13:57.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.511+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:12:00+00:00, run_after=2024-03-07 01:13:00+00:00
[2024-03-07T03:13:57.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.512+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:13:57.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.512+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:13:57.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.513+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:13:57.514+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.514+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:13:57.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.515+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.516+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.516+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.517+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.518+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.521+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:10:00+00:00, run_after=2024-03-07 01:12:00+00:00
[2024-03-07T03:13:57.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.522+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:13:57.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.523+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:13:57.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.524+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:13:57.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.525+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.526+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.527+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:13:57.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.527+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:13:57.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.528+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:13:57.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.530+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.531+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:13:57.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.532+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:13:57.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.532+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:13:57.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.533+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.534+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.535+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.535+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:13:57.536+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.536+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:13:57.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.537+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:13:57.538+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.538+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:13:57.564+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.564+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:13:57.567+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.567+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:13:57.567+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:13:57.567+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:13:57.580+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.091 seconds
[2024-03-07T03:15:44.050+0200] {processor.py:161} INFO - Started process (PID=30336) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:15:44.051+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:15:44.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.051+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:15:44.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.052+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:15:44.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.114+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:15:44.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.114+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:15:44.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.135+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:15:44.136+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.136+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:15:44.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.198+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:15:44.213+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.213+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:15:44.409+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.407+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:15:44.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.428+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:15:44.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:44.541+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:15:44.556+0200] {processor.py:840} INFO - DAG(s) 'example_bash_operator', 'dag_id_1', 'example_weekday_branch_operator', 'example_branch_datetime_operator_2', 'example_nested_branch_dag', 'example_subdag_operator.section-1', 'dataset_consumes_1_never_scheduled', 'example_setup_teardown_taskflow', 'dataset_produces_2', 'tutorial_taskflow_api', 'example_external_task_marker_child', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_passing_params_via_test_command', 'example_branch_datetime_operator', 'tutorial', 'example_short_circuit_decorator', 'dag_id_3', 'dataset_consumes_unknown_never_scheduled', 'example_branch_dop_operator_v3', 'tutorial_dag', 'example_sensors', 'example_time_delta_sensor_async', 'example_complex', 'example_params_trigger_ui', 'example_python_operator', 'example_xcom_args', 'latest_only', 'example_task_group_decorator', 'example_trigger_controller_dag', 'example_xcom', 'example_short_circuit_operator', 'example_task_group', 'example_skip_dag', 'dataset_produces_1', 'example_trigger_target_dag', 'example_params_ui_tutorial', 'latest_only_with_trigger', 'dataset_consumes_1_and_2', 'example_branch_labels', 'example_setup_teardown', 'example_sla_dag', 'tutorial_objectstorage', 'example_xcom_args_with_operators', 'example_python_decorator', 'example_dynamic_task_mapping', 'example_branch_datetime_operator_3', 'example_external_task_marker_parent', 'dag_id_2', 'example_dag_decorator', 'dataset_consumes_1', 'example_sensor_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:15:45.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.021+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:15:45.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.038+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:15:45.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.040+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:15:45.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.041+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:15:45.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.042+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:15:45.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.043+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:15:45.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.043+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:15:45.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.044+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:15:45.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.046+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.047+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:15:45.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.051+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.055+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.060+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:14:00+00:00, run_after=2024-03-07 01:15:00+00:00
[2024-03-07T03:15:45.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:15:45.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:15:45.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:15:45.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:15:45.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:15:45.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:15:45.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:15:45.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:14:00+00:00, run_after=2024-03-07 01:15:00+00:00
[2024-03-07T03:15:45.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:15:45.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:15:45.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:15:45.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:15:45.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.089+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:12:00+00:00, run_after=2024-03-07 01:14:00+00:00
[2024-03-07T03:15:45.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:15:45.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:15:45.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:15:45.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.093+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:15:45.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:15:45.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.096+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:15:45.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.098+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.098+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:15:45.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.099+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:15:45.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:15:45.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.101+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.101+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.102+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:15:45.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.103+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:15:45.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.104+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:15:45.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.105+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:15:45.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.130+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:15:45.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:15:45.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:15:45.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:15:45.148+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.099 seconds
[2024-03-07T03:17:32.405+0200] {processor.py:161} INFO - Started process (PID=30440) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:17:32.407+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T03:17:32.407+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.407+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:17:32.409+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.409+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T03:17:32.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.479+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T03:17:32.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.480+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:17:32.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.502+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:17:32.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.504+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T03:17:32.576+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.574+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:17:32.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.590+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T03:17:32.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.800+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T03:17:32.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.821+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T03:17:32.938+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:32.938+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T03:17:32.959+0200] {processor.py:840} INFO - DAG(s) 'tutorial_objectstorage', 'dataset_consumes_1_never_scheduled', 'example_passing_params_via_test_command', 'example_python_decorator', 'example_task_group', 'example_subdag_operator.section-1', 'example_complex', 'example_params_ui_tutorial', 'example_sensors', 'example_bash_operator', 'example_weekday_branch_operator', 'tutorial', 'example_branch_datetime_operator_2', 'dataset_consumes_1_and_2', 'example_short_circuit_operator', 'example_xcom_args_with_operators', 'example_skip_dag', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_setup_teardown', 'dataset_produces_2', 'tutorial_taskflow_api', 'example_trigger_target_dag', 'example_branch_dop_operator_v3', 'latest_only', 'example_branch_datetime_operator_3', 'example_xcom_args', 'example_external_task_marker_child', 'dataset_consumes_1', 'example_short_circuit_decorator', 'latest_only_with_trigger', 'example_sensor_decorator', 'example_params_trigger_ui', 'example_trigger_controller_dag', 'example_python_operator', 'example_nested_branch_dag', 'dag_id_2', 'example_branch_datetime_operator', 'dag_id_1', 'example_dag_decorator', 'dataset_produces_1', 'tutorial_dag', 'example_task_group_decorator', 'example_setup_teardown_taskflow', 'example_external_task_marker_parent', 'dataset_consumes_unknown_never_scheduled', 'example_time_delta_sensor_async', 'example_xcom', 'example_sla_dag', 'example_dynamic_task_mapping', 'example_branch_labels', 'dag_id_3' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T03:17:33.418+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.418+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T03:17:33.436+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.436+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T03:17:33.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.438+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T03:17:33.439+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.439+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T03:17:33.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.440+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T03:17:33.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.440+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T03:17:33.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.441+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T03:17:33.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.442+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T03:17:33.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.444+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.444+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T03:17:33.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.447+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.449+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.451+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.453+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 01:16:00+00:00, run_after=2024-03-07 01:17:00+00:00
[2024-03-07T03:17:33.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.460+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T03:17:33.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T03:17:33.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.462+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T03:17:33.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T03:17:33.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.464+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T03:17:33.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T03:17:33.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T03:17:33.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 01:16:00+00:00, run_after=2024-03-07 01:17:00+00:00
[2024-03-07T03:17:33.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T03:17:33.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T03:17:33.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T03:17:33.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T03:17:33.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.479+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 01:14:00+00:00, run_after=2024-03-07 01:16:00+00:00
[2024-03-07T03:17:33.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T03:17:33.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:17:33.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.485+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:17:33.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T03:17:33.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:17:33.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T03:17:33.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T03:17:33.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T03:17:33.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T03:17:33.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.494+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.495+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-06 20:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.496+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T03:17:33.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.496+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T03:17:33.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.498+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T03:17:33.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.499+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T03:17:33.524+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.523+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T03:17:33.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.526+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T03:17:33.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T03:17:33.527+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T03:17:33.542+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.139 seconds
[2024-03-07T07:19:41.142+0200] {processor.py:161} INFO - Started process (PID=30827) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T07:19:41.146+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T07:19:41.146+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.146+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T07:19:41.147+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.147+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T07:19:41.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.199+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T07:19:41.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.199+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T07:19:41.216+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.216+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T07:19:41.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.217+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T07:19:41.315+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.313+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T07:19:41.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.330+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T07:19:41.627+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.626+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T07:19:41.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.646+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T07:19:41.750+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:41.750+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T07:19:41.761+0200] {processor.py:840} INFO - DAG(s) 'example_dynamic_task_mapping', 'example_short_circuit_decorator', 'example_skip_dag', 'example_python_decorator', 'example_sensors', 'example_nested_branch_dag', 'example_python_operator', 'tutorial_taskflow_api', 'tutorial_objectstorage', 'example_weekday_branch_operator', 'example_setup_teardown_taskflow', 'example_branch_datetime_operator_2', 'example_passing_params_via_test_command', 'example_sensor_decorator', 'example_subdag_operator.section-1', 'example_branch_labels', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_xcom_args', 'dag_id_1', 'dataset_consumes_unknown_never_scheduled', 'example_params_trigger_ui', 'dataset_produces_2', 'example_complex', 'tutorial', 'example_dag_decorator', 'example_xcom_args_with_operators', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'latest_only', 'example_setup_teardown', 'example_branch_dop_operator_v3', 'dataset_consumes_1', 'dag_id_3', 'example_trigger_controller_dag', 'dataset_produces_1', 'latest_only_with_trigger', 'example_branch_datetime_operator', 'example_sla_dag', 'dataset_consumes_1_never_scheduled', 'example_task_group_decorator', 'tutorial_dag', 'example_short_circuit_operator', 'example_external_task_marker_parent', 'example_trigger_target_dag', 'example_branch_datetime_operator_3', 'dataset_consumes_1_and_2', 'example_time_delta_sensor_async', 'example_params_ui_tutorial', 'example_external_task_marker_child', 'example_xcom', 'dag_id_2', 'example_bash_operator', 'example_task_group' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T07:19:42.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.091+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T07:19:42.107+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.106+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T07:19:42.108+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.108+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T07:19:42.109+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.109+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T07:19:42.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.109+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T07:19:42.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.110+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T07:19:42.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.111+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T07:19:42.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.111+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T07:19:42.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.113+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.114+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T07:19:42.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.116+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.118+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.119+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.121+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.125+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 05:18:00+00:00, run_after=2024-03-07 05:19:00+00:00
[2024-03-07T07:19:42.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.127+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T07:19:42.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T07:19:42.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.129+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T07:19:42.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T07:19:42.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T07:19:42.133+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.133+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T07:19:42.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T07:19:42.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 05:18:00+00:00, run_after=2024-03-07 05:19:00+00:00
[2024-03-07T07:19:42.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T07:19:42.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T07:19:42.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T07:19:42.141+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.141+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T07:19:42.142+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.143+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 05:16:00+00:00, run_after=2024-03-07 05:18:00+00:00
[2024-03-07T07:19:42.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T07:19:42.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.149+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T07:19:42.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.150+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T07:19:42.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.151+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.151+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.152+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T07:19:42.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.153+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T07:19:42.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.153+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T07:19:42.155+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.155+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.156+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.156+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T07:19:42.156+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.156+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T07:19:42.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T07:19:42.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.158+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T07:19:42.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.158+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T07:19:42.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.159+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T07:19:42.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.160+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T07:19:42.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.160+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T07:19:42.161+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.161+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T07:19:42.183+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.183+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T07:19:42.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.185+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T07:19:42.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T07:19:42.186+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T07:19:42.197+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.056 seconds
[2024-03-07T08:20:54.109+0200] {processor.py:161} INFO - Started process (PID=30988) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T08:20:54.111+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T08:20:54.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.111+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T08:20:54.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.113+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T08:20:54.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.169+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T08:20:54.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.169+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T08:20:54.188+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.188+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T08:20:54.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.189+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T08:20:54.259+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.255+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T08:20:54.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.271+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T08:20:54.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.450+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T08:20:54.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.471+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T08:20:54.581+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:54.580+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T08:20:54.593+0200] {processor.py:840} INFO - DAG(s) 'example_xcom_args_with_operators', 'dataset_produces_2', 'example_setup_teardown_taskflow', 'example_time_delta_sensor_async', 'example_python_decorator', 'dataset_consumes_1', 'example_sla_dag', 'example_branch_labels', 'dataset_consumes_1_and_2', 'example_xcom', 'example_passing_params_via_test_command', 'example_setup_teardown', 'example_sensors', 'tutorial_taskflow_api', 'example_trigger_target_dag', 'example_trigger_controller_dag', 'dataset_consumes_1_never_scheduled', 'example_external_task_marker_child', 'example_short_circuit_operator', 'example_sensor_decorator', 'example_dag_decorator', 'example_params_ui_tutorial', 'example_branch_datetime_operator', 'example_dynamic_task_mapping', 'dag_id_1', 'dag_id_3', 'latest_only', 'dag_id_2', 'example_subdag_operator.section-2', 'tutorial_dag', 'example_branch_dop_operator_v3', 'example_bash_operator', 'latest_only_with_trigger', 'dataset_produces_1', 'example_branch_datetime_operator_2', 'tutorial_objectstorage', 'dataset_consumes_unknown_never_scheduled', 'example_complex', 'example_params_trigger_ui', 'example_task_group_decorator', 'example_python_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_short_circuit_decorator', 'example_skip_dag', 'example_branch_datetime_operator_3', 'example_external_task_marker_parent', 'example_subdag_operator.section-1', 'example_nested_branch_dag', 'example_weekday_branch_operator', 'example_subdag_operator', 'example_task_group', 'example_xcom_args', 'tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T08:20:55.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.036+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T08:20:55.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.055+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T08:20:55.058+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.058+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T08:20:55.059+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.059+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T08:20:55.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.060+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T08:20:55.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.061+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T08:20:55.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.061+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T08:20:55.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.062+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T08:20:55.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.064+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.065+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T08:20:55.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 06:19:00+00:00, run_after=2024-03-07 06:20:00+00:00
[2024-03-07T08:20:55.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T08:20:55.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T08:20:55.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T08:20:55.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.086+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.087+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T08:20:55.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T08:20:55.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T08:20:55.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T08:20:55.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.097+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 06:19:00+00:00, run_after=2024-03-07 06:20:00+00:00
[2024-03-07T08:20:55.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.098+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T08:20:55.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.099+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T08:20:55.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T08:20:55.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.101+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T08:20:55.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.102+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.103+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.104+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.105+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.106+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.106+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.109+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 06:18:00+00:00, run_after=2024-03-07 06:20:00+00:00
[2024-03-07T08:20:55.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.110+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T08:20:55.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.111+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T08:20:55.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.112+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T08:20:55.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.113+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.114+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.115+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T08:20:55.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.116+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T08:20:55.117+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T08:20:55.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.119+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.119+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T08:20:55.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.120+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T08:20:55.121+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T08:20:55.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.122+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T08:20:55.123+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.123+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T08:20:55.124+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.124+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T08:20:55.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.125+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T08:20:55.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.125+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T08:20:55.126+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.126+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T08:20:55.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.154+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T08:20:55.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T08:20:55.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T08:20:55.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T08:20:55.168+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.061 seconds
[2024-03-07T09:30:30.841+0200] {processor.py:161} INFO - Started process (PID=31173) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:30:30.843+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:30:30.843+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.843+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:30:30.844+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.844+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:30:30.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.901+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:30:30.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.902+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:30:30.921+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.921+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:30:30.922+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.922+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:30:30.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:30.988+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:30:31.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:31.000+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:30:31.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:31.307+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:30:31.331+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:31.331+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:30:31.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:31.438+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:30:31.451+0200] {processor.py:840} INFO - DAG(s) 'example_time_delta_sensor_async', 'example_short_circuit_decorator', 'example_python_decorator', 'example_xcom_args_with_operators', 'dataset_consumes_unknown_never_scheduled', 'tutorial', 'example_passing_params_via_test_command', 'example_task_group', 'example_branch_labels', 'example_skip_dag', 'example_sensors', 'example_params_ui_tutorial', 'example_trigger_target_dag', 'latest_only_with_trigger', 'example_subdag_operator.section-1', 'dataset_produces_2', 'example_branch_datetime_operator', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dataset_consumes_1', 'example_branch_dop_operator_v3', 'dataset_produces_1', 'example_xcom_args', 'dag_id_1', 'example_trigger_controller_dag', 'tutorial_dag', 'example_dag_decorator', 'example_external_task_marker_child', 'example_external_task_marker_parent', 'example_python_operator', 'example_branch_datetime_operator_2', 'example_short_circuit_operator', 'example_complex', 'example_branch_datetime_operator_3', 'example_setup_teardown_taskflow', 'example_sla_dag', 'example_xcom', 'example_dynamic_task_mapping', 'example_nested_branch_dag', 'tutorial_objectstorage', 'example_setup_teardown', 'dag_id_3', 'example_params_trigger_ui', 'dag_id_2', 'dataset_consumes_1_and_2', 'latest_only', 'example_bash_operator', 'example_sensor_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'tutorial_taskflow_api', 'example_task_group_decorator', 'example_weekday_branch_operator', 'dataset_consumes_1_never_scheduled' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:30:31.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:31.984+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:30:32.002+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.001+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:30:32.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.003+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:30:32.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.004+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:30:32.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.005+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:30:32.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.005+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:30:32.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.006+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:30:32.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.007+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:30:32.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.009+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.010+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:30:32.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.012+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.014+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.017+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.017+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.024+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:29:00+00:00, run_after=2024-03-07 07:30:00+00:00
[2024-03-07T09:30:32.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.025+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.026+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:30:32.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.027+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:30:32.030+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.030+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:30:32.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.032+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.033+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.033+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:30:32.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.034+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:30:32.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.038+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:30:32.039+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.039+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:30:32.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.045+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:29:00+00:00, run_after=2024-03-07 07:30:00+00:00
[2024-03-07T09:30:32.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.045+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:30:32.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.046+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:30:32.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.047+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:30:32.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.048+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:30:32.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.050+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.051+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.052+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:28:00+00:00, run_after=2024-03-07 07:30:00+00:00
[2024-03-07T09:30:32.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:30:32.058+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.058+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:30:32.059+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.059+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:30:32.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.060+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.060+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.061+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:30:32.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:30:32.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:30:32.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:30:32.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:30:32.069+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:30:32.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.069+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:30:32.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.070+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:30:32.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.071+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:30:32.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.072+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:30:32.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.073+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:30:32.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.074+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:30:32.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.102+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:30:32.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.105+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:30:32.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:30:32.105+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:30:32.118+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.278 seconds
[2024-03-07T09:32:28.376+0200] {processor.py:161} INFO - Started process (PID=31320) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:32:28.377+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:32:28.377+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.377+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:32:28.378+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.378+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:32:28.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.433+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:32:28.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.433+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:32:28.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.451+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:32:28.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.452+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:32:28.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.505+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:32:28.518+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.518+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:32:28.743+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.742+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:32:28.768+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.768+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:32:28.895+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:28.895+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:32:28.910+0200] {processor.py:840} INFO - DAG(s) 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dag_id_2', 'example_bash_operator', 'example_dynamic_task_mapping', 'example_short_circuit_decorator', 'example_xcom_args_with_operators', 'example_dag_decorator', 'example_sla_dag', 'example_external_task_marker_child', 'dataset_consumes_1', 'example_sensors', 'dataset_produces_1', 'example_branch_datetime_operator_3', 'latest_only_with_trigger', 'example_complex', 'example_task_group', 'example_xcom_args', 'dataset_produces_2', 'example_sensor_decorator', 'example_params_ui_tutorial', 'example_branch_dop_operator_v3', 'example_trigger_target_dag', 'tutorial_objectstorage', 'dataset_consumes_1_never_scheduled', 'example_params_trigger_ui', 'example_branch_datetime_operator', 'example_task_group_decorator', 'dataset_consumes_1_and_2', 'example_trigger_controller_dag', 'example_branch_datetime_operator_2', 'example_external_task_marker_parent', 'tutorial_taskflow_api', 'example_short_circuit_operator', 'example_python_decorator', 'example_time_delta_sensor_async', 'dataset_consumes_unknown_never_scheduled', 'tutorial', 'example_nested_branch_dag', 'dag_id_1', 'example_setup_teardown_taskflow', 'tutorial_dag', 'example_setup_teardown', 'example_weekday_branch_operator', 'example_skip_dag', 'dag_id_3', 'example_python_operator', 'latest_only', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom', 'example_branch_labels', 'example_passing_params_via_test_command' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:32:29.294+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.294+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:32:29.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.314+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:32:29.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.316+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:32:29.317+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.317+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:32:29.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.318+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:32:29.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.319+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:32:29.320+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.320+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:32:29.321+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.321+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:32:29.323+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.323+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.324+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.324+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:32:29.327+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.327+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.329+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.332+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.332+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.335+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.335+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:31:00+00:00, run_after=2024-03-07 07:32:00+00:00
[2024-03-07T09:32:29.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.343+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.343+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:32:29.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.345+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:32:29.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.346+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:32:29.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.348+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:32:29.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.350+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:32:29.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.353+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:32:29.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.354+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:32:29.359+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.359+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:31:00+00:00, run_after=2024-03-07 07:32:00+00:00
[2024-03-07T09:32:29.360+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.360+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:32:29.361+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.361+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:32:29.363+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.362+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:32:29.364+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.364+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:32:29.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.365+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.366+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.366+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.367+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.368+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.369+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.373+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:30:00+00:00, run_after=2024-03-07 07:32:00+00:00
[2024-03-07T09:32:29.374+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.374+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:32:29.375+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.375+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:32:29.376+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.375+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:32:29.377+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.376+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.378+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.377+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.378+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.378+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:32:29.380+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.379+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:32:29.381+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.380+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:32:29.383+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.383+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.384+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.384+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:32:29.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.385+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:32:29.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.385+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:32:29.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.386+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:32:29.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.387+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:32:29.388+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.388+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:32:29.389+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.389+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:32:29.390+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.390+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:32:29.391+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.391+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:32:29.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.419+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:32:29.423+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.423+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:32:29.423+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:32:29.423+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:32:29.438+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.064 seconds
[2024-03-07T09:34:03.304+0200] {processor.py:161} INFO - Started process (PID=31427) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:34:03.305+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:34:03.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.305+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:34:03.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.307+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:34:03.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.365+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:34:03.366+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.366+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:34:03.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.385+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:34:03.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.387+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:34:03.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.453+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:34:03.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.467+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:34:03.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.673+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:34:03.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.700+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:34:03.828+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:03.828+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:34:03.842+0200] {processor.py:840} INFO - DAG(s) 'example_xcom_args_with_operators', 'example_setup_teardown_taskflow', 'example_task_group_decorator', 'dag_id_3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_sensors', 'latest_only', 'dataset_produces_1', 'dataset_consumes_1', 'example_weekday_branch_operator', 'dag_id_1', 'example_xcom_args', 'dataset_consumes_1_and_2', 'tutorial_dag', 'dataset_consumes_unknown_never_scheduled', 'example_trigger_controller_dag', 'example_dag_decorator', 'example_branch_datetime_operator', 'example_branch_datetime_operator_2', 'example_complex', 'example_skip_dag', 'example_subdag_operator.section-1', 'example_trigger_target_dag', 'example_nested_branch_dag', 'example_python_decorator', 'example_xcom', 'example_subdag_operator.section-2', 'example_branch_datetime_operator_3', 'example_short_circuit_operator', 'latest_only_with_trigger', 'example_params_trigger_ui', 'example_task_group', 'example_sensor_decorator', 'example_setup_teardown', 'example_external_task_marker_parent', 'tutorial', 'example_branch_dop_operator_v3', 'dataset_consumes_1_never_scheduled', 'example_python_operator', 'dag_id_2', 'example_branch_labels', 'example_dynamic_task_mapping', 'example_external_task_marker_child', 'example_time_delta_sensor_async', 'example_passing_params_via_test_command', 'example_subdag_operator', 'tutorial_objectstorage', 'example_bash_operator', 'example_short_circuit_decorator', 'example_sla_dag', 'dataset_produces_2', 'example_params_ui_tutorial', 'tutorial_taskflow_api' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:34:04.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.306+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:34:04.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.324+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:34:04.327+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.326+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:34:04.327+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.327+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:34:04.328+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.328+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:34:04.329+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.329+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:34:04.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.330+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:34:04.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.330+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:34:04.332+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.332+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.333+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.333+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:34:04.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.336+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.338+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.338+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.339+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.342+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.341+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.346+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:33:00+00:00, run_after=2024-03-07 07:34:00+00:00
[2024-03-07T09:34:04.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.348+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:34:04.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.350+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:34:04.351+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.351+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:34:04.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.353+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:34:04.355+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.354+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:34:04.358+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.358+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.359+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.359+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:34:04.360+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.360+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:34:04.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.365+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:33:00+00:00, run_after=2024-03-07 07:34:00+00:00
[2024-03-07T09:34:04.366+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.366+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:34:04.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.367+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:34:04.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.368+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:34:04.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.368+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:34:04.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.369+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.370+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.370+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.371+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.371+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.372+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.372+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.373+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.376+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.376+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:32:00+00:00, run_after=2024-03-07 07:34:00+00:00
[2024-03-07T09:34:04.377+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.377+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:34:04.378+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.378+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:34:04.379+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.379+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:34:04.380+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.380+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.381+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.380+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.381+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.381+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:34:04.382+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.382+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:34:04.383+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.383+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:34:04.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.385+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.386+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:34:04.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.387+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:34:04.388+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.388+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:34:04.389+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.389+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:34:04.390+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.390+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:34:04.391+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.391+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:34:04.392+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.391+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:34:04.392+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.392+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:34:04.393+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.393+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:34:04.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.441+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:34:04.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.445+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:34:04.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:34:04.445+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:34:04.458+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.155 seconds
[2024-03-07T09:35:38.301+0200] {processor.py:161} INFO - Started process (PID=31584) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:35:38.302+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:35:38.302+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.302+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:35:38.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.303+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:35:38.362+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.361+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:35:38.362+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.362+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:35:38.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.384+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:35:38.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.386+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:35:38.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.451+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:35:38.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.466+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:35:38.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.652+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:35:38.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.669+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:35:38.765+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:38.765+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:35:38.777+0200] {processor.py:840} INFO - DAG(s) 'example_subdag_operator.section-1', 'example_skip_dag', 'example_bash_operator', 'tutorial_dag', 'dag_id_1', 'example_passing_params_via_test_command', 'example_task_group', 'dataset_consumes_unknown_never_scheduled', 'example_trigger_target_dag', 'example_short_circuit_decorator', 'example_branch_dop_operator_v3', 'example_params_ui_tutorial', 'example_setup_teardown_taskflow', 'tutorial_objectstorage', 'dataset_produces_1', 'latest_only', 'dataset_consumes_1_and_2', 'example_branch_datetime_operator_3', 'dataset_consumes_1_never_scheduled', 'example_nested_branch_dag', 'dag_id_3', 'dataset_consumes_1', 'example_branch_labels', 'example_weekday_branch_operator', 'tutorial', 'example_sensors', 'example_params_trigger_ui', 'example_setup_teardown', 'example_dag_decorator', 'tutorial_taskflow_api', 'example_sla_dag', 'example_task_group_decorator', 'example_xcom', 'example_xcom_args_with_operators', 'example_time_delta_sensor_async', 'example_branch_datetime_operator', 'latest_only_with_trigger', 'example_short_circuit_operator', 'example_subdag_operator.section-2', 'dataset_produces_2', 'example_trigger_controller_dag', 'example_subdag_operator', 'example_dynamic_task_mapping', 'example_external_task_marker_child', 'example_branch_datetime_operator_2', 'example_complex', 'example_sensor_decorator', 'dag_id_2', 'example_external_task_marker_parent', 'example_python_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_python_operator', 'example_xcom_args' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:35:39.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.095+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:35:39.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.111+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:35:39.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.112+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:35:39.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.113+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:35:39.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.114+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:35:39.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.115+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:35:39.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.115+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:35:39.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.116+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:35:39.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.118+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.118+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:35:39.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.120+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.122+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.124+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.124+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.126+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.126+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:34:00+00:00, run_after=2024-03-07 07:35:00+00:00
[2024-03-07T09:35:39.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.132+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.132+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:35:39.133+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.133+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:35:39.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.134+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:35:39.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.135+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.135+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:35:39.136+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.136+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:35:39.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:35:39.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:35:39.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.143+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:34:00+00:00, run_after=2024-03-07 07:35:00+00:00
[2024-03-07T09:35:39.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:35:39.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:35:39.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:35:39.146+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.146+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:35:39.147+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.146+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.147+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.147+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.149+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.150+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.153+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:32:00+00:00, run_after=2024-03-07 07:34:00+00:00
[2024-03-07T09:35:39.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:35:39.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:35:39.155+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.155+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:35:39.156+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.156+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.156+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:35:39.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.158+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:35:39.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.158+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:35:39.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.160+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.161+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.161+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:35:39.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.161+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:35:39.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.162+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:35:39.163+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.163+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:35:39.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.164+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:35:39.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.164+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:35:39.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.165+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:35:39.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.166+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:35:39.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.166+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:35:39.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.188+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:35:39.192+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.192+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:35:39.192+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:35:39.192+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:35:39.203+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.904 seconds
[2024-03-07T09:37:18.157+0200] {processor.py:161} INFO - Started process (PID=31676) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:37:18.158+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:37:18.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.158+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:37:18.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.159+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:37:18.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.212+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:37:18.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.212+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:37:18.231+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.231+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:37:18.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.232+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:37:18.292+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.291+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:37:18.305+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.305+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:37:18.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.511+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:37:18.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.533+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:37:18.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:18.643+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:37:18.657+0200] {processor.py:840} INFO - DAG(s) 'example_task_group_decorator', 'example_branch_labels', 'example_trigger_controller_dag', 'example_branch_datetime_operator_3', 'example_external_task_marker_child', 'dataset_produces_1', 'tutorial_dag', 'example_branch_datetime_operator', 'example_dag_decorator', 'example_sensors', 'dag_id_1', 'example_skip_dag', 'example_xcom', 'example_nested_branch_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_python_operator', 'latest_only', 'dataset_consumes_1', 'example_xcom_args_with_operators', 'example_subdag_operator.section-2', 'example_subdag_operator.section-1', 'example_subdag_operator', 'dag_id_2', 'dataset_consumes_1_never_scheduled', 'latest_only_with_trigger', 'example_time_delta_sensor_async', 'example_setup_teardown', 'example_weekday_branch_operator', 'example_complex', 'example_short_circuit_decorator', 'tutorial_objectstorage', 'example_xcom_args', 'dataset_consumes_unknown_never_scheduled', 'example_trigger_target_dag', 'example_branch_dop_operator_v3', 'example_bash_operator', 'example_setup_teardown_taskflow', 'example_short_circuit_operator', 'example_sla_dag', 'example_params_ui_tutorial', 'example_branch_datetime_operator_2', 'dag_id_3', 'dataset_produces_2', 'tutorial', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_dynamic_task_mapping', 'example_external_task_marker_parent', 'example_passing_params_via_test_command', 'example_sensor_decorator', 'example_task_group', 'example_python_decorator', 'example_params_trigger_ui' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:37:19.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.073+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:37:19.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.090+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:37:19.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.092+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:37:19.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.093+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:37:19.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.093+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:37:19.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.094+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:37:19.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.095+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:37:19.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.096+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:37:19.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.097+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.098+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:37:19.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.103+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.105+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.107+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.107+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.112+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:36:00+00:00, run_after=2024-03-07 07:37:00+00:00
[2024-03-07T09:37:19.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.113+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.114+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:37:19.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.115+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:37:19.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.116+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:37:19.117+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:37:19.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.118+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:37:19.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.120+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.121+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:37:19.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:37:19.126+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.126+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:36:00+00:00, run_after=2024-03-07 07:37:00+00:00
[2024-03-07T09:37:19.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.127+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:37:19.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.127+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:37:19.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:37:19.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.129+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:37:19.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.132+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.133+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.133+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.137+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.136+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:34:00+00:00, run_after=2024-03-07 07:36:00+00:00
[2024-03-07T09:37:19.137+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.137+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:37:19.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:37:19.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:37:19.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.140+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.141+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.141+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:37:19.142+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:37:19.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:37:19.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:37:19.146+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.146+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:37:19.147+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.147+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:37:19.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.148+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:37:19.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.148+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:37:19.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.149+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:37:19.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.150+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:37:19.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.151+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:37:19.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.151+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:37:19.178+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.177+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:37:19.180+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.180+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:37:19.181+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:37:19.181+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:37:19.192+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.037 seconds
[2024-03-07T09:38:54.556+0200] {processor.py:161} INFO - Started process (PID=31810) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:38:54.557+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:38:54.558+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.557+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:38:54.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.559+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:38:54.633+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.632+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:38:54.633+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.633+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:38:54.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.657+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:38:54.659+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.659+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:38:54.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.731+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:38:54.748+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.747+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:38:54.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.969+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:38:54.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:54.991+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:38:55.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.124+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:38:55.142+0200] {processor.py:840} INFO - DAG(s) 'example_short_circuit_operator', 'example_sla_dag', 'latest_only_with_trigger', 'example_subdag_operator.section-1', 'example_setup_teardown', 'tutorial', 'example_xcom_args_with_operators', 'example_weekday_branch_operator', 'dag_id_3', 'example_short_circuit_decorator', 'dag_id_2', 'example_setup_teardown_taskflow', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dataset_consumes_1', 'example_trigger_controller_dag', 'example_task_group_decorator', 'dataset_produces_1', 'example_dag_decorator', 'tutorial_objectstorage', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1_never_scheduled', 'dataset_consumes_1_and_2', 'latest_only', 'example_dynamic_task_mapping', 'example_skip_dag', 'tutorial_dag', 'example_complex', 'example_branch_datetime_operator', 'dag_id_1', 'example_sensors', 'example_python_operator', 'example_external_task_marker_parent', 'example_trigger_target_dag', 'example_task_group', 'example_time_delta_sensor_async', 'example_nested_branch_dag', 'example_branch_dop_operator_v3', 'example_external_task_marker_child', 'example_params_trigger_ui', 'example_branch_datetime_operator_2', 'example_passing_params_via_test_command', 'example_params_ui_tutorial', 'example_branch_datetime_operator_3', 'tutorial_taskflow_api', 'example_branch_labels', 'dataset_produces_2', 'example_xcom', 'example_xcom_args', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_sensor_decorator', 'example_bash_operator', 'example_python_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:38:55.616+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.615+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:38:55.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.639+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:38:55.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.642+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:38:55.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.643+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:38:55.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.643+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:38:55.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.644+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:38:55.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.645+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:38:55.647+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.646+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:38:55.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.649+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.651+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:38:55.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.657+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.660+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.662+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.662+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.669+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:37:00+00:00, run_after=2024-03-07 07:38:00+00:00
[2024-03-07T09:38:55.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.671+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.672+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:38:55.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.673+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:38:55.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.675+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:38:55.676+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.676+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.677+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:38:55.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.678+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:38:55.681+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.680+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.682+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.682+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:38:55.683+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.683+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:38:55.689+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.689+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:37:00+00:00, run_after=2024-03-07 07:38:00+00:00
[2024-03-07T09:38:55.691+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.690+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:38:55.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.691+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:38:55.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.692+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:38:55.693+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.693+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:38:55.694+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.694+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.695+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.695+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.696+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.696+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.698+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.697+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.699+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.699+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:36:00+00:00, run_after=2024-03-07 07:38:00+00:00
[2024-03-07T09:38:55.705+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:38:55.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:38:55.707+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.707+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:38:55.708+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.708+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.710+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:38:55.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:38:55.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.712+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:38:55.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.715+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.716+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:38:55.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.717+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:38:55.719+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.718+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:38:55.720+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.720+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:38:55.721+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.721+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:38:55.722+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.722+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:38:55.723+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.723+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:38:55.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.724+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:38:55.725+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.725+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:38:55.756+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.756+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:38:55.760+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.760+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:38:55.760+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:38:55.760+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:38:55.773+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.219 seconds
[2024-03-07T09:40:36.117+0200] {processor.py:161} INFO - Started process (PID=31920) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:40:36.118+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:40:36.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.119+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:40:36.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.120+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:40:36.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.173+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:40:36.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.173+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:40:36.191+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.190+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:40:36.192+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.192+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:40:36.244+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.243+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:40:36.255+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.255+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:40:36.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.429+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:40:36.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.450+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:40:36.567+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:36.566+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:40:36.579+0200] {processor.py:840} INFO - DAG(s) 'dag_id_3', 'example_sensors', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'tutorial_taskflow_api', 'example_passing_params_via_test_command', 'example_python_decorator', 'example_task_group_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_subdag_operator.section-1', 'example_short_circuit_operator', 'example_weekday_branch_operator', 'example_setup_teardown_taskflow', 'dataset_consumes_1_never_scheduled', 'dag_id_1', 'example_branch_datetime_operator_3', 'example_subdag_operator.section-2', 'example_sla_dag', 'tutorial', 'latest_only', 'example_subdag_operator', 'latest_only_with_trigger', 'example_trigger_target_dag', 'example_complex', 'example_xcom_args_with_operators', 'tutorial_objectstorage', 'dataset_consumes_1_and_2', 'example_external_task_marker_parent', 'example_branch_datetime_operator', 'dataset_consumes_1', 'example_xcom', 'example_nested_branch_dag', 'example_xcom_args', 'dag_id_2', 'example_task_group', 'example_python_operator', 'tutorial_dag', 'example_sensor_decorator', 'example_setup_teardown', 'example_dynamic_task_mapping', 'example_bash_operator', 'dataset_consumes_unknown_never_scheduled', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator_2', 'example_external_task_marker_child', 'example_dag_decorator', 'example_short_circuit_decorator', 'dataset_produces_1', 'example_skip_dag', 'example_time_delta_sensor_async', 'example_branch_labels', 'dataset_produces_2', 'example_params_trigger_ui' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:40:37.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.009+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:40:37.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.026+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:40:37.028+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.028+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:40:37.029+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.029+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:40:37.030+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.030+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:40:37.031+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.030+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:40:37.031+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.031+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:40:37.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.032+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:40:37.034+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.034+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.034+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:40:37.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.039+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.039+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.041+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.043+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.047+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:39:00+00:00, run_after=2024-03-07 07:40:00+00:00
[2024-03-07T09:40:37.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.050+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:40:37.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.051+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:40:37.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.052+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:40:37.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:40:37.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.054+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:40:37.056+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.056+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:40:37.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:40:37.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:39:00+00:00, run_after=2024-03-07 07:40:00+00:00
[2024-03-07T09:40:37.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:40:37.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:40:37.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:40:37.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:40:37.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.069+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.069+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:38:00+00:00, run_after=2024-03-07 07:40:00+00:00
[2024-03-07T09:40:37.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.074+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:40:37.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:40:37.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:40:37.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:40:37.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:40:37.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:40:37.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:40:37.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:40:37.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:40:37.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.084+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:40:37.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.085+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:40:37.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.086+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:40:37.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.087+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:40:37.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.087+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:40:37.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.088+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:40:37.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.114+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:40:37.117+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:40:37.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:40:37.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:40:37.129+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.014 seconds
[2024-03-07T09:42:10.457+0200] {processor.py:161} INFO - Started process (PID=32030) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:42:10.458+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:42:10.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.458+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:42:10.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.459+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:42:10.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.509+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:42:10.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.509+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:42:10.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.526+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:42:10.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.527+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:42:10.577+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.576+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:42:10.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.588+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:42:10.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.756+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:42:10.772+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.772+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:42:10.876+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:10.876+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:42:10.889+0200] {processor.py:840} INFO - DAG(s) 'example_trigger_target_dag', 'example_xcom', 'example_task_group_decorator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_dop_operator_v3', 'latest_only', 'example_branch_labels', 'example_params_ui_tutorial', 'example_branch_datetime_operator_2', 'tutorial_dag', 'example_external_task_marker_child', 'example_branch_datetime_operator_3', 'example_time_delta_sensor_async', 'example_complex', 'example_params_trigger_ui', 'example_weekday_branch_operator', 'example_xcom_args_with_operators', 'example_short_circuit_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'tutorial_taskflow_api', 'example_sla_dag', 'example_passing_params_via_test_command', 'example_skip_dag', 'example_task_group', 'dataset_consumes_1_and_2', 'dataset_consumes_1_never_scheduled', 'example_dag_decorator', 'dataset_consumes_1', 'example_bash_operator', 'example_setup_teardown_taskflow', 'example_xcom_args', 'dag_id_2', 'example_setup_teardown', 'example_trigger_controller_dag', 'dag_id_3', 'example_dynamic_task_mapping', 'tutorial', 'example_python_operator', 'latest_only_with_trigger', 'example_sensor_decorator', 'dataset_produces_2', 'example_sensors', 'tutorial_objectstorage', 'dataset_produces_1', 'dag_id_1', 'example_nested_branch_dag', 'dataset_consumes_unknown_never_scheduled', 'example_short_circuit_operator', 'example_external_task_marker_parent', 'example_python_decorator', 'example_branch_datetime_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:42:11.279+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.279+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:42:11.296+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.295+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:42:11.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.297+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:42:11.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.298+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:42:11.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.299+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:42:11.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.299+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:42:11.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.300+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:42:11.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.301+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:42:11.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.303+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.303+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:42:11.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.305+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.307+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.309+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.311+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.316+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:41:00+00:00, run_after=2024-03-07 07:42:00+00:00
[2024-03-07T09:42:11.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.318+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.318+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:42:11.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.319+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:42:11.320+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.320+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:42:11.321+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.321+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.321+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:42:11.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.322+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:42:11.324+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.324+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.325+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:42:11.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.325+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:42:11.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.330+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:41:00+00:00, run_after=2024-03-07 07:42:00+00:00
[2024-03-07T09:42:11.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.330+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:42:11.331+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.331+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:42:11.332+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.332+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:42:11.332+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.332+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:42:11.333+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.333+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.334+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.334+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.335+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.335+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.336+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.337+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.336+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:40:00+00:00, run_after=2024-03-07 07:42:00+00:00
[2024-03-07T09:42:11.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:42:11.341+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.341+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:42:11.342+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.342+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:42:11.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.342+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.343+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.344+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:42:11.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.345+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:42:11.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.345+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:42:11.347+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.347+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.348+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:42:11.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:42:11.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:42:11.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.350+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:42:11.351+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.351+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:42:11.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.352+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:42:11.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.353+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:42:11.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.353+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:42:11.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.354+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:42:11.377+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.376+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:42:11.379+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.379+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:42:11.380+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:42:11.380+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:42:11.391+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.936 seconds
[2024-03-07T09:43:47.447+0200] {processor.py:161} INFO - Started process (PID=32142) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:43:47.448+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:43:47.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.448+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:43:47.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.449+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:43:47.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.504+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:43:47.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.505+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:43:47.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.522+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:43:47.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.523+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:43:47.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.574+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:43:47.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.586+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:43:47.790+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.789+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:43:47.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.807+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:43:47.912+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:47.912+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:43:47.928+0200] {processor.py:840} INFO - DAG(s) 'example_task_group', 'example_sla_dag', 'dataset_produces_1', 'example_dynamic_task_mapping', 'example_sensor_decorator', 'example_xcom', 'example_task_group_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_ui_tutorial', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'latest_only', 'example_short_circuit_decorator', 'example_branch_datetime_operator_3', 'tutorial', 'example_branch_datetime_operator', 'tutorial_dag', 'latest_only_with_trigger', 'example_nested_branch_dag', 'example_params_trigger_ui', 'dataset_consumes_1_never_scheduled', 'example_branch_dop_operator_v3', 'dataset_produces_2', 'example_passing_params_via_test_command', 'example_trigger_target_dag', 'example_xcom_args_with_operators', 'example_external_task_marker_child', 'example_external_task_marker_parent', 'example_weekday_branch_operator', 'example_setup_teardown', 'dag_id_3', 'example_xcom_args', 'tutorial_taskflow_api', 'example_dag_decorator', 'dag_id_1', 'example_trigger_controller_dag', 'tutorial_objectstorage', 'example_time_delta_sensor_async', 'example_skip_dag', 'example_python_decorator', 'example_branch_labels', 'example_short_circuit_operator', 'example_branch_datetime_operator_2', 'example_bash_operator', 'dataset_consumes_1_and_2', 'example_python_operator', 'example_sensors', 'dag_id_2', 'example_complex' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:43:48.406+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.406+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:43:48.427+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.427+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:43:48.429+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.429+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:43:48.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.430+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:43:48.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.431+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:43:48.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.431+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:43:48.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.432+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:43:48.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.433+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:43:48.435+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.435+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.436+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.436+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:43:48.439+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.439+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.441+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.443+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.445+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.450+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:42:00+00:00, run_after=2024-03-07 07:43:00+00:00
[2024-03-07T09:43:48.453+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.453+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.453+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:43:48.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.454+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:43:48.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.455+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:43:48.456+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.456+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:43:48.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:43:48.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.460+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:43:48.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:43:48.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:42:00+00:00, run_after=2024-03-07 07:43:00+00:00
[2024-03-07T09:43:48.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:43:48.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:43:48.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:43:48.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:43:48.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:40:00+00:00, run_after=2024-03-07 07:42:00+00:00
[2024-03-07T09:43:48.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:43:48.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.479+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:43:48.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:43:48.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.481+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:43:48.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:43:48.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:43:48.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:43:48.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:43:48.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:43:48.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.489+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:43:48.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.490+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:43:48.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.491+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:43:48.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.491+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:43:48.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.492+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:43:48.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.493+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:43:48.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.519+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:43:48.522+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.522+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:43:48.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:43:48.522+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:43:48.534+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.089 seconds
[2024-03-07T09:45:19.118+0200] {processor.py:161} INFO - Started process (PID=32243) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:45:19.119+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:45:19.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.119+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:45:19.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.120+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:45:19.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.170+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:45:19.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.170+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:45:19.187+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.187+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:45:19.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.188+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:45:19.240+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.239+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:45:19.252+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.252+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:45:19.422+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.421+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:45:19.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.438+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:45:19.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.532+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:45:19.544+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_external_task_marker_child', 'dataset_consumes_1', 'example_xcom', 'example_params_ui_tutorial', 'example_passing_params_via_test_command', 'tutorial_taskflow_api', 'example_branch_datetime_operator_3', 'example_branch_labels', 'example_python_operator', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'example_trigger_controller_dag', 'dataset_produces_2', 'example_python_decorator', 'example_setup_teardown', 'example_task_group_decorator', 'tutorial_dag', 'dag_id_3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'tutorial', 'example_skip_dag', 'example_short_circuit_decorator', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator', 'example_nested_branch_dag', 'latest_only_with_trigger', 'example_time_delta_sensor_async', 'example_bash_operator', 'example_dag_decorator', 'example_weekday_branch_operator', 'example_sensors', 'example_trigger_target_dag', 'tutorial_objectstorage', 'dag_id_2', 'example_sla_dag', 'example_branch_datetime_operator_2', 'dag_id_1', 'dataset_consumes_1_and_2', 'example_params_trigger_ui', 'example_setup_teardown_taskflow', 'example_short_circuit_operator', 'example_xcom_args', 'example_xcom_args_with_operators', 'latest_only', 'dataset_produces_1', 'example_dynamic_task_mapping', 'dataset_consumes_1_never_scheduled', 'example_external_task_marker_parent', 'example_task_group' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:45:19.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.861+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:45:19.877+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.877+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:45:19.879+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.879+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:45:19.879+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.879+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:45:19.880+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.880+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:45:19.881+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.881+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:45:19.881+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.881+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:45:19.882+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.882+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:45:19.884+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.884+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.885+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.885+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:45:19.887+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.887+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.889+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.888+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.890+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.890+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.892+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.892+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.896+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.896+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:44:00+00:00, run_after=2024-03-07 07:45:00+00:00
[2024-03-07T09:45:19.898+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.898+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.899+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.899+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:45:19.900+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.899+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:45:19.900+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.900+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:45:19.901+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.901+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.902+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:45:19.903+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.903+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:45:19.904+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.904+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.905+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.905+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:45:19.906+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.906+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:45:19.910+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.910+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:44:00+00:00, run_after=2024-03-07 07:45:00+00:00
[2024-03-07T09:45:19.911+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.910+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:45:19.911+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.911+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:45:19.912+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.912+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:45:19.913+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.912+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:45:19.913+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.913+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.914+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.914+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.915+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.915+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.916+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.916+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.917+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.916+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.919+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:42:00+00:00, run_after=2024-03-07 07:44:00+00:00
[2024-03-07T09:45:19.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.920+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:45:19.921+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.921+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:45:19.922+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.921+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:45:19.922+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.922+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.923+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.923+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.924+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.924+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:45:19.925+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.924+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:45:19.925+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.925+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:45:19.927+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.927+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.928+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.928+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:45:19.928+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.928+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:45:19.929+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.929+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:45:19.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.930+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:45:19.931+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.930+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:45:19.931+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.931+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:45:19.932+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.932+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:45:19.933+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.933+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:45:19.933+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.933+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:45:19.958+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.958+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:45:19.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.961+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:45:19.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:45:19.961+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:45:19.974+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.858 seconds
[2024-03-07T09:46:52.513+0200] {processor.py:161} INFO - Started process (PID=32342) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:46:52.515+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:46:52.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.515+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:46:52.517+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.517+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:46:52.585+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.585+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:46:52.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.585+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:46:52.609+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.609+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:46:52.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.610+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:46:52.682+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.680+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:46:52.697+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.697+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:46:52.909+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.908+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:46:52.931+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:52.931+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:46:53.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.063+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:46:53.080+0200] {processor.py:840} INFO - DAG(s) 'example_dag_decorator', 'example_passing_params_via_test_command', 'example_subdag_operator.section-1', 'example_xcom_args_with_operators', 'example_sla_dag', 'dataset_consumes_1_never_scheduled', 'example_complex', 'example_xcom_args', 'dataset_produces_2', 'example_trigger_target_dag', 'tutorial', 'example_external_task_marker_child', 'example_branch_datetime_operator_3', 'dag_id_1', 'example_branch_dop_operator_v3', 'example_short_circuit_operator', 'example_task_group_decorator', 'example_time_delta_sensor_async', 'example_short_circuit_decorator', 'example_bash_operator', 'example_trigger_controller_dag', 'example_sensor_decorator', 'dag_id_2', 'latest_only_with_trigger', 'example_branch_datetime_operator', 'example_nested_branch_dag', 'example_weekday_branch_operator', 'dataset_consumes_unknown_never_scheduled', 'example_python_decorator', 'example_branch_datetime_operator_2', 'example_branch_labels', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_python_operator', 'example_sensors', 'example_dynamic_task_mapping', 'example_task_group', 'example_external_task_marker_parent', 'dataset_produces_1', 'example_skip_dag', 'dataset_consumes_1_and_2', 'tutorial_dag', 'example_xcom', 'example_setup_teardown_taskflow', 'example_params_trigger_ui', 'dataset_consumes_1', 'tutorial_taskflow_api', 'example_params_ui_tutorial', 'dag_id_3', 'tutorial_objectstorage', 'example_subdag_operator.section-2', 'example_subdag_operator', 'latest_only', 'example_setup_teardown' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:46:53.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.516+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:46:53.538+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.538+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:46:53.540+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.540+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:46:53.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.541+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:46:53.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.542+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:46:53.543+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.543+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:46:53.544+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.544+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:46:53.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.545+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:46:53.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.548+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.549+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:46:53.552+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.552+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.554+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.554+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.557+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.559+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.566+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.566+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:45:00+00:00, run_after=2024-03-07 07:46:00+00:00
[2024-03-07T09:46:53.568+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.568+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.569+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.569+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:46:53.570+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.570+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:46:53.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.571+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:46:53.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.572+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.573+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.573+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:46:53.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.574+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:46:53.577+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.576+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.578+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:46:53.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.579+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:46:53.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.586+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:45:00+00:00, run_after=2024-03-07 07:46:00+00:00
[2024-03-07T09:46:53.587+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.587+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:46:53.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.588+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:46:53.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.588+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:46:53.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.589+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:46:53.591+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.590+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.591+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.593+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.592+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.594+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.593+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.595+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.595+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.600+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.599+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:44:00+00:00, run_after=2024-03-07 07:46:00+00:00
[2024-03-07T09:46:53.601+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.601+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:46:53.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.601+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:46:53.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.602+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:46:53.603+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.603+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.604+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.604+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.605+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.605+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:46:53.606+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.606+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:46:53.607+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.607+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:46:53.609+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.609+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.610+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:46:53.612+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.611+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:46:53.613+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:46:53.614+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.614+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:46:53.616+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.615+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:46:53.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.616+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:46:53.618+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.617+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:46:53.618+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.618+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:46:53.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.619+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:46:53.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.653+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:46:53.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.657+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:46:53.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:46:53.657+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:46:53.671+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.160 seconds
[2024-03-07T09:48:30.589+0200] {processor.py:161} INFO - Started process (PID=32442) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:48:30.590+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:48:30.591+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.591+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:48:30.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.592+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:48:30.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.657+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:48:30.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.658+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:48:30.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.677+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:48:30.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.678+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:48:30.731+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.730+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:48:30.743+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.743+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:48:30.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.919+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:48:30.936+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:30.936+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:48:31.036+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.036+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:48:31.050+0200] {processor.py:840} INFO - DAG(s) 'dag_id_1', 'example_branch_labels', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator', 'dag_id_2', 'dataset_produces_1', 'example_task_group', 'example_branch_datetime_operator_3', 'example_params_trigger_ui', 'example_subdag_operator.section-2', 'example_short_circuit_decorator', 'dataset_consumes_1_and_2', 'tutorial', 'dag_id_3', 'example_xcom', 'dataset_produces_2', 'example_branch_dop_operator_v3', 'example_params_ui_tutorial', 'example_passing_params_via_test_command', 'tutorial_taskflow_api', 'example_setup_teardown', 'dataset_consumes_1', 'tutorial_dag', 'example_sensors', 'example_python_decorator', 'example_dag_decorator', 'example_branch_datetime_operator_2', 'latest_only_with_trigger', 'example_skip_dag', 'example_xcom_args', 'example_python_operator', 'example_trigger_target_dag', 'example_xcom_args_with_operators', 'example_sensor_decorator', 'example_task_group_decorator', 'example_subdag_operator.section-1', 'example_dynamic_task_mapping', 'example_weekday_branch_operator', 'example_setup_teardown_taskflow', 'dataset_consumes_unknown_never_scheduled', 'example_time_delta_sensor_async', 'tutorial_objectstorage', 'example_complex', 'example_subdag_operator', 'example_external_task_marker_child', 'example_sla_dag', 'example_nested_branch_dag', 'example_short_circuit_operator', 'example_trigger_controller_dag', 'example_bash_operator', 'latest_only', 'example_external_task_marker_parent', 'example_dynamic_task_mapping_with_no_taskflow_operators' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:48:31.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.430+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:48:31.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.447+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:48:31.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.448+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:48:31.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.449+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:48:31.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.450+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:48:31.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.451+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:48:31.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.451+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:48:31.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.452+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:48:31.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.454+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.455+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:48:31.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:47:00+00:00, run_after=2024-03-07 07:48:00+00:00
[2024-03-07T09:48:31.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:48:31.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:48:31.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:48:31.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:48:31.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:48:31.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.481+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:48:31.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:48:31.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:47:00+00:00, run_after=2024-03-07 07:48:00+00:00
[2024-03-07T09:48:31.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:48:31.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:48:31.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.490+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:48:31.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.490+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:48:31.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.495+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:46:00+00:00, run_after=2024-03-07 07:48:00+00:00
[2024-03-07T09:48:31.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:48:31.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:48:31.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:48:31.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.502+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.503+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:48:31.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:48:31.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.504+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:48:31.506+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.506+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:48:31.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:48:31.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.508+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:48:31.509+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.509+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:48:31.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.510+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:48:31.511+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.511+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:48:31.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.512+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:48:31.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.513+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:48:31.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.513+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:48:31.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.539+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:48:31.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.542+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:48:31.542+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:48:31.542+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:48:31.552+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.965 seconds
[2024-03-07T09:50:08.570+0200] {processor.py:161} INFO - Started process (PID=32550) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:50:08.571+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:50:08.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.571+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:50:08.573+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.573+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:50:08.631+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.631+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:50:08.631+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.631+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:50:08.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.650+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:50:08.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.651+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:50:08.705+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.704+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:50:08.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.716+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:50:08.905+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.904+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:50:08.923+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:08.923+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:50:09.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.045+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:50:09.060+0200] {processor.py:840} INFO - DAG(s) 'example_task_group', 'example_short_circuit_operator', 'dag_id_2', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom_args_with_operators', 'dataset_consumes_unknown_never_scheduled', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'latest_only_with_trigger', 'example_skip_dag', 'tutorial_dag', 'example_dag_decorator', 'example_bash_operator', 'example_complex', 'dag_id_3', 'latest_only', 'example_passing_params_via_test_command', 'example_weekday_branch_operator', 'dataset_produces_1', 'example_time_delta_sensor_async', 'example_params_ui_tutorial', 'example_params_trigger_ui', 'example_branch_datetime_operator', 'example_external_task_marker_parent', 'example_external_task_marker_child', 'tutorial_taskflow_api', 'example_sla_dag', 'example_dynamic_task_mapping', 'example_setup_teardown', 'example_python_decorator', 'example_xcom', 'example_branch_labels', 'dataset_consumes_1_and_2', 'example_short_circuit_decorator', 'tutorial', 'dag_id_1', 'example_branch_dop_operator_v3', 'example_sensor_decorator', 'example_trigger_target_dag', 'example_task_group_decorator', 'dataset_consumes_1_never_scheduled', 'dataset_produces_2', 'example_setup_teardown_taskflow', 'example_nested_branch_dag', 'example_sensors', 'example_trigger_controller_dag', 'example_branch_datetime_operator_3', 'example_xcom_args', 'tutorial_objectstorage', 'example_python_operator', 'example_branch_datetime_operator_2', 'dataset_consumes_1' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:50:09.616+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.616+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:50:09.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.640+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:50:09.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.643+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:50:09.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.645+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:50:09.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.646+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:50:09.647+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.647+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:50:09.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.648+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:50:09.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.649+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:50:09.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.652+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.653+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:50:09.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.657+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.660+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.665+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.665+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.668+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.675+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:49:00+00:00, run_after=2024-03-07 07:50:00+00:00
[2024-03-07T09:50:09.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.678+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.700+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:50:09.701+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:50:09.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:50:09.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.704+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:50:09.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:50:09.708+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.708+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:50:09.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.710+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:50:09.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.716+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:49:00+00:00, run_after=2024-03-07 07:50:00+00:00
[2024-03-07T09:50:09.718+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.718+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:50:09.719+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.719+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:50:09.720+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.719+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:50:09.720+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.720+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:50:09.722+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.721+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.723+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.723+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.724+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.725+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.725+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.726+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.731+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:48:00+00:00, run_after=2024-03-07 07:50:00+00:00
[2024-03-07T09:50:09.733+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.733+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:50:09.734+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.734+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:50:09.735+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.735+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:50:09.736+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.736+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.737+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.737+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.738+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.738+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:50:09.739+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.739+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:50:09.740+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.740+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:50:09.743+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.743+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.744+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.744+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:50:09.745+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.745+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:50:09.747+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.746+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:50:09.748+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.748+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:50:09.749+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.749+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:50:09.751+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.750+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:50:09.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.753+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:50:09.755+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.755+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:50:09.756+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.756+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:50:09.793+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.793+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:50:09.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:50:09.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:50:09.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:50:09.814+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.245 seconds
[2024-03-07T09:51:47.222+0200] {processor.py:161} INFO - Started process (PID=32651) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:51:47.223+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:51:47.224+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.223+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:51:47.225+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.225+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:51:47.280+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.279+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:51:47.280+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.280+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:51:47.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.298+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:51:47.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.299+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:51:47.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.352+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:51:47.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.365+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:51:47.546+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.545+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:51:47.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.562+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:51:47.666+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:47.666+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:51:47.678+0200] {processor.py:840} INFO - DAG(s) 'example_python_operator', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_task_group_decorator', 'latest_only', 'example_sensor_decorator', 'dataset_consumes_1', 'example_passing_params_via_test_command', 'example_sensors', 'example_subdag_operator.section-1', 'dag_id_1', 'example_xcom_args', 'example_dynamic_task_mapping', 'latest_only_with_trigger', 'example_subdag_operator.section-2', 'tutorial_dag', 'example_external_task_marker_parent', 'tutorial_objectstorage', 'dataset_consumes_unknown_never_scheduled', 'example_dag_decorator', 'example_branch_datetime_operator_2', 'example_skip_dag', 'example_setup_teardown', 'example_subdag_operator', 'dag_id_2', 'example_python_decorator', 'example_trigger_controller_dag', 'example_short_circuit_operator', 'example_setup_teardown_taskflow', 'dataset_produces_2', 'example_xcom', 'example_time_delta_sensor_async', 'dag_id_3', 'example_weekday_branch_operator', 'example_external_task_marker_child', 'example_nested_branch_dag', 'example_branch_dop_operator_v3', 'example_bash_operator', 'tutorial', 'example_sla_dag', 'example_xcom_args_with_operators', 'dataset_produces_1', 'example_task_group', 'example_complex', 'example_branch_labels', 'example_branch_datetime_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_trigger_target_dag', 'example_params_trigger_ui', 'example_short_circuit_decorator', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator_3', 'example_params_ui_tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:51:48.019+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.019+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:51:48.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.037+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:51:48.039+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.039+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:51:48.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.039+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:51:48.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.040+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:51:48.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.041+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:51:48.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.042+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:51:48.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.042+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:51:48.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.044+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.045+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:51:48.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.047+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.051+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.058+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.058+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:50:00+00:00, run_after=2024-03-07 07:51:00+00:00
[2024-03-07T09:51:48.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.060+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.061+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:51:48.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.061+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:51:48.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:51:48.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:51:48.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:51:48.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:51:48.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:51:48.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:50:00+00:00, run_after=2024-03-07 07:51:00+00:00
[2024-03-07T09:51:48.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:51:48.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.074+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:51:48.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:51:48.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:51:48.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:48:00+00:00, run_after=2024-03-07 07:50:00+00:00
[2024-03-07T09:51:48.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:51:48.085+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.085+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:51:48.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.086+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:51:48.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.087+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.087+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:51:48.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.089+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:51:48.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:51:48.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:51:48.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.093+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:51:48.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:51:48.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.095+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:51:48.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.096+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:51:48.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.096+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:51:48.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.097+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:51:48.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.098+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:51:48.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.099+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:51:48.124+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.123+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:51:48.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.126+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:51:48.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:51:48.127+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:51:48.138+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.918 seconds
[2024-03-07T09:53:16.856+0200] {processor.py:161} INFO - Started process (PID=32749) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:53:16.857+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:53:16.857+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.857+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:53:16.859+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.858+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:53:16.913+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.912+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:53:16.913+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.913+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:53:16.931+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.931+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:53:16.932+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.932+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:53:16.985+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.984+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:53:16.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:16.997+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:53:17.176+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.175+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:53:17.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.192+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:53:17.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.295+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:53:17.308+0200] {processor.py:840} INFO - DAG(s) 'example_subdag_operator.section-2', 'example_trigger_controller_dag', 'example_subdag_operator.section-1', 'example_dynamic_task_mapping', 'dataset_produces_2', 'example_branch_datetime_operator', 'example_branch_labels', 'example_xcom_args', 'example_time_delta_sensor_async', 'example_bash_operator', 'dataset_produces_1', 'example_branch_datetime_operator_2', 'latest_only', 'tutorial', 'example_python_decorator', 'example_xcom_args_with_operators', 'example_sensor_decorator', 'example_branch_dop_operator_v3', 'example_task_group', 'dataset_consumes_unknown_never_scheduled', 'example_nested_branch_dag', 'example_skip_dag', 'example_external_task_marker_parent', 'dataset_consumes_1_never_scheduled', 'dataset_consumes_1_and_2', 'example_branch_datetime_operator_3', 'tutorial_taskflow_api', 'tutorial_dag', 'example_sensors', 'example_setup_teardown_taskflow', 'example_params_trigger_ui', 'example_dag_decorator', 'example_subdag_operator', 'example_short_circuit_decorator', 'dataset_consumes_1', 'example_weekday_branch_operator', 'dag_id_2', 'dag_id_3', 'example_sla_dag', 'example_passing_params_via_test_command', 'dag_id_1', 'latest_only_with_trigger', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_complex', 'tutorial_objectstorage', 'example_params_ui_tutorial', 'example_trigger_target_dag', 'example_python_operator', 'example_setup_teardown', 'example_short_circuit_operator', 'example_xcom', 'example_task_group_decorator', 'example_external_task_marker_child' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:53:17.729+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.729+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:53:17.746+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.746+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:53:17.748+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.748+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:53:17.749+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.749+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:53:17.750+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.750+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:53:17.750+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.750+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:53:17.751+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.751+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:53:17.752+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.752+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:53:17.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.754+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.755+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.754+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:53:17.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.757+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.759+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.759+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.761+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.760+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.762+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.762+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.767+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.767+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:52:00+00:00, run_after=2024-03-07 07:53:00+00:00
[2024-03-07T09:53:17.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.769+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.770+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:53:17.771+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.770+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:53:17.771+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.771+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:53:17.772+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.772+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.773+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.773+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:53:17.774+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.774+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:53:17.776+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.776+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.776+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.776+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:53:17.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.777+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:53:17.782+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.781+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:52:00+00:00, run_after=2024-03-07 07:53:00+00:00
[2024-03-07T09:53:17.782+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.782+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:53:17.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.783+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:53:17.784+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.784+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:53:17.784+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.784+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:53:17.785+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.785+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.786+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.786+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.787+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.788+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.788+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.789+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.792+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.792+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:50:00+00:00, run_after=2024-03-07 07:52:00+00:00
[2024-03-07T09:53:17.793+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.793+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:53:17.793+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.793+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:53:17.794+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.794+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:53:17.795+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.795+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.796+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.796+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.796+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:53:17.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.797+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:53:17.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:53:17.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:53:17.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.801+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:53:17.802+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.802+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:53:17.803+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.803+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:53:17.804+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.804+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:53:17.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.804+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:53:17.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.805+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:53:17.806+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.806+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:53:17.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.807+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:53:17.832+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.832+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:53:17.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.835+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:53:17.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:53:17.835+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:53:17.846+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.991 seconds
[2024-03-07T09:54:55.256+0200] {processor.py:161} INFO - Started process (PID=32869) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:54:55.257+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:54:55.257+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.257+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:54:55.258+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.258+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:54:55.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.310+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:54:55.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.311+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:54:55.330+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.330+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:54:55.331+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.331+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:54:55.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.383+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:54:55.399+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.399+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:54:55.568+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.567+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:54:55.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.586+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:54:55.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:55.691+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:54:55.704+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_weekday_branch_operator', 'example_task_group', 'example_subdag_operator.section-1', 'example_bash_operator', 'dataset_produces_1', 'example_short_circuit_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_task_group_decorator', 'example_trigger_target_dag', 'dataset_produces_2', 'dag_id_1', 'example_skip_dag', 'tutorial_taskflow_api', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'tutorial_dag', 'tutorial', 'dataset_consumes_1_and_2', 'example_setup_teardown_taskflow', 'example_branch_dop_operator_v3', 'example_sensors', 'example_xcom_args', 'example_short_circuit_operator', 'example_external_task_marker_child', 'example_trigger_controller_dag', 'example_branch_labels', 'example_dag_decorator', 'example_sla_dag', 'example_nested_branch_dag', 'example_branch_datetime_operator_3', 'dataset_consumes_1_never_scheduled', 'example_dynamic_task_mapping', 'example_python_decorator', 'example_subdag_operator.section-2', 'example_time_delta_sensor_async', 'dag_id_3', 'dataset_consumes_1', 'example_complex', 'dag_id_2', 'example_xcom_args_with_operators', 'example_external_task_marker_parent', 'example_python_operator', 'latest_only', 'example_params_trigger_ui', 'example_setup_teardown', 'example_params_ui_tutorial', 'tutorial_objectstorage', 'example_passing_params_via_test_command', 'example_subdag_operator', 'example_xcom', 'latest_only_with_trigger' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:54:56.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.036+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:54:56.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.053+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:54:56.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.054+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:54:56.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.055+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:54:56.056+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.056+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:54:56.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.056+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:54:56.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.057+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:54:56.058+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.058+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:54:56.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.060+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.061+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:54:56.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:53:00+00:00, run_after=2024-03-07 07:54:00+00:00
[2024-03-07T09:54:56.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:54:56.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:54:56.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:54:56.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:54:56.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:54:56.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:54:56.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:54:56.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:53:00+00:00, run_after=2024-03-07 07:54:00+00:00
[2024-03-07T09:54:56.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.089+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:54:56.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:54:56.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:54:56.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:54:56.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.093+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.098+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:52:00+00:00, run_after=2024-03-07 07:54:00+00:00
[2024-03-07T09:54:56.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.099+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:54:56.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:54:56.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.100+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:54:56.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.101+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.102+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.102+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.103+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:54:56.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.103+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:54:56.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.104+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:54:56.106+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.106+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.107+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.107+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:54:56.107+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.107+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:54:56.108+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.108+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:54:56.109+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.109+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:54:56.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.110+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:54:56.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.111+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:54:56.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.111+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:54:56.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.112+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:54:56.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.113+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:54:56.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.135+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:54:56.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:54:56.138+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:54:56.138+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:54:56.153+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.899 seconds
[2024-03-07T09:56:35.022+0200] {processor.py:161} INFO - Started process (PID=32976) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:56:35.024+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:56:35.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.024+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:56:35.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.026+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:56:35.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.086+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:56:35.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.087+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:56:35.105+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.104+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:56:35.106+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.106+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:56:35.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.158+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:56:35.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.170+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:56:35.360+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.359+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:56:35.379+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.379+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:56:35.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.494+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:56:35.507+0200] {processor.py:840} INFO - DAG(s) 'tutorial_taskflow_api', 'dag_id_3', 'latest_only_with_trigger', 'dataset_produces_1', 'example_trigger_target_dag', 'example_params_trigger_ui', 'example_dag_decorator', 'example_complex', 'tutorial_dag', 'example_python_operator', 'example_nested_branch_dag', 'dataset_consumes_1', 'example_dynamic_task_mapping', 'dataset_produces_2', 'latest_only', 'example_weekday_branch_operator', 'example_branch_datetime_operator_2', 'example_sensors', 'tutorial', 'example_params_ui_tutorial', 'example_xcom_args', 'example_external_task_marker_parent', 'example_setup_teardown', 'example_external_task_marker_child', 'example_passing_params_via_test_command', 'example_xcom_args_with_operators', 'dataset_consumes_unknown_never_scheduled', 'example_subdag_operator.section-2', 'dataset_consumes_1_and_2', 'dataset_consumes_1_never_scheduled', 'example_skip_dag', 'example_task_group', 'tutorial_objectstorage', 'example_sla_dag', 'example_branch_dop_operator_v3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_trigger_controller_dag', 'example_task_group_decorator', 'example_bash_operator', 'example_sensor_decorator', 'example_subdag_operator.section-1', 'example_branch_datetime_operator', 'example_subdag_operator', 'example_branch_labels', 'example_short_circuit_operator', 'example_xcom', 'example_setup_teardown_taskflow', 'example_python_decorator', 'example_time_delta_sensor_async', 'example_branch_datetime_operator_3', 'dag_id_1', 'dag_id_2', 'example_short_circuit_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:56:35.940+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.940+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:56:35.959+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.958+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:56:35.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.960+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:56:35.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.962+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:56:35.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.962+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:56:35.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.963+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:56:35.964+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.964+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:56:35.965+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.965+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:56:35.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.967+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.967+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:56:35.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.970+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.972+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.974+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.974+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.976+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.981+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.981+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:55:00+00:00, run_after=2024-03-07 07:56:00+00:00
[2024-03-07T09:56:35.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.984+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:56:35.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.984+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:56:35.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:56:35.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.986+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.987+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.987+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:56:35.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:56:35.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:35.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:56:35.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:56:35.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.997+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:55:00+00:00, run_after=2024-03-07 07:56:00+00:00
[2024-03-07T09:56:35.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:56:35.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:56:35.999+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:35.999+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:56:36.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:56:36.001+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.001+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.002+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.002+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.004+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.008+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:54:00+00:00, run_after=2024-03-07 07:56:00+00:00
[2024-03-07T09:56:36.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.009+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:56:36.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.010+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:56:36.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.010+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:56:36.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.011+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.012+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.013+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:56:36.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.014+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:56:36.015+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.014+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:56:36.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.017+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.017+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:56:36.018+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.018+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:56:36.019+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.019+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:56:36.020+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.020+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:56:36.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.020+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:56:36.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.021+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:56:36.022+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.022+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:56:36.023+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.023+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:56:36.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.023+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:56:36.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.051+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:56:36.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.054+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:56:36.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:56:36.055+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:56:36.066+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.046 seconds
[2024-03-07T09:58:10.916+0200] {processor.py:161} INFO - Started process (PID=33085) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:58:10.917+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:58:10.917+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:10.917+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:58:10.918+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:10.918+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:58:10.974+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:10.974+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:58:10.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:10.975+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:58:10.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:10.992+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:58:10.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:10.993+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:58:11.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.043+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:58:11.060+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.060+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:58:11.226+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.225+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:58:11.241+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.241+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:58:11.334+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.334+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:58:11.346+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_2', 'dataset_produces_1', 'example_dag_decorator', 'example_branch_datetime_operator', 'tutorial_objectstorage', 'example_setup_teardown', 'latest_only_with_trigger', 'example_time_delta_sensor_async', 'example_xcom_args', 'example_sensors', 'dag_id_2', 'example_setup_teardown_taskflow', 'example_python_operator', 'example_dynamic_task_mapping', 'example_branch_labels', 'example_passing_params_via_test_command', 'dag_id_3', 'tutorial_dag', 'dataset_produces_2', 'dataset_consumes_1_never_scheduled', 'latest_only', 'example_weekday_branch_operator', 'example_xcom_args_with_operators', 'example_params_ui_tutorial', 'example_external_task_marker_child', 'dataset_consumes_unknown_never_scheduled', 'tutorial_taskflow_api', 'dataset_consumes_1', 'example_subdag_operator.section-2', 'example_external_task_marker_parent', 'example_skip_dag', 'example_short_circuit_decorator', 'example_sensor_decorator', 'example_params_trigger_ui', 'example_trigger_target_dag', 'example_trigger_controller_dag', 'dag_id_1', 'example_task_group_decorator', 'example_task_group', 'example_sla_dag', 'dataset_consumes_1_and_2', 'example_branch_dop_operator_v3', 'example_xcom', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_python_decorator', 'tutorial', 'example_nested_branch_dag', 'example_bash_operator', 'example_complex', 'example_branch_datetime_operator_3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_short_circuit_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:58:11.665+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.665+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:58:11.680+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.680+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:58:11.682+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.682+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:58:11.683+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.683+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:58:11.683+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.683+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:58:11.684+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.684+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:58:11.685+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.685+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:58:11.685+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.685+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:58:11.687+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.687+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.688+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.688+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:58:11.690+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.690+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.692+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.694+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.693+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.695+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.695+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.699+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:57:00+00:00, run_after=2024-03-07 07:58:00+00:00
[2024-03-07T09:58:11.701+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:58:11.703+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:58:11.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:58:11.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.704+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.705+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:58:11.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:58:11.707+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.707+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.708+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.708+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:58:11.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:58:11.713+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.713+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:57:00+00:00, run_after=2024-03-07 07:58:00+00:00
[2024-03-07T09:58:11.713+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.713+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:58:11.714+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.714+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:58:11.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.715+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:58:11.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.715+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:58:11.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.716+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.717+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.718+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.718+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.718+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.718+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.719+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.719+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.723+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.722+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:56:00+00:00, run_after=2024-03-07 07:58:00+00:00
[2024-03-07T09:58:11.723+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.723+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:58:11.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.724+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:58:11.725+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.724+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:58:11.725+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.725+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.726+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.727+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.727+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:58:11.727+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.727+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:58:11.728+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.728+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:58:11.730+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.730+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.730+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.730+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:58:11.731+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.731+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:58:11.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.732+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:58:11.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.732+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:58:11.733+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.733+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:58:11.734+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.734+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:58:11.735+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.735+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:58:11.735+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.735+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:58:11.736+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.736+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:58:11.759+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.759+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:58:11.762+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.762+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:58:11.763+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:58:11.763+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:58:11.772+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.858 seconds
[2024-03-07T09:59:42.514+0200] {processor.py:161} INFO - Started process (PID=33178) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:59:42.515+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T09:59:42.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.515+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:59:42.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.516+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T09:59:42.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.571+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T09:59:42.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.571+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:59:42.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.590+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:59:42.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.591+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T09:59:42.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.646+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:59:42.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.660+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T09:59:42.846+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.845+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T09:59:42.864+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.864+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T09:59:42.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:42.967+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T09:59:42.980+0200] {processor.py:840} INFO - DAG(s) 'example_params_ui_tutorial', 'latest_only', 'example_params_trigger_ui', 'example_xcom_args', 'dataset_consumes_unknown_never_scheduled', 'example_subdag_operator.section-1', 'tutorial_dag', 'dag_id_2', 'dataset_consumes_1_and_2', 'example_dag_decorator', 'example_weekday_branch_operator', 'tutorial_taskflow_api', 'dataset_produces_2', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'tutorial_objectstorage', 'example_sla_dag', 'example_time_delta_sensor_async', 'example_python_decorator', 'example_external_task_marker_child', 'example_python_operator', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator_3', 'example_skip_dag', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'example_task_group_decorator', 'example_sensors', 'dag_id_3', 'tutorial', 'dataset_consumes_1_never_scheduled', 'dag_id_1', 'example_trigger_controller_dag', 'example_short_circuit_operator', 'dataset_produces_1', 'example_sensor_decorator', 'example_branch_datetime_operator_2', 'example_nested_branch_dag', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_setup_teardown', 'example_bash_operator', 'example_external_task_marker_parent', 'example_dynamic_task_mapping', 'latest_only_with_trigger', 'example_task_group', 'example_branch_labels', 'example_trigger_target_dag', 'example_branch_datetime_operator', 'example_xcom_args_with_operators', 'example_complex', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T09:59:43.399+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.398+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T09:59:43.416+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.416+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T09:59:43.418+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.418+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T09:59:43.419+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.419+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T09:59:43.419+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.419+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T09:59:43.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.420+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T09:59:43.421+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.421+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T09:59:43.422+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.422+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T09:59:43.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.424+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.425+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.424+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T09:59:43.427+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.427+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.429+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.429+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.431+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.433+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.438+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 07:58:00+00:00, run_after=2024-03-07 07:59:00+00:00
[2024-03-07T09:59:43.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.440+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.440+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T09:59:43.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.441+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T09:59:43.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.442+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T09:59:43.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.443+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T09:59:43.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T09:59:43.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.446+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.447+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T09:59:43.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.448+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T09:59:43.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 07:58:00+00:00, run_after=2024-03-07 07:59:00+00:00
[2024-03-07T09:59:43.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T09:59:43.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T09:59:43.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T09:59:43.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T09:59:43.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:56:00+00:00, run_after=2024-03-07 07:58:00+00:00
[2024-03-07T09:59:43.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.483+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T09:59:43.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:59:43.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.485+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:59:43.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.486+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.487+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.487+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T09:59:43.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:59:43.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.490+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T09:59:43.492+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T09:59:43.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T09:59:43.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.495+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T09:59:43.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.496+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:59:43.497+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.497+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 00:00:00+00:00, run_after=2024-03-07 04:00:00+00:00
[2024-03-07T09:59:43.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.498+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T09:59:43.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.498+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T09:59:43.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.499+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T09:59:43.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.500+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T09:59:43.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.528+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T09:59:43.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.531+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T09:59:43.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T09:59:43.531+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T09:59:43.543+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.031 seconds
[2024-03-07T10:01:11.910+0200] {processor.py:161} INFO - Started process (PID=33309) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:01:11.910+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:01:11.911+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:11.911+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:01:11.912+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:11.912+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:01:11.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:11.962+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:01:11.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:11.963+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:01:11.980+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:11.980+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:01:11.981+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:11.981+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:01:12.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.031+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:01:12.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.044+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:01:12.211+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.210+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:01:12.227+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.227+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:01:12.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.322+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:01:12.334+0200] {processor.py:840} INFO - DAG(s) 'example_bash_operator', 'example_subdag_operator.section-1', 'example_passing_params_via_test_command', 'dataset_consumes_1', 'dataset_produces_2', 'example_setup_teardown_taskflow', 'example_branch_labels', 'example_nested_branch_dag', 'example_sensors', 'tutorial_dag', 'tutorial', 'example_skip_dag', 'example_xcom_args_with_operators', 'dataset_consumes_unknown_never_scheduled', 'example_complex', 'example_task_group', 'example_branch_datetime_operator_2', 'dag_id_3', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_short_circuit_operator', 'dag_id_2', 'example_python_decorator', 'example_external_task_marker_parent', 'dag_id_1', 'latest_only_with_trigger', 'example_setup_teardown', 'dataset_consumes_1_and_2', 'example_params_trigger_ui', 'example_sla_dag', 'example_trigger_controller_dag', 'example_short_circuit_decorator', 'example_python_operator', 'example_xcom', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_ui_tutorial', 'latest_only', 'example_task_group_decorator', 'example_dynamic_task_mapping', 'example_branch_dop_operator_v3', 'example_dag_decorator', 'dataset_consumes_1_never_scheduled', 'tutorial_objectstorage', 'example_time_delta_sensor_async', 'dataset_produces_1', 'example_sensor_decorator', 'example_branch_datetime_operator_3', 'example_weekday_branch_operator', 'tutorial_taskflow_api', 'example_branch_datetime_operator', 'example_trigger_target_dag', 'example_external_task_marker_child', 'example_xcom_args' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:01:12.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.657+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:01:12.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.674+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:01:12.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.675+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:01:12.676+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.676+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:01:12.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.677+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:01:12.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.677+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:01:12.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.678+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:01:12.679+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.679+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:01:12.681+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.681+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.682+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.681+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:01:12.684+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.684+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.685+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.685+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.687+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.687+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.689+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.689+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.694+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.693+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:00:00+00:00, run_after=2024-03-07 08:01:00+00:00
[2024-03-07T10:01:12.695+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.695+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.696+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.696+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:01:12.697+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.697+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:01:12.698+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.698+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:01:12.699+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.698+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.699+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.699+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:01:12.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.700+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:01:12.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:01:12.703+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:01:12.707+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.707+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:00:00+00:00, run_after=2024-03-07 08:01:00+00:00
[2024-03-07T10:01:12.708+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.708+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:01:12.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:01:12.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:01:12.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.710+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:01:12.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.712+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.713+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.713+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.714+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.714+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.717+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 07:58:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:01:12.718+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.718+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:01:12.719+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.719+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:01:12.720+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.720+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:01:12.721+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.721+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.722+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.721+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.722+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.722+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:01:12.723+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.723+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:01:12.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.724+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:01:12.725+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.725+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.726+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:01:12.727+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.727+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:01:12.728+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.727+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:01:12.728+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.728+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:01:12.729+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.729+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:01:12.730+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.730+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:01:12.731+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.730+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:01:12.731+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.731+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:01:12.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.732+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:01:12.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.754+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:01:12.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.757+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:01:12.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:01:12.757+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:01:12.766+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.858 seconds
[2024-03-07T10:02:47.735+0200] {processor.py:161} INFO - Started process (PID=33404) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:02:47.737+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:02:47.737+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.737+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:02:47.739+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.738+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:02:47.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.801+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:02:47.802+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.802+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:02:47.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.821+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:02:47.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.823+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:02:47.877+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.876+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:02:47.890+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:47.889+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:02:48.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.095+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:02:48.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.116+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:02:48.222+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.222+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:02:48.235+0200] {processor.py:840} INFO - DAG(s) 'example_external_task_marker_child', 'tutorial_objectstorage', 'example_branch_labels', 'example_branch_datetime_operator_3', 'example_trigger_controller_dag', 'example_sla_dag', 'tutorial_dag', 'example_sensor_decorator', 'example_python_operator', 'example_subdag_operator.section-2', 'example_xcom', 'dataset_consumes_1_and_2', 'dataset_consumes_1_never_scheduled', 'example_setup_teardown', 'dag_id_1', 'example_complex', 'latest_only_with_trigger', 'dataset_consumes_unknown_never_scheduled', 'example_params_trigger_ui', 'example_dag_decorator', 'example_python_decorator', 'example_task_group_decorator', 'example_external_task_marker_parent', 'example_weekday_branch_operator', 'dataset_produces_2', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'dag_id_2', 'example_branch_datetime_operator', 'example_time_delta_sensor_async', 'example_xcom_args', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_xcom_args_with_operators', 'tutorial_taskflow_api', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'example_params_ui_tutorial', 'example_task_group', 'example_trigger_target_dag', 'example_branch_dop_operator_v3', 'example_nested_branch_dag', 'tutorial', 'example_bash_operator', 'latest_only', 'example_skip_dag', 'example_sensors', 'dag_id_3', 'example_dynamic_task_mapping', 'dataset_produces_1', 'example_branch_datetime_operator_2', 'example_short_circuit_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:02:48.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.654+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:02:48.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.672+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:02:48.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.674+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:02:48.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.675+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:02:48.676+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.676+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:02:48.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.676+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:02:48.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.677+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:02:48.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.678+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:02:48.680+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.680+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.681+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.681+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:02:48.683+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.683+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.685+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.685+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.688+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.688+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.690+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.690+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.695+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.695+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:01:00+00:00, run_after=2024-03-07 08:02:00+00:00
[2024-03-07T10:02:48.697+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.697+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.698+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.698+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:02:48.698+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.698+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:02:48.699+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.699+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:02:48.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.700+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.701+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:02:48.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:02:48.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.704+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.705+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:02:48.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:02:48.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.710+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:01:00+00:00, run_after=2024-03-07 08:02:00+00:00
[2024-03-07T10:02:48.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:02:48.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.712+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:02:48.713+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.712+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:02:48.713+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.713+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:02:48.714+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.714+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.715+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.716+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.717+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.718+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.717+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.721+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.721+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:00:00+00:00, run_after=2024-03-07 08:02:00+00:00
[2024-03-07T10:02:48.722+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.722+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:02:48.723+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.723+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:02:48.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.723+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:02:48.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.724+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.725+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.725+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.726+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:02:48.727+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.727+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:02:48.728+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.727+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:02:48.729+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.729+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.730+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.730+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:02:48.731+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.731+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:02:48.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.731+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:02:48.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.732+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:02:48.733+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.733+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:02:48.734+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.734+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:02:48.735+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.735+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:02:48.736+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.735+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:02:48.736+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.736+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:02:48.763+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.762+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:02:48.766+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.765+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:02:48.766+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:02:48.766+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:02:48.777+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.044 seconds
[2024-03-07T10:04:25.831+0200] {processor.py:161} INFO - Started process (PID=33512) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:04:25.832+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:04:25.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.833+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:04:25.834+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.834+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:04:25.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.892+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:04:25.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.893+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:04:25.912+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.912+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:04:25.913+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.913+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:04:25.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.970+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:04:25.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:25.984+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:04:26.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.157+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:04:26.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.174+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:04:26.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.276+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:04:26.289+0200] {processor.py:840} INFO - DAG(s) 'example_branch_dop_operator_v3', 'example_short_circuit_operator', 'dataset_consumes_1', 'example_nested_branch_dag', 'example_time_delta_sensor_async', 'example_python_decorator', 'latest_only_with_trigger', 'example_subdag_operator.section-1', 'dag_id_3', 'example_sensor_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_bash_operator', 'tutorial_taskflow_api', 'dag_id_2', 'example_external_task_marker_child', 'example_dag_decorator', 'example_weekday_branch_operator', 'latest_only', 'dag_id_1', 'example_setup_teardown_taskflow', 'example_task_group', 'example_xcom_args', 'example_sensors', 'dataset_produces_2', 'example_skip_dag', 'example_complex', 'dataset_consumes_1_and_2', 'example_setup_teardown', 'dataset_consumes_unknown_never_scheduled', 'example_xcom', 'example_branch_datetime_operator', 'dataset_produces_1', 'tutorial_objectstorage', 'example_short_circuit_decorator', 'example_branch_datetime_operator_3', 'example_params_ui_tutorial', 'example_trigger_target_dag', 'example_sla_dag', 'example_xcom_args_with_operators', 'example_trigger_controller_dag', 'example_subdag_operator.section-2', 'tutorial_dag', 'example_subdag_operator', 'example_params_trigger_ui', 'example_python_operator', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator_2', 'example_dynamic_task_mapping', 'example_task_group_decorator', 'example_branch_labels', 'example_passing_params_via_test_command', 'example_external_task_marker_parent', 'tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:04:26.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.634+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:04:26.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.653+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:04:26.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.655+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:04:26.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.655+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:04:26.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.656+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:04:26.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.657+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:04:26.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.658+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:04:26.659+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.658+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:04:26.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.660+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.661+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:04:26.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.663+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.666+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.665+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.667+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.669+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.674+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:03:00+00:00, run_after=2024-03-07 08:04:00+00:00
[2024-03-07T10:04:26.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.676+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.677+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:04:26.678+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.678+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:04:26.679+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.679+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:04:26.680+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.680+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.681+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.681+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:04:26.682+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.682+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:04:26.684+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.684+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.684+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.684+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:04:26.685+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.685+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:04:26.690+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.690+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:03:00+00:00, run_after=2024-03-07 08:04:00+00:00
[2024-03-07T10:04:26.691+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.691+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:04:26.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.691+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:04:26.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.692+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:04:26.693+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.693+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:04:26.694+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.694+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.695+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.695+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.696+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.695+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.697+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.696+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.697+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.697+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.701+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:02:00+00:00, run_after=2024-03-07 08:04:00+00:00
[2024-03-07T10:04:26.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:04:26.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:04:26.703+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:04:26.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.704+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.705+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:04:26.707+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:04:26.707+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.707+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:04:26.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.710+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:04:26.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:04:26.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:04:26.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.712+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:04:26.713+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.713+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:04:26.714+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.714+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:04:26.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.715+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:04:26.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.715+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:04:26.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.716+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:04:26.742+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.742+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:04:26.745+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.745+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:04:26.745+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:04:26.745+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:04:26.756+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.926 seconds
[2024-03-07T10:06:03.295+0200] {processor.py:161} INFO - Started process (PID=33634) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:06:03.296+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:06:03.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.297+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:06:03.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.298+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:06:03.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.350+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:06:03.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.350+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:06:03.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.367+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:06:03.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.368+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:06:03.420+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.419+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:06:03.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.431+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:06:03.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.601+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:06:03.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.619+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:06:03.721+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:03.721+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:06:03.733+0200] {processor.py:840} INFO - DAG(s) 'example_external_task_marker_child', 'tutorial_objectstorage', 'latest_only', 'example_setup_teardown', 'example_weekday_branch_operator', 'example_short_circuit_decorator', 'example_branch_datetime_operator_2', 'example_sla_dag', 'example_complex', 'example_branch_labels', 'example_setup_teardown_taskflow', 'tutorial', 'example_xcom_args_with_operators', 'example_subdag_operator.section-1', 'example_external_task_marker_parent', 'dataset_produces_1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_consumes_1', 'example_trigger_target_dag', 'dag_id_1', 'dataset_produces_2', 'tutorial_dag', 'dataset_consumes_1_never_scheduled', 'example_subdag_operator.section-2', 'dag_id_3', 'example_passing_params_via_test_command', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'example_subdag_operator', 'example_branch_datetime_operator', 'example_branch_datetime_operator_3', 'dag_id_2', 'latest_only_with_trigger', 'dataset_consumes_unknown_never_scheduled', 'example_nested_branch_dag', 'example_python_operator', 'example_xcom_args', 'example_bash_operator', 'example_task_group', 'example_branch_dop_operator_v3', 'example_sensors', 'example_time_delta_sensor_async', 'example_xcom', 'example_dag_decorator', 'example_short_circuit_operator', 'dataset_consumes_1_and_2', 'example_sensor_decorator', 'example_params_trigger_ui', 'example_skip_dag', 'example_task_group_decorator', 'example_python_decorator', 'tutorial_taskflow_api', 'example_dynamic_task_mapping' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:06:04.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.139+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:06:04.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.157+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:06:04.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.159+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:06:04.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.160+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:06:04.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.160+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:06:04.161+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.161+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:06:04.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.162+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:06:04.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.162+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:06:04.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.164+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.165+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:06:04.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.167+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.169+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.171+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.173+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.178+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.178+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:05:00+00:00, run_after=2024-03-07 08:06:00+00:00
[2024-03-07T10:06:04.180+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.180+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.181+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.180+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:06:04.181+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.181+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:06:04.182+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.182+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:06:04.183+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.183+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.184+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:06:04.185+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:06:04.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.186+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.187+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.187+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:06:04.188+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.188+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:06:04.192+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.192+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:05:00+00:00, run_after=2024-03-07 08:06:00+00:00
[2024-03-07T10:06:04.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.193+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:06:04.194+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.194+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:06:04.194+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.194+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:06:04.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.195+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:06:04.196+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.196+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.197+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.198+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.198+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.198+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.199+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.203+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.203+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:04:00+00:00, run_after=2024-03-07 08:06:00+00:00
[2024-03-07T10:06:04.203+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.203+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:06:04.204+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.204+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:06:04.205+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.205+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:06:04.206+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.206+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.207+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.206+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.207+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.207+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:06:04.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.208+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:06:04.209+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.209+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:06:04.211+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.210+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.211+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.211+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:06:04.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.212+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:06:04.213+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.213+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:06:04.214+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.213+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:06:04.214+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.214+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:06:04.215+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.215+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:06:04.216+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.216+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:06:04.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.217+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:06:04.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.217+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:06:04.243+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.243+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:06:04.246+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.246+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:06:04.246+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:06:04.246+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:06:04.257+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.963 seconds
[2024-03-07T10:07:47.482+0200] {processor.py:161} INFO - Started process (PID=33742) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:07:47.483+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:07:47.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.484+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:07:47.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.485+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:07:47.540+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.539+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:07:47.540+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.540+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:07:47.558+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.558+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:07:47.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.559+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:07:47.614+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.613+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:07:47.628+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.627+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:07:47.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.809+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:07:47.826+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.826+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:07:47.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:47.930+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:07:47.943+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator', 'example_branch_dop_operator_v3', 'latest_only_with_trigger', 'example_python_decorator', 'example_passing_params_via_test_command', 'dataset_consumes_1', 'latest_only', 'example_sensor_decorator', 'example_subdag_operator.section-2', 'example_task_group', 'example_subdag_operator.section-1', 'example_subdag_operator', 'tutorial_objectstorage', 'example_short_circuit_operator', 'example_sla_dag', 'example_xcom_args', 'dataset_produces_1', 'dag_id_3', 'example_nested_branch_dag', 'tutorial', 'example_bash_operator', 'example_branch_labels', 'dag_id_2', 'example_xcom', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_weekday_branch_operator', 'example_params_ui_tutorial', 'example_short_circuit_decorator', 'example_branch_datetime_operator_2', 'dataset_consumes_1_never_scheduled', 'example_external_task_marker_parent', 'dataset_produces_2', 'example_branch_datetime_operator_3', 'example_external_task_marker_child', 'example_python_operator', 'dag_id_1', 'example_skip_dag', 'example_trigger_target_dag', 'example_task_group_decorator', 'example_setup_teardown', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_dynamic_task_mapping', 'example_complex', 'example_time_delta_sensor_async', 'example_dag_decorator', 'example_xcom_args_with_operators', 'example_sensors', 'example_setup_teardown_taskflow', 'example_trigger_controller_dag', 'tutorial_dag', 'dataset_consumes_unknown_never_scheduled', 'example_params_trigger_ui' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:07:48.401+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.401+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:07:48.419+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.419+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:07:48.421+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.420+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:07:48.421+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.421+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:07:48.422+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.422+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:07:48.423+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.423+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:07:48.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.423+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:07:48.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.424+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:07:48.426+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.426+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.427+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.427+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:07:48.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.430+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.432+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.434+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.434+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.436+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.436+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.440+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:06:00+00:00, run_after=2024-03-07 08:07:00+00:00
[2024-03-07T10:07:48.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.442+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.443+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:07:48.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:07:48.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.445+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:07:48.446+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.446+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.446+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:07:48.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.447+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:07:48.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.449+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.450+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:07:48.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.451+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:07:48.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.455+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:06:00+00:00, run_after=2024-03-07 08:07:00+00:00
[2024-03-07T10:07:48.456+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.456+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:07:48.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:07:48.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:07:48.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.458+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:07:48.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.459+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.460+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.462+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:04:00+00:00, run_after=2024-03-07 08:06:00+00:00
[2024-03-07T10:07:48.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:07:48.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:07:48.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:07:48.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:07:48.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:07:48.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:07:48.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:07:48.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:07:48.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:07:48.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.477+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:07:48.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.478+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:07:48.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.479+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:07:48.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.479+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:07:48.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.480+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:07:48.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.481+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:07:48.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.504+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:07:48.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:07:48.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:07:48.507+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:07:48.518+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.037 seconds
[2024-03-07T10:09:31.738+0200] {processor.py:161} INFO - Started process (PID=33874) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:09:31.739+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:09:31.739+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.739+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:09:31.740+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.740+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:09:31.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.798+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:09:31.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.799+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:09:31.817+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.817+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:09:31.819+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.818+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:09:31.884+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.882+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:09:31.898+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:31.898+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:09:32.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.081+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:09:32.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.099+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:09:32.204+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.204+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:09:32.217+0200] {processor.py:840} INFO - DAG(s) 'example_xcom', 'example_python_decorator', 'example_external_task_marker_parent', 'example_sensor_decorator', 'example_python_operator', 'example_complex', 'example_trigger_controller_dag', 'example_short_circuit_operator', 'example_setup_teardown', 'example_branch_dop_operator_v3', 'tutorial_dag', 'tutorial_taskflow_api', 'example_subdag_operator.section-1', 'example_passing_params_via_test_command', 'example_bash_operator', 'tutorial', 'example_setup_teardown_taskflow', 'dag_id_2', 'example_skip_dag', 'example_sla_dag', 'latest_only_with_trigger', 'latest_only', 'dataset_consumes_1_and_2', 'dataset_produces_1', 'example_dynamic_task_mapping', 'example_branch_datetime_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_ui_tutorial', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_task_group_decorator', 'example_trigger_target_dag', 'example_xcom_args', 'tutorial_objectstorage', 'dataset_consumes_1', 'dag_id_3', 'example_dag_decorator', 'example_branch_datetime_operator_3', 'dataset_consumes_1_never_scheduled', 'example_weekday_branch_operator', 'example_branch_datetime_operator_2', 'example_time_delta_sensor_async', 'dataset_consumes_unknown_never_scheduled', 'dag_id_1', 'example_short_circuit_decorator', 'example_branch_labels', 'dataset_produces_2', 'example_params_trigger_ui', 'example_xcom_args_with_operators', 'example_sensors', 'example_nested_branch_dag', 'example_task_group', 'example_external_task_marker_child' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:09:32.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.710+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:09:32.728+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.728+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:09:32.730+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.730+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:09:32.731+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.731+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:09:32.732+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.732+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:09:32.733+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.733+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:09:32.733+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.733+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:09:32.734+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.734+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:09:32.736+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.736+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.737+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.737+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:09:32.739+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.739+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.741+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.741+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.744+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.744+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.746+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.746+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.751+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.751+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:08:00+00:00, run_after=2024-03-07 08:09:00+00:00
[2024-03-07T10:09:32.753+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.753+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.754+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:09:32.755+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.755+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:09:32.756+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.756+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:09:32.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.757+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.758+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.757+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:09:32.758+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.758+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:09:32.760+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.760+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.761+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.761+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:09:32.762+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.762+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:09:32.766+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.766+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:08:00+00:00, run_after=2024-03-07 08:09:00+00:00
[2024-03-07T10:09:32.767+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.767+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:09:32.768+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.768+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:09:32.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.768+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:09:32.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.769+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:09:32.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.770+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.771+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.771+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.772+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.772+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.773+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.773+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.774+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.774+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.777+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:06:00+00:00, run_after=2024-03-07 08:08:00+00:00
[2024-03-07T10:09:32.778+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.778+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:09:32.779+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.779+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:09:32.779+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.779+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:09:32.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.780+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.781+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.781+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.782+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.782+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:09:32.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.782+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:09:32.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.783+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:09:32.785+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.785+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.786+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.786+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:09:32.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.787+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:09:32.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.787+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:09:32.788+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.788+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:09:32.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.789+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:09:32.790+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.790+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:09:32.791+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.791+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:09:32.792+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.791+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:09:32.792+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.792+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:09:32.819+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.819+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:09:32.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.822+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:09:32.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:09:32.822+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:09:32.835+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.099 seconds
[2024-03-07T10:11:13.293+0200] {processor.py:161} INFO - Started process (PID=33990) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:11:13.294+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:11:13.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.295+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:11:13.296+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.296+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:11:13.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.353+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:11:13.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.353+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:11:13.372+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.371+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:11:13.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.373+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:11:13.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.426+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:11:13.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.440+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:11:13.609+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.609+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:11:13.625+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.625+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:11:13.724+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:13.724+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:11:13.736+0200] {processor.py:840} INFO - DAG(s) 'dataset_produces_1', 'example_params_ui_tutorial', 'tutorial', 'example_subdag_operator.section-1', 'example_params_trigger_ui', 'example_subdag_operator.section-2', 'latest_only_with_trigger', 'dataset_consumes_unknown_never_scheduled', 'example_task_group_decorator', 'example_passing_params_via_test_command', 'dag_id_1', 'dataset_consumes_1_and_2', 'latest_only', 'example_branch_dop_operator_v3', 'example_weekday_branch_operator', 'example_xcom_args_with_operators', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator', 'example_subdag_operator', 'example_xcom', 'example_sensors', 'tutorial_objectstorage', 'example_trigger_target_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_branch_datetime_operator_2', 'example_short_circuit_decorator', 'dataset_consumes_1', 'example_branch_datetime_operator_3', 'dag_id_2', 'example_dag_decorator', 'example_sla_dag', 'tutorial_dag', 'example_setup_teardown_taskflow', 'dag_id_3', 'example_short_circuit_operator', 'example_complex', 'example_dynamic_task_mapping', 'example_skip_dag', 'example_external_task_marker_child', 'example_bash_operator', 'dataset_produces_2', 'example_task_group', 'example_nested_branch_dag', 'example_trigger_controller_dag', 'example_python_decorator', 'example_branch_labels', 'example_time_delta_sensor_async', 'example_setup_teardown', 'example_external_task_marker_parent', 'example_python_operator', 'example_sensor_decorator', 'example_xcom_args', 'tutorial_taskflow_api' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:11:14.107+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.107+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:11:14.126+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.126+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:11:14.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.127+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:11:14.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.128+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:11:14.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.129+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:11:14.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.130+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:11:14.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.131+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:11:14.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.131+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:11:14.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.133+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.134+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.134+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:11:14.137+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.136+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.141+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.141+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:10:00+00:00, run_after=2024-03-07 08:11:00+00:00
[2024-03-07T10:11:14.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.149+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.150+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:11:14.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.151+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:11:14.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.152+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:11:14.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.153+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:11:14.155+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:11:14.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:11:14.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.158+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:11:14.163+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.163+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:10:00+00:00, run_after=2024-03-07 08:11:00+00:00
[2024-03-07T10:11:14.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.164+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:11:14.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.165+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:11:14.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.165+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:11:14.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.166+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:11:14.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.167+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.168+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.168+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.169+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.170+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.171+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.174+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:08:00+00:00, run_after=2024-03-07 08:10:00+00:00
[2024-03-07T10:11:14.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.175+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:11:14.176+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.176+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:11:14.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.177+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:11:14.178+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.178+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.179+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.179+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.180+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.180+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:11:14.180+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.180+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:11:14.181+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.181+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:11:14.183+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.183+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.184+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:11:14.185+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:11:14.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.185+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:11:14.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.186+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:11:14.187+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.187+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:11:14.188+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.188+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:11:14.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.189+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:11:14.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.189+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:11:14.190+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.190+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:11:14.216+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.216+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:11:14.219+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.219+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:11:14.220+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:11:14.220+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:11:14.231+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.939 seconds
[2024-03-07T10:12:53.877+0200] {processor.py:161} INFO - Started process (PID=34095) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:12:53.878+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:12:53.879+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:53.879+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:12:53.881+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:53.880+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:12:53.942+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:53.942+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:12:53.942+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:53.942+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:12:53.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:53.960+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:12:53.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:53.961+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:12:54.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.013+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:12:54.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.026+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:12:54.198+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.197+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:12:54.215+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.215+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:12:54.323+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.323+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:12:54.336+0200] {processor.py:840} INFO - DAG(s) 'tutorial_dag', 'example_python_decorator', 'example_xcom_args_with_operators', 'example_dynamic_task_mapping', 'example_params_trigger_ui', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1', 'example_setup_teardown', 'dag_id_3', 'example_params_ui_tutorial', 'example_task_group_decorator', 'example_subdag_operator.section-2', 'example_trigger_controller_dag', 'example_branch_labels', 'example_passing_params_via_test_command', 'dataset_consumes_1_never_scheduled', 'example_subdag_operator.section-1', 'example_subdag_operator', 'latest_only', 'example_trigger_target_dag', 'example_task_group', 'latest_only_with_trigger', 'dataset_produces_2', 'example_xcom', 'dataset_consumes_1_and_2', 'example_xcom_args', 'example_bash_operator', 'example_sensor_decorator', 'example_branch_datetime_operator_3', 'dag_id_1', 'example_external_task_marker_child', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_skip_dag', 'example_sla_dag', 'example_branch_datetime_operator', 'tutorial_objectstorage', 'tutorial', 'dag_id_2', 'example_external_task_marker_parent', 'example_branch_dop_operator_v3', 'example_short_circuit_decorator', 'example_dag_decorator', 'example_nested_branch_dag', 'example_time_delta_sensor_async', 'dataset_produces_1', 'example_python_operator', 'example_short_circuit_operator', 'example_setup_teardown_taskflow', 'example_weekday_branch_operator', 'example_sensors', 'tutorial_taskflow_api', 'example_complex', 'example_branch_datetime_operator_2' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:12:54.755+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.755+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:12:54.775+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.774+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:12:54.776+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.776+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:12:54.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.777+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:12:54.778+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.778+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:12:54.779+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.779+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:12:54.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.780+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:12:54.781+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.781+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:12:54.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.783+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.784+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.784+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:12:54.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.787+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.790+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.789+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.792+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.792+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.794+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.794+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:11:00+00:00, run_after=2024-03-07 08:12:00+00:00
[2024-03-07T10:12:54.802+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.802+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.803+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.803+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:12:54.804+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.804+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:12:54.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.805+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:12:54.806+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.806+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.807+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:12:54.808+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.808+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:12:54.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.810+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.811+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.811+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:12:54.812+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.812+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:12:54.817+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.817+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:11:00+00:00, run_after=2024-03-07 08:12:00+00:00
[2024-03-07T10:12:54.818+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.818+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:12:54.819+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.819+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:12:54.820+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.820+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:12:54.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.821+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:12:54.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.822+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.823+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.824+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.824+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.825+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.826+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.826+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.830+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.830+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:10:00+00:00, run_after=2024-03-07 08:12:00+00:00
[2024-03-07T10:12:54.831+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.831+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:12:54.832+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.832+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:12:54.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.833+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:12:54.834+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.834+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.836+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.836+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.837+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.837+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:12:54.838+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.838+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:12:54.839+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.839+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:12:54.841+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.841+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.842+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.842+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:12:54.843+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.843+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:12:54.844+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.844+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:12:54.846+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.846+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:12:54.847+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.847+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:12:54.849+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.848+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:12:54.849+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.849+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:12:54.850+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.850+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:12:54.851+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.851+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:12:54.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.902+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:12:54.907+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.907+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:12:54.908+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:12:54.907+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:12:54.922+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.047 seconds
[2024-03-07T10:14:36.111+0200] {processor.py:161} INFO - Started process (PID=34201) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:14:36.111+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:14:36.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.112+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:14:36.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.113+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:14:36.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.162+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:14:36.163+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.163+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:14:36.180+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.180+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:14:36.181+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.181+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:14:36.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.231+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:14:36.243+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.243+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:14:36.411+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.411+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:14:36.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.428+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:14:36.526+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.526+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:14:36.538+0200] {processor.py:840} INFO - DAG(s) 'dag_id_3', 'example_external_task_marker_parent', 'example_python_decorator', 'dataset_consumes_1_and_2', 'example_dynamic_task_mapping', 'tutorial_taskflow_api', 'example_xcom_args_with_operators', 'example_branch_dop_operator_v3', 'dag_id_2', 'dataset_produces_2', 'example_branch_labels', 'example_task_group_decorator', 'tutorial', 'example_trigger_target_dag', 'example_sensors', 'example_params_trigger_ui', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'example_passing_params_via_test_command', 'example_nested_branch_dag', 'latest_only_with_trigger', 'example_skip_dag', 'example_dag_decorator', 'example_setup_teardown_taskflow', 'example_time_delta_sensor_async', 'example_xcom', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'latest_only', 'example_external_task_marker_child', 'example_trigger_controller_dag', 'tutorial_objectstorage', 'dataset_consumes_1_never_scheduled', 'example_short_circuit_operator', 'example_setup_teardown', 'dataset_consumes_1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_task_group', 'dataset_consumes_unknown_never_scheduled', 'dag_id_1', 'dataset_produces_1', 'example_branch_datetime_operator', 'example_sla_dag', 'example_weekday_branch_operator', 'example_short_circuit_decorator', 'tutorial_dag', 'example_python_operator', 'example_bash_operator', 'example_complex', 'example_xcom_args', 'example_sensor_decorator', 'example_params_ui_tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:14:36.869+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.869+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:14:36.885+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.885+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:14:36.887+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.887+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:14:36.888+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.888+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:14:36.889+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.889+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:14:36.889+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.889+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:14:36.890+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.890+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:14:36.891+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.891+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:14:36.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.893+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.893+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:14:36.896+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.896+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.897+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.897+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.899+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.899+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.901+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.901+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.906+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.906+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:13:00+00:00, run_after=2024-03-07 08:14:00+00:00
[2024-03-07T10:14:36.907+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.907+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.908+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.908+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:14:36.909+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.909+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:14:36.910+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.910+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:14:36.911+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.911+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.911+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.911+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:14:36.912+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.912+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:14:36.914+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.914+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.915+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.914+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:14:36.915+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.915+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:14:36.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.919+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:13:00+00:00, run_after=2024-03-07 08:14:00+00:00
[2024-03-07T10:14:36.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.920+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:14:36.921+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.921+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:14:36.922+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.922+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:14:36.922+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.922+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:14:36.923+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.923+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.924+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.924+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.925+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.925+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.926+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.925+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.926+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.926+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.929+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:12:00+00:00, run_after=2024-03-07 08:14:00+00:00
[2024-03-07T10:14:36.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.930+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:14:36.931+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.931+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:14:36.932+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.931+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:14:36.933+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.932+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.933+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.933+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.934+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.934+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:14:36.935+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.935+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:14:36.935+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.935+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:14:36.937+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.937+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.938+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.938+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:14:36.938+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.938+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:14:36.939+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.939+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:14:36.940+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.940+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:14:36.941+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.941+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:14:36.941+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.941+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:14:36.942+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.942+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:14:36.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.943+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:14:36.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.943+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:14:36.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.967+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:14:36.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.970+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:14:36.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:14:36.970+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:14:36.981+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.872 seconds
[2024-03-07T10:16:07.710+0200] {processor.py:161} INFO - Started process (PID=34295) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:16:07.711+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:16:07.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.711+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:16:07.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.712+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:16:07.763+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.763+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:16:07.763+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.763+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:16:07.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.780+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:16:07.781+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.781+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:16:07.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.832+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:16:07.844+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:07.844+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:16:08.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.013+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:16:08.029+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.029+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:16:08.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.127+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:16:08.139+0200] {processor.py:840} INFO - DAG(s) 'example_passing_params_via_test_command', 'example_xcom_args', 'example_python_operator', 'example_sla_dag', 'example_short_circuit_operator', 'dataset_produces_1', 'example_dynamic_task_mapping', 'example_time_delta_sensor_async', 'example_xcom_args_with_operators', 'example_subdag_operator.section-1', 'example_complex', 'dataset_consumes_1_never_scheduled', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_nested_branch_dag', 'example_short_circuit_decorator', 'tutorial_dag', 'example_branch_datetime_operator_3', 'example_xcom', 'dataset_consumes_1', 'example_sensors', 'example_branch_labels', 'example_params_ui_tutorial', 'dag_id_3', 'example_trigger_controller_dag', 'example_weekday_branch_operator', 'example_python_decorator', 'tutorial_taskflow_api', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'tutorial', 'example_task_group_decorator', 'example_setup_teardown', 'example_setup_teardown_taskflow', 'dag_id_1', 'dataset_produces_2', 'latest_only', 'example_skip_dag', 'example_bash_operator', 'example_branch_datetime_operator', 'example_external_task_marker_parent', 'example_sensor_decorator', 'dataset_consumes_unknown_never_scheduled', 'example_trigger_target_dag', 'latest_only_with_trigger', 'dag_id_2', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator_2', 'example_params_trigger_ui', 'example_dag_decorator', 'dataset_consumes_1_and_2', 'tutorial_objectstorage', 'example_external_task_marker_child', 'example_task_group' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:16:08.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.562+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:16:08.583+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.582+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:16:08.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.586+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:16:08.587+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.587+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:16:08.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.588+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:16:08.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.588+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:16:08.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.589+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:16:08.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.590+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:16:08.593+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.593+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.594+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.594+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:16:08.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.597+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.599+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.599+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.602+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.604+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.604+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.609+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:15:00+00:00, run_after=2024-03-07 08:16:00+00:00
[2024-03-07T10:16:08.612+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.613+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.612+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:16:08.613+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.613+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:16:08.614+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.614+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:16:08.615+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.615+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.616+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.616+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:16:08.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.617+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:16:08.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.619+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.620+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:16:08.621+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.621+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:16:08.626+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.626+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:15:00+00:00, run_after=2024-03-07 08:16:00+00:00
[2024-03-07T10:16:08.627+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.626+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:16:08.627+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.627+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:16:08.628+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.628+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:16:08.629+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.629+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:16:08.630+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.630+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.631+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.630+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.632+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.632+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.633+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.633+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.634+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.637+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.637+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:14:00+00:00, run_after=2024-03-07 08:16:00+00:00
[2024-03-07T10:16:08.638+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.638+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:16:08.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.639+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:16:08.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.639+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:16:08.641+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.640+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.641+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.641+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.642+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:16:08.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.643+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:16:08.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.644+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:16:08.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.646+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.647+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.646+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:16:08.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.647+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:16:08.648+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.648+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:16:08.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.649+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:16:08.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.650+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:16:08.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.651+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:16:08.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.652+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:16:08.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.652+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:16:08.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.653+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:16:08.681+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.680+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:16:08.684+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.684+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:16:08.684+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:16:08.684+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:16:08.696+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.987 seconds
[2024-03-07T10:17:40.900+0200] {processor.py:161} INFO - Started process (PID=34398) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:17:40.901+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:17:40.901+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:40.901+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:17:40.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:40.902+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:17:40.953+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:40.953+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:17:40.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:40.954+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:17:40.971+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:40.971+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:17:40.973+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:40.972+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:17:41.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.023+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:17:41.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.040+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:17:41.212+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.211+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:17:41.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.228+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:17:41.334+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.333+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:17:41.347+0200] {processor.py:840} INFO - DAG(s) 'dataset_consumes_unknown_never_scheduled', 'example_setup_teardown_taskflow', 'example_complex', 'dag_id_2', 'dataset_consumes_1_and_2', 'dataset_consumes_1', 'example_external_task_marker_parent', 'example_branch_labels', 'tutorial_dag', 'example_params_trigger_ui', 'example_nested_branch_dag', 'dag_id_3', 'example_xcom_args_with_operators', 'example_time_delta_sensor_async', 'example_sensor_decorator', 'example_sensors', 'example_dynamic_task_mapping', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_sla_dag', 'example_short_circuit_operator', 'dataset_consumes_1_never_scheduled', 'example_bash_operator', 'dag_id_1', 'latest_only_with_trigger', 'dataset_produces_1', 'example_short_circuit_decorator', 'example_branch_datetime_operator_3', 'example_params_ui_tutorial', 'example_branch_datetime_operator_2', 'example_python_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'tutorial_objectstorage', 'example_skip_dag', 'example_branch_datetime_operator', 'example_passing_params_via_test_command', 'example_weekday_branch_operator', 'example_task_group', 'example_task_group_decorator', 'example_xcom', 'tutorial_taskflow_api', 'dataset_produces_2', 'example_trigger_controller_dag', 'example_xcom_args', 'example_external_task_marker_child', 'example_trigger_target_dag', 'example_setup_teardown', 'latest_only', 'example_branch_dop_operator_v3', 'tutorial', 'example_python_decorator', 'example_dag_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:17:41.737+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.737+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:17:41.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.754+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:17:41.756+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.756+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:17:41.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.757+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:17:41.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.757+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:17:41.758+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.758+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:17:41.759+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.759+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:17:41.760+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.759+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:17:41.762+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.761+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.762+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.762+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:17:41.765+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.764+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.766+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.766+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.768+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.768+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.770+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.775+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.775+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:16:00+00:00, run_after=2024-03-07 08:17:00+00:00
[2024-03-07T10:17:41.778+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.778+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.779+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.779+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:17:41.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.780+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:17:41.782+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.781+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:17:41.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.782+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.784+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.783+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:17:41.786+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.786+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:17:41.788+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.788+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.789+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:17:41.790+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.790+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:17:41.794+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.794+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:16:00+00:00, run_after=2024-03-07 08:17:00+00:00
[2024-03-07T10:17:41.795+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.795+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:17:41.796+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.795+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:17:41.796+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.796+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:17:41.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.797+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:17:41.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.799+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.801+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.805+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:14:00+00:00, run_after=2024-03-07 08:16:00+00:00
[2024-03-07T10:17:41.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.805+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:17:41.806+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.806+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:17:41.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.807+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:17:41.808+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.808+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.808+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.809+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:17:41.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.810+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:17:41.811+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.811+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:17:41.813+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.813+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.813+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.813+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:17:41.814+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.814+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:17:41.815+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.815+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:17:41.816+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.816+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:17:41.817+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.816+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:17:41.817+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.817+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:17:41.818+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.818+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:17:41.819+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.819+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:17:41.819+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.819+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:17:41.845+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.844+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:17:41.849+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.848+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:17:41.849+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:17:41.849+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:17:41.863+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.964 seconds
[2024-03-07T10:19:21.895+0200] {processor.py:161} INFO - Started process (PID=34498) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:19:21.896+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:19:21.897+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:21.897+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:19:21.898+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:21.898+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:19:21.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:21.961+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:19:21.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:21.962+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:19:21.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:21.984+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:19:21.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:21.985+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:19:22.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:22.048+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:19:22.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:22.064+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:19:22.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:22.265+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:19:22.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:22.287+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:19:22.415+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:22.415+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:19:22.431+0200] {processor.py:840} INFO - DAG(s) 'example_branch_datetime_operator_3', 'example_subdag_operator.section-1', 'example_skip_dag', 'example_dynamic_task_mapping', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_short_circuit_operator', 'example_task_group', 'tutorial_dag', 'example_bash_operator', 'example_external_task_marker_parent', 'example_python_operator', 'example_external_task_marker_child', 'example_setup_teardown', 'example_sla_dag', 'example_sensors', 'example_nested_branch_dag', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_datetime_operator_2', 'example_task_group_decorator', 'dag_id_2', 'example_short_circuit_decorator', 'example_xcom_args_with_operators', 'dag_id_3', 'latest_only_with_trigger', 'example_xcom_args', 'example_branch_dop_operator_v3', 'dag_id_1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'latest_only', 'example_weekday_branch_operator', 'example_params_trigger_ui', 'example_setup_teardown_taskflow', 'dataset_produces_1', 'example_dag_decorator', 'example_xcom', 'example_sensor_decorator', 'example_branch_datetime_operator', 'example_params_ui_tutorial', 'dataset_consumes_1_never_scheduled', 'example_trigger_target_dag', 'tutorial', 'example_passing_params_via_test_command', 'dataset_consumes_unknown_never_scheduled', 'dataset_produces_2', 'example_time_delta_sensor_async', 'example_trigger_controller_dag', 'example_branch_labels', 'example_complex', 'example_python_decorator', 'dataset_consumes_1', 'tutorial_objectstorage' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:19:22.982+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:22.981+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:19:23.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.003+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:19:23.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.006+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:19:23.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.007+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:19:23.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.008+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:19:23.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.008+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:19:23.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.009+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:19:23.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.010+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:19:23.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.013+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.013+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:19:23.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.019+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.018+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.021+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.023+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.029+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.029+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:18:00+00:00, run_after=2024-03-07 08:19:00+00:00
[2024-03-07T10:19:23.032+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.032+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.033+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.033+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:19:23.034+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.033+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:19:23.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.035+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:19:23.036+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.036+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:19:23.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.038+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:19:23.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.040+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.041+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:19:23.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.042+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:19:23.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.048+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:18:00+00:00, run_after=2024-03-07 08:19:00+00:00
[2024-03-07T10:19:23.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.049+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:19:23.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.050+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:19:23.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.051+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:19:23.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.052+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:19:23.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.054+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.055+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.056+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.056+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.061+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:16:00+00:00, run_after=2024-03-07 08:18:00+00:00
[2024-03-07T10:19:23.062+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.062+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:19:23.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:19:23.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:19:23.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.064+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:19:23.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:19:23.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:19:23.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:19:23.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:19:23.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:19:23.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.073+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:19:23.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.074+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:19:23.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.075+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:19:23.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.076+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:19:23.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.076+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:19:23.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.077+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:19:23.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.104+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:19:23.108+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.107+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:19:23.108+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:19:23.108+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:19:23.121+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.227 seconds
[2024-03-07T10:21:03.428+0200] {processor.py:161} INFO - Started process (PID=34601) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:21:03.429+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:21:03.429+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.429+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:21:03.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.430+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:21:03.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.482+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:21:03.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.483+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:21:03.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.501+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:21:03.502+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.502+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:21:03.565+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.563+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:21:03.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.579+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:21:03.781+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.780+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:21:03.803+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.803+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:21:03.921+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:03.921+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:21:03.936+0200] {processor.py:840} INFO - DAG(s) 'latest_only', 'example_short_circuit_operator', 'example_params_ui_tutorial', 'example_bash_operator', 'dataset_produces_2', 'tutorial_taskflow_api', 'dag_id_1', 'example_weekday_branch_operator', 'example_trigger_target_dag', 'example_branch_datetime_operator_3', 'example_xcom', 'example_short_circuit_decorator', 'example_branch_datetime_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_setup_teardown_taskflow', 'dataset_produces_1', 'example_sla_dag', 'example_xcom_args_with_operators', 'example_xcom_args', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_task_group_decorator', 'example_trigger_controller_dag', 'example_external_task_marker_parent', 'latest_only_with_trigger', 'example_sensor_decorator', 'example_setup_teardown', 'example_python_decorator', 'example_skip_dag', 'example_params_trigger_ui', 'dataset_consumes_unknown_never_scheduled', 'dag_id_2', 'dataset_consumes_1_never_scheduled', 'example_python_operator', 'example_dynamic_task_mapping', 'example_complex', 'example_dag_decorator', 'dataset_consumes_1_and_2', 'tutorial_objectstorage', 'example_branch_dop_operator_v3', 'example_passing_params_via_test_command', 'example_time_delta_sensor_async', 'example_task_group', 'example_branch_labels', 'example_nested_branch_dag', 'example_sensors', 'dataset_consumes_1', 'dag_id_3', 'tutorial_dag', 'tutorial', 'example_branch_datetime_operator_2', 'example_external_task_marker_child' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:21:04.315+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.314+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:21:04.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.336+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:21:04.339+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.339+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:21:04.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.339+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:21:04.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.340+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:21:04.342+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.341+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:21:04.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.343+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:21:04.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.343+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:21:04.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.346+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.347+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.347+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:21:04.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.350+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.354+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.357+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.357+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.363+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.363+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:20:00+00:00, run_after=2024-03-07 08:21:00+00:00
[2024-03-07T10:21:04.365+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.365+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.366+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.366+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:21:04.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.367+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:21:04.368+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.368+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:21:04.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.369+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.370+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.370+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:21:04.371+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.371+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:21:04.374+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.373+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.375+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.375+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:21:04.376+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.376+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:21:04.382+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.381+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:20:00+00:00, run_after=2024-03-07 08:21:00+00:00
[2024-03-07T10:21:04.382+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.382+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:21:04.383+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.383+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:21:04.384+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.384+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:21:04.385+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.385+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:21:04.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.385+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.386+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.387+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.388+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.388+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.389+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.389+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.393+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.393+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:18:00+00:00, run_after=2024-03-07 08:20:00+00:00
[2024-03-07T10:21:04.394+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.394+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:21:04.394+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.394+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:21:04.395+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.395+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:21:04.396+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.396+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.397+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.397+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.398+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.398+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:21:04.398+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.398+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:21:04.399+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.399+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:21:04.401+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.401+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.402+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.402+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:21:04.403+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.403+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:21:04.404+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.403+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:21:04.404+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.404+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:21:04.405+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.405+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:21:04.406+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.406+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:21:04.407+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.407+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:21:04.408+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.408+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:21:04.409+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.408+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:21:04.434+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.434+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:21:04.437+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.437+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:21:04.437+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:21:04.437+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:21:04.449+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.023 seconds
[2024-03-07T10:22:49.753+0200] {processor.py:161} INFO - Started process (PID=34704) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:22:49.754+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:22:49.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.754+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:22:49.756+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.755+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:22:49.812+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.812+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:22:49.812+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.812+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:22:49.830+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.830+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:22:49.831+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.831+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:22:49.893+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.892+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:22:49.907+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:49.907+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:22:50.109+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.108+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:22:50.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.129+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:22:50.253+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.253+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:22:50.268+0200] {processor.py:840} INFO - DAG(s) 'tutorial_dag', 'example_python_operator', 'example_params_ui_tutorial', 'example_python_decorator', 'example_time_delta_sensor_async', 'dataset_produces_1', 'example_trigger_controller_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_weekday_branch_operator', 'example_passing_params_via_test_command', 'example_setup_teardown', 'dataset_consumes_1_never_scheduled', 'example_subdag_operator.section-2', 'example_short_circuit_decorator', 'example_external_task_marker_child', 'example_trigger_target_dag', 'dataset_consumes_1', 'example_short_circuit_operator', 'example_branch_datetime_operator', 'dataset_produces_2', 'example_subdag_operator.section-1', 'example_subdag_operator', 'latest_only_with_trigger', 'example_complex', 'tutorial', 'dag_id_2', 'tutorial_taskflow_api', 'example_sla_dag', 'latest_only', 'dag_id_1', 'example_bash_operator', 'example_sensor_decorator', 'example_setup_teardown_taskflow', 'example_branch_labels', 'example_sensors', 'example_branch_datetime_operator_3', 'example_params_trigger_ui', 'example_xcom', 'example_nested_branch_dag', 'example_task_group_decorator', 'dataset_consumes_unknown_never_scheduled', 'example_skip_dag', 'example_dynamic_task_mapping', 'example_xcom_args', 'example_task_group', 'example_xcom_args_with_operators', 'example_dag_decorator', 'tutorial_objectstorage', 'example_branch_dop_operator_v3', 'dag_id_3', 'dataset_consumes_1_and_2', 'example_external_task_marker_parent', 'example_branch_datetime_operator_2' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:22:50.796+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.796+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:22:50.817+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.817+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:22:50.820+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.820+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:22:50.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.821+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:22:50.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.822+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:22:50.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.823+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:22:50.824+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.824+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:22:50.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.825+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:22:50.827+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.827+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.828+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.828+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:22:50.831+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.831+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.833+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.836+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.836+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.838+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.838+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.844+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.843+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:21:00+00:00, run_after=2024-03-07 08:22:00+00:00
[2024-03-07T10:22:50.846+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.846+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.847+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.846+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:22:50.847+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.847+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:22:50.848+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.848+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:22:50.849+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.849+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.850+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.850+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:22:50.851+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.851+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:22:50.854+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.853+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.855+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.854+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:22:50.855+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.855+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:22:50.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.860+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:21:00+00:00, run_after=2024-03-07 08:22:00+00:00
[2024-03-07T10:22:50.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.861+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:22:50.862+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.862+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:22:50.863+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.863+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:22:50.864+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.864+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:22:50.865+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.865+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.866+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.866+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.867+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.866+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.867+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.867+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.868+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.868+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.872+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.872+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:20:00+00:00, run_after=2024-03-07 08:22:00+00:00
[2024-03-07T10:22:50.873+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.872+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:22:50.873+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.873+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:22:50.874+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.874+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:22:50.875+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.875+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.876+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.876+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.876+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.876+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:22:50.877+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.877+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:22:50.878+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.878+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:22:50.880+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.880+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.880+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.880+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:22:50.881+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.881+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:22:50.882+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.882+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:22:50.883+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.883+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:22:50.884+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.883+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:22:50.885+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.885+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:22:50.886+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.886+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:22:50.887+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.887+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:22:50.888+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.887+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:22:50.916+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.916+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:22:50.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.919+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:22:50.920+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:22:50.920+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:22:50.933+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.181 seconds
[2024-03-07T10:24:31.408+0200] {processor.py:161} INFO - Started process (PID=34807) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:24:31.409+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:24:31.410+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.410+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:24:31.411+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.411+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:24:31.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.473+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:24:31.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.474+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:24:31.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.495+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:24:31.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.496+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:24:31.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.555+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:24:31.570+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.570+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:24:31.772+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.771+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:24:31.794+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.793+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:24:31.901+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:31.901+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:24:31.914+0200] {processor.py:840} INFO - DAG(s) 'example_short_circuit_decorator', 'example_skip_dag', 'example_xcom_args', 'dag_id_2', 'example_weekday_branch_operator', 'dataset_consumes_1_never_scheduled', 'example_xcom_args_with_operators', 'tutorial_taskflow_api', 'tutorial', 'example_sensor_decorator', 'example_params_trigger_ui', 'example_sensors', 'example_xcom', 'example_short_circuit_operator', 'example_setup_teardown_taskflow', 'dag_id_3', 'dataset_consumes_1_and_2', 'example_dynamic_task_mapping', 'example_complex', 'tutorial_dag', 'latest_only_with_trigger', 'dataset_consumes_unknown_never_scheduled', 'example_passing_params_via_test_command', 'example_python_decorator', 'example_branch_dop_operator_v3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_bash_operator', 'example_sla_dag', 'example_params_ui_tutorial', 'example_branch_labels', 'example_external_task_marker_parent', 'example_subdag_operator.section-1', 'example_branch_datetime_operator_3', 'example_external_task_marker_child', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_trigger_target_dag', 'example_setup_teardown', 'dataset_produces_1', 'latest_only', 'example_task_group_decorator', 'tutorial_objectstorage', 'example_time_delta_sensor_async', 'dataset_consumes_1', 'dag_id_1', 'example_task_group', 'dataset_produces_2', 'example_dag_decorator', 'example_branch_datetime_operator_2', 'example_trigger_controller_dag', 'example_branch_datetime_operator', 'example_python_operator', 'example_nested_branch_dag' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:24:32.280+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.280+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:24:32.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.297+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:24:32.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.299+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:24:32.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.300+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:24:32.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.301+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:24:32.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.301+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:24:32.302+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.302+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:24:32.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.303+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:24:32.305+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.305+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.305+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:24:32.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.308+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.310+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.312+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.314+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.319+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:23:00+00:00, run_after=2024-03-07 08:24:00+00:00
[2024-03-07T10:24:32.321+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.321+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.321+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.321+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:24:32.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.322+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:24:32.323+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.323+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:24:32.324+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.324+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.324+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:24:32.325+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.325+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:24:32.327+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.327+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.328+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.328+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:24:32.329+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.328+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:24:32.333+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.333+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:23:00+00:00, run_after=2024-03-07 08:24:00+00:00
[2024-03-07T10:24:32.334+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.334+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:24:32.334+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.334+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:24:32.335+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.335+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:24:32.336+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.336+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:24:32.337+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.337+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.338+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.337+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.338+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.338+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.339+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.339+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.343+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.343+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:22:00+00:00, run_after=2024-03-07 08:24:00+00:00
[2024-03-07T10:24:32.344+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.344+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:24:32.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.345+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:24:32.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.346+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:24:32.347+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.346+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.347+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.347+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.348+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.348+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:24:32.349+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:24:32.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.349+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:24:32.351+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.351+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:24:32.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.353+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:24:32.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.353+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:24:32.354+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.354+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:24:32.355+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.355+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:24:32.356+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.356+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:24:32.357+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.357+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:24:32.358+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.357+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:24:32.358+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.358+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:24:32.383+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.383+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:24:32.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.386+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:24:32.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:24:32.386+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:24:32.397+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.991 seconds
[2024-03-07T10:26:15.045+0200] {processor.py:161} INFO - Started process (PID=34927) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:26:15.046+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:26:15.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.046+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:26:15.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.047+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:26:15.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.098+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:26:15.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.099+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:26:15.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.116+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:26:15.117+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.117+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:26:15.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.166+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:26:15.179+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.178+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:26:15.351+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.351+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:26:15.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.367+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:26:15.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.463+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:26:15.475+0200] {processor.py:840} INFO - DAG(s) 'example_python_operator', 'dataset_consumes_1_never_scheduled', 'example_trigger_controller_dag', 'example_python_decorator', 'example_dynamic_task_mapping', 'example_short_circuit_operator', 'example_sensors', 'dag_id_3', 'dataset_produces_1', 'example_branch_dop_operator_v3', 'example_task_group_decorator', 'example_trigger_target_dag', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_sla_dag', 'example_dag_decorator', 'example_setup_teardown', 'dataset_consumes_1_and_2', 'latest_only', 'example_external_task_marker_child', 'dag_id_1', 'example_short_circuit_decorator', 'dataset_consumes_1', 'example_params_ui_tutorial', 'tutorial_objectstorage', 'example_time_delta_sensor_async', 'tutorial_dag', 'example_external_task_marker_parent', 'example_setup_teardown_taskflow', 'example_weekday_branch_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_produces_2', 'tutorial', 'example_xcom_args', 'example_branch_labels', 'example_xcom', 'example_skip_dag', 'example_params_trigger_ui', 'example_complex', 'latest_only_with_trigger', 'example_branch_datetime_operator', 'example_nested_branch_dag', 'example_bash_operator', 'example_branch_datetime_operator_2', 'example_sensor_decorator', 'example_branch_datetime_operator_3', 'example_passing_params_via_test_command', 'example_xcom_args_with_operators', 'tutorial_taskflow_api', 'dag_id_2', 'dataset_consumes_unknown_never_scheduled', 'example_task_group' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:26:15.885+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.885+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:26:15.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.902+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:26:15.904+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.904+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:26:15.905+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.905+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:26:15.906+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.906+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:26:15.906+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.906+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:26:15.907+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.907+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:26:15.908+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.908+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:26:15.910+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.910+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.910+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.910+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:26:15.913+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.913+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.915+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.915+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.917+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.916+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.918+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.918+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.923+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.923+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:25:00+00:00, run_after=2024-03-07 08:26:00+00:00
[2024-03-07T10:26:15.925+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.925+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.926+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.926+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:26:15.927+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.926+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:26:15.928+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.927+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:26:15.928+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.928+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.929+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.929+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:26:15.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.930+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:26:15.932+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.931+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.932+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.932+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:26:15.933+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.933+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:26:15.937+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.937+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:25:00+00:00, run_after=2024-03-07 08:26:00+00:00
[2024-03-07T10:26:15.938+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.938+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:26:15.939+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.939+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:26:15.939+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.939+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:26:15.940+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.940+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:26:15.941+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.941+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.942+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.942+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.942+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.943+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.943+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.944+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.944+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.947+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.947+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:24:00+00:00, run_after=2024-03-07 08:26:00+00:00
[2024-03-07T10:26:15.948+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.948+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:26:15.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.949+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:26:15.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.949+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:26:15.950+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.950+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.951+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.951+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.952+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:26:15.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.952+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:26:15.953+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.953+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:26:15.955+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.955+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.956+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.955+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:26:15.956+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.956+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:26:15.957+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.957+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:26:15.958+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.958+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:26:15.959+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.959+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:26:15.959+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.959+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:26:15.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.960+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:26:15.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.961+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:26:15.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.961+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:26:15.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.986+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:26:15.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.989+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:26:15.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:26:15.989+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:26:16.000+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.957 seconds
[2024-03-07T10:27:52.371+0200] {processor.py:161} INFO - Started process (PID=35038) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:27:52.372+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:27:52.372+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.372+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:27:52.373+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.373+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:27:52.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.423+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:27:52.424+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.424+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:27:52.441+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.441+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:27:52.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.442+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:27:52.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.492+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:27:52.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.504+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:27:52.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.671+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:27:52.688+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.688+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:27:52.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:52.789+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:27:52.802+0200] {processor.py:840} INFO - DAG(s) 'tutorial_objectstorage', 'dag_id_2', 'dataset_produces_2', 'example_sensors', 'latest_only_with_trigger', 'example_branch_labels', 'example_params_ui_tutorial', 'example_skip_dag', 'example_short_circuit_decorator', 'example_bash_operator', 'example_task_group_decorator', 'example_trigger_controller_dag', 'example_external_task_marker_parent', 'example_branch_datetime_operator', 'example_python_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_time_delta_sensor_async', 'tutorial', 'example_xcom_args', 'dag_id_3', 'dag_id_1', 'dataset_consumes_1_never_scheduled', 'example_complex', 'example_short_circuit_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_python_decorator', 'example_dag_decorator', 'example_branch_datetime_operator_3', 'example_setup_teardown', 'tutorial_taskflow_api', 'latest_only', 'example_xcom_args_with_operators', 'example_params_trigger_ui', 'example_trigger_target_dag', 'example_sensor_decorator', 'example_task_group', 'example_setup_teardown_taskflow', 'dataset_consumes_1', 'example_sla_dag', 'example_weekday_branch_operator', 'example_xcom', 'example_branch_datetime_operator_2', 'tutorial_dag', 'example_external_task_marker_child', 'example_passing_params_via_test_command', 'dataset_consumes_1_and_2', 'example_nested_branch_dag', 'example_branch_dop_operator_v3', 'dataset_consumes_unknown_never_scheduled', 'example_dynamic_task_mapping', 'dataset_produces_1' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:27:53.133+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.132+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:27:53.149+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.149+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:27:53.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.150+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:27:53.151+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.151+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:27:53.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.152+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:27:53.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.153+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:27:53.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.153+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:27:53.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.154+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:27:53.156+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.156+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.156+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:27:53.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.159+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.160+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.160+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.162+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.164+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.169+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:26:00+00:00, run_after=2024-03-07 08:27:00+00:00
[2024-03-07T10:27:53.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.170+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.171+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:27:53.172+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.172+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:27:53.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.173+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:27:53.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.174+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.174+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:27:53.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.175+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:27:53.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.177+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.177+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.177+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:27:53.178+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.178+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:27:53.182+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.182+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:26:00+00:00, run_after=2024-03-07 08:27:00+00:00
[2024-03-07T10:27:53.183+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.183+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:27:53.184+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:27:53.185+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:27:53.185+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.185+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:27:53.186+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.186+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.187+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.187+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.188+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.188+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.189+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.190+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.190+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.193+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:24:00+00:00, run_after=2024-03-07 08:26:00+00:00
[2024-03-07T10:27:53.194+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.194+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:27:53.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.194+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:27:53.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.195+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:27:53.196+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.196+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.197+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.198+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.197+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:27:53.198+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.198+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:27:53.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.199+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:27:53.201+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.201+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.202+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.201+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:27:53.202+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.202+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:27:53.203+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.203+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:27:53.204+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.204+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:27:53.205+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.205+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:27:53.206+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.205+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:27:53.206+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.206+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:27:53.207+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.207+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:27:53.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.208+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:27:53.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.232+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:27:53.235+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.235+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:27:53.235+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:27:53.235+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:27:53.247+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.878 seconds
[2024-03-07T10:29:31.049+0200] {processor.py:161} INFO - Started process (PID=35126) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:29:31.050+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:29:31.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.050+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:29:31.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.051+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:29:31.110+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.110+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:29:31.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.111+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:29:31.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.129+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:29:31.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.130+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:29:31.184+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.183+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:29:31.196+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.196+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:29:31.391+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.390+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:29:31.410+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.410+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:29:31.534+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.534+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:29:31.549+0200] {processor.py:840} INFO - DAG(s) 'dataset_produces_1', 'example_trigger_controller_dag', 'example_dynamic_task_mapping', 'example_external_task_marker_child', 'example_subdag_operator.section-2', 'example_subdag_operator.section-1', 'example_subdag_operator', 'tutorial_objectstorage', 'example_dag_decorator', 'example_passing_params_via_test_command', 'example_branch_dop_operator_v3', 'dataset_consumes_1_and_2', 'example_skip_dag', 'example_sla_dag', 'example_task_group_decorator', 'example_python_decorator', 'example_bash_operator', 'example_weekday_branch_operator', 'example_xcom_args_with_operators', 'example_branch_datetime_operator_2', 'dag_id_2', 'example_setup_teardown', 'tutorial_taskflow_api', 'example_xcom', 'example_branch_labels', 'example_xcom_args', 'tutorial', 'dag_id_1', 'example_branch_datetime_operator', 'example_python_operator', 'latest_only', 'latest_only_with_trigger', 'dataset_consumes_1', 'example_params_trigger_ui', 'tutorial_dag', 'example_time_delta_sensor_async', 'example_short_circuit_decorator', 'example_short_circuit_operator', 'dataset_consumes_1_never_scheduled', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'example_task_group', 'example_params_ui_tutorial', 'dataset_produces_2', 'example_external_task_marker_parent', 'example_trigger_target_dag', 'example_setup_teardown_taskflow', 'example_sensors', 'dag_id_3', 'example_branch_datetime_operator_3', 'example_nested_branch_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_complex' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:29:31.968+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.968+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:29:31.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.986+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:29:31.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.987+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:29:31.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.988+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:29:31.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.989+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:29:31.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.990+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:29:31.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.991+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:29:31.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.991+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:29:31.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.993+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:31.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.994+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:29:31.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:31.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:31.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.002+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.002+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.007+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:28:00+00:00, run_after=2024-03-07 08:29:00+00:00
[2024-03-07T10:29:32.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.009+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.010+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:29:32.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.010+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:29:32.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.011+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:29:32.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.012+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.013+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:29:32.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.014+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:29:32.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:29:32.017+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.017+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:29:32.022+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.022+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:28:00+00:00, run_after=2024-03-07 08:29:00+00:00
[2024-03-07T10:29:32.023+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.023+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:29:32.023+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.023+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:29:32.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.024+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:29:32.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.025+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:29:32.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.026+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.027+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.028+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.027+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.028+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.028+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.029+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.029+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.033+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.033+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:26:00+00:00, run_after=2024-03-07 08:28:00+00:00
[2024-03-07T10:29:32.033+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.033+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:29:32.034+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.034+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:29:32.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.035+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:29:32.036+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.036+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.037+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.037+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:29:32.038+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.038+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:29:32.039+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.039+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:29:32.041+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.041+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.041+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:29:32.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.042+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:29:32.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.043+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:29:32.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.044+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:29:32.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.045+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:29:32.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.046+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:29:32.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.046+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:29:32.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.047+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:29:32.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.048+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:29:32.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.073+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:29:32.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:29:32.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:29:32.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:29:32.087+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.040 seconds
[2024-03-07T10:31:12.027+0200] {processor.py:161} INFO - Started process (PID=35240) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:31:12.028+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:31:12.028+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.028+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:31:12.030+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.030+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:31:12.108+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.107+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:31:12.108+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.108+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:31:12.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.129+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:31:12.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.131+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:31:12.193+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.192+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:31:12.205+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.205+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:31:12.375+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.375+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:31:12.391+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.391+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:31:12.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.493+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:31:12.506+0200] {processor.py:840} INFO - DAG(s) 'example_complex', 'example_short_circuit_operator', 'example_xcom_args', 'example_branch_dop_operator_v3', 'example_task_group', 'example_python_operator', 'example_trigger_controller_dag', 'example_task_group_decorator', 'example_setup_teardown', 'latest_only', 'example_time_delta_sensor_async', 'example_params_trigger_ui', 'tutorial_dag', 'dataset_consumes_1', 'example_nested_branch_dag', 'example_xcom', 'example_external_task_marker_child', 'example_bash_operator', 'example_branch_labels', 'example_sensors', 'tutorial_taskflow_api', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator_3', 'example_skip_dag', 'tutorial_objectstorage', 'example_branch_datetime_operator', 'example_python_decorator', 'dataset_consumes_1_and_2', 'latest_only_with_trigger', 'dag_id_1', 'dag_id_2', 'example_short_circuit_decorator', 'dataset_produces_1', 'example_dag_decorator', 'example_xcom_args_with_operators', 'example_trigger_target_dag', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'tutorial', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dag_id_3', 'example_sla_dag', 'example_weekday_branch_operator', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'dataset_produces_2', 'example_dynamic_task_mapping', 'example_external_task_marker_parent', 'example_passing_params_via_test_command', 'example_branch_datetime_operator_2', 'example_setup_teardown_taskflow', 'example_params_ui_tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:31:12.926+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.926+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:31:12.945+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.945+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:31:12.948+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.948+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:31:12.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.948+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:31:12.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.949+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:31:12.950+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.950+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:31:12.951+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.951+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:31:12.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.952+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:31:12.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.954+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.955+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.955+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:31:12.957+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.957+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.959+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.959+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.961+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.963+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.963+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.969+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.969+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:30:00+00:00, run_after=2024-03-07 08:31:00+00:00
[2024-03-07T10:31:12.971+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.971+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.972+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:31:12.973+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.973+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:31:12.974+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.974+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:31:12.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.975+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.975+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:31:12.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.976+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:31:12.978+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.978+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.979+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.979+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:31:12.980+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.980+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:31:12.985+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:30:00+00:00, run_after=2024-03-07 08:31:00+00:00
[2024-03-07T10:31:12.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.986+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:31:12.987+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.987+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:31:12.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:31:12.989+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.989+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:31:12.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.992+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.993+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.994+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:12.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.997+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:28:00+00:00, run_after=2024-03-07 08:30:00+00:00
[2024-03-07T10:31:12.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:31:12.999+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.999+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:31:13.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:12.999+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:31:13.000+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.000+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:13.001+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.001+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:13.002+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.002+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:31:13.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:31:13.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:31:13.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:13.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.006+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:31:13.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.007+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:31:13.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.007+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:31:13.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.008+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:31:13.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.009+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:31:13.010+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.010+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:31:13.011+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.011+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:31:13.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.012+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:31:13.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.012+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:31:13.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.039+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:31:13.043+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.043+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:31:13.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:31:13.043+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:31:13.055+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.030 seconds
[2024-03-07T10:32:49.300+0200] {processor.py:161} INFO - Started process (PID=35341) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:32:49.301+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:32:49.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.301+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:32:49.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.302+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:32:49.363+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.363+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:32:49.364+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.364+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:32:49.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.386+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:32:49.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.387+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:32:49.449+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.448+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:32:49.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.461+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:32:49.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.649+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:32:49.667+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.667+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:32:49.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:49.768+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:32:49.781+0200] {processor.py:840} INFO - DAG(s) 'example_xcom_args', 'example_setup_teardown_taskflow', 'dag_id_1', 'example_weekday_branch_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_produces_1', 'dataset_consumes_unknown_never_scheduled', 'tutorial_dag', 'dataset_consumes_1_and_2', 'example_xcom_args_with_operators', 'example_branch_datetime_operator', 'example_trigger_target_dag', 'example_sensors', 'example_nested_branch_dag', 'example_branch_labels', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_external_task_marker_child', 'dataset_consumes_1_never_scheduled', 'example_python_decorator', 'example_dynamic_task_mapping', 'dag_id_3', 'example_task_group_decorator', 'example_params_trigger_ui', 'example_xcom', 'dataset_produces_2', 'example_branch_dop_operator_v3', 'example_branch_datetime_operator_2', 'example_time_delta_sensor_async', 'tutorial_objectstorage', 'example_sla_dag', 'latest_only_with_trigger', 'example_trigger_controller_dag', 'example_external_task_marker_parent', 'example_sensor_decorator', 'latest_only', 'example_bash_operator', 'example_short_circuit_operator', 'example_task_group', 'example_passing_params_via_test_command', 'dataset_consumes_1', 'example_python_operator', 'dag_id_2', 'example_params_ui_tutorial', 'example_dag_decorator', 'tutorial_taskflow_api', 'example_short_circuit_decorator', 'example_setup_teardown', 'tutorial', 'example_skip_dag', 'example_branch_datetime_operator_3', 'example_complex' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:32:50.219+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.219+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:32:50.239+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.239+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:32:50.241+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.241+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:32:50.242+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.242+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:32:50.243+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.243+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:32:50.244+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.244+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:32:50.245+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.245+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:32:50.246+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.245+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:32:50.249+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.248+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.250+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.250+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:32:50.252+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.252+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.255+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.254+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.257+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.257+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.259+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.259+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.265+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.265+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:31:00+00:00, run_after=2024-03-07 08:32:00+00:00
[2024-03-07T10:32:50.268+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.268+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.269+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.269+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:32:50.270+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.269+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:32:50.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.271+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:32:50.272+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.272+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.273+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.273+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:32:50.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.274+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:32:50.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.276+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.276+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:32:50.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.277+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:32:50.283+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.282+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:31:00+00:00, run_after=2024-03-07 08:32:00+00:00
[2024-03-07T10:32:50.284+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.283+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:32:50.284+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.284+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:32:50.285+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.285+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:32:50.286+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.286+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:32:50.287+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.286+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.287+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.288+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.289+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.289+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.290+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.290+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.293+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:30:00+00:00, run_after=2024-03-07 08:32:00+00:00
[2024-03-07T10:32:50.294+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.294+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:32:50.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.295+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:32:50.296+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.296+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:32:50.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.297+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.298+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.299+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:32:50.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.299+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:32:50.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.300+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:32:50.302+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.302+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.303+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:32:50.304+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.304+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:32:50.304+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.304+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:32:50.305+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.305+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:32:50.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.306+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:32:50.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.307+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:32:50.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.308+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:32:50.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.308+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:32:50.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.309+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:32:50.337+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.336+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:32:50.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:32:50.340+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:32:50.340+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:32:50.353+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.055 seconds
[2024-03-07T10:34:24.343+0200] {processor.py:161} INFO - Started process (PID=35448) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:34:24.344+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:34:24.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.345+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:34:24.346+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.346+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:34:24.396+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.396+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:34:24.397+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.396+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:34:24.414+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.414+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:34:24.415+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.415+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:34:24.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.465+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:34:24.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.477+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:34:24.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.645+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:34:24.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.661+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:34:24.754+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:24.754+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:34:24.765+0200] {processor.py:840} INFO - DAG(s) 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_sensors', 'example_dag_decorator', 'example_params_trigger_ui', 'example_time_delta_sensor_async', 'example_nested_branch_dag', 'example_xcom_args_with_operators', 'example_branch_datetime_operator', 'dag_id_3', 'dataset_produces_2', 'example_passing_params_via_test_command', 'example_task_group', 'latest_only_with_trigger', 'example_branch_dop_operator_v3', 'dag_id_2', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator_3', 'latest_only', 'dataset_produces_1', 'tutorial_objectstorage', 'example_setup_teardown', 'example_sla_dag', 'example_complex', 'example_trigger_target_dag', 'example_external_task_marker_parent', 'example_sensor_decorator', 'example_external_task_marker_child', 'example_params_ui_tutorial', 'example_branch_labels', 'dataset_consumes_unknown_never_scheduled', 'dataset_consumes_1_and_2', 'dag_id_1', 'dataset_consumes_1', 'example_python_decorator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'tutorial_dag', 'example_python_operator', 'example_xcom', 'example_short_circuit_operator', 'example_dynamic_task_mapping', 'example_xcom_args', 'example_task_group_decorator', 'example_weekday_branch_operator', 'dataset_consumes_1_never_scheduled', 'example_trigger_controller_dag', 'tutorial_taskflow_api', 'example_skip_dag', 'example_setup_teardown_taskflow', 'example_short_circuit_decorator', 'tutorial', 'example_bash_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:34:25.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.104+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:34:25.120+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.120+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:34:25.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.122+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:34:25.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.122+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:34:25.123+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.123+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:34:25.124+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.124+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:34:25.124+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.124+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:34:25.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.125+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:34:25.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.127+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.128+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:34:25.130+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.130+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.131+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.133+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.133+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.135+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.139+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.139+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:33:00+00:00, run_after=2024-03-07 08:34:00+00:00
[2024-03-07T10:34:25.141+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.141+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.142+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.141+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:34:25.142+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.142+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:34:25.143+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.143+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:34:25.144+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.144+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:34:25.145+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.145+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:34:25.147+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.147+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:34:25.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.148+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:34:25.152+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.152+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:33:00+00:00, run_after=2024-03-07 08:34:00+00:00
[2024-03-07T10:34:25.153+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.153+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:34:25.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:34:25.154+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.154+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:34:25.155+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.155+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:34:25.156+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.156+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.156+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.157+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.157+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.158+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.159+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.159+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.162+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:32:00+00:00, run_after=2024-03-07 08:34:00+00:00
[2024-03-07T10:34:25.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.162+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:34:25.163+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.163+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:34:25.164+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.164+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:34:25.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.164+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.165+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.166+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:34:25.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.167+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:34:25.167+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.167+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:34:25.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.169+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.170+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:34:25.170+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.170+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:34:25.171+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.171+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:34:25.172+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.172+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:34:25.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.172+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:34:25.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.173+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:34:25.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.174+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:34:25.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.174+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:34:25.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.175+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:34:25.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.197+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:34:25.200+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.200+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:34:25.200+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:34:25.200+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:34:25.215+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.873 seconds
[2024-03-07T10:35:50.012+0200] {processor.py:161} INFO - Started process (PID=35552) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:35:50.013+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:35:50.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.013+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:35:50.015+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.014+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:35:50.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.065+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:35:50.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.066+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:35:50.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.083+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:35:50.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.084+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:35:50.135+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.133+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:35:50.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.150+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:35:50.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.317+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:35:50.333+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.333+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:35:50.427+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.427+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:35:50.439+0200] {processor.py:840} INFO - DAG(s) 'example_nested_branch_dag', 'example_params_ui_tutorial', 'example_passing_params_via_test_command', 'example_external_task_marker_parent', 'example_sensors', 'example_external_task_marker_child', 'example_weekday_branch_operator', 'example_trigger_target_dag', 'example_python_decorator', 'example_dynamic_task_mapping', 'example_xcom_args_with_operators', 'example_skip_dag', 'dag_id_1', 'dataset_consumes_1_and_2', 'tutorial', 'example_time_delta_sensor_async', 'dataset_produces_1', 'example_sla_dag', 'latest_only', 'example_branch_datetime_operator_2', 'example_branch_datetime_operator', 'example_bash_operator', 'tutorial_taskflow_api', 'example_task_group_decorator', 'example_complex', 'example_setup_teardown', 'example_subdag_operator.section-1', 'example_xcom', 'dataset_consumes_1_never_scheduled', 'example_python_operator', 'dataset_consumes_1', 'example_dag_decorator', 'example_short_circuit_decorator', 'example_xcom_args', 'dag_id_2', 'example_branch_dop_operator_v3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_branch_datetime_operator_3', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_params_trigger_ui', 'example_trigger_controller_dag', 'example_branch_labels', 'example_task_group', 'example_setup_teardown_taskflow', 'tutorial_dag', 'dataset_consumes_unknown_never_scheduled', 'tutorial_objectstorage', 'example_sensor_decorator', 'dataset_produces_2', 'latest_only_with_trigger', 'dag_id_3', 'example_short_circuit_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:35:50.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.807+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:35:50.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.823+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:35:50.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.825+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:35:50.826+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.826+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:35:50.826+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.826+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:35:50.827+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.827+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:35:50.828+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.827+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:35:50.828+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.828+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:35:50.830+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.830+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.831+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.831+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:35:50.833+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.833+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.834+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.836+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.836+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.838+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.838+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.842+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.842+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:34:00+00:00, run_after=2024-03-07 08:35:00+00:00
[2024-03-07T10:35:50.844+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.844+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.845+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.845+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:35:50.845+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.845+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:35:50.846+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.846+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:35:50.847+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.847+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.848+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.847+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:35:50.848+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.848+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:35:50.850+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.850+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.851+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.851+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:35:50.851+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.851+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:35:50.856+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.855+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:34:00+00:00, run_after=2024-03-07 08:35:00+00:00
[2024-03-07T10:35:50.856+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.856+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:35:50.857+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.857+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:35:50.858+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.858+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:35:50.858+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.858+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:35:50.859+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.859+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.860+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.860+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.861+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.861+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.862+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.862+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.865+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.865+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:32:00+00:00, run_after=2024-03-07 08:34:00+00:00
[2024-03-07T10:35:50.866+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.866+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:35:50.867+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.866+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:35:50.867+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.867+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:35:50.868+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.868+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.869+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.869+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.870+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.870+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:35:50.870+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.870+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:35:50.871+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.871+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:35:50.873+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.873+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.874+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.873+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:35:50.874+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.874+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:35:50.875+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.875+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:35:50.876+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.876+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:35:50.876+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.876+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:35:50.877+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.877+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:35:50.878+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.878+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:35:50.879+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.878+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:35:50.879+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.879+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:35:50.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.902+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:35:50.905+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.904+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:35:50.905+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:35:50.905+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:35:50.915+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.905 seconds
[2024-03-07T10:37:14.514+0200] {processor.py:161} INFO - Started process (PID=35643) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:37:14.515+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:37:14.515+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.515+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:37:14.516+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.516+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:37:14.566+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.565+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:37:14.566+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.566+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:37:14.583+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.583+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:37:14.584+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.584+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:37:14.634+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.632+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:37:14.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.645+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:37:14.811+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.810+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:37:14.826+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.826+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:37:14.921+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:14.921+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:37:14.932+0200] {processor.py:840} INFO - DAG(s) 'example_sensor_decorator', 'example_setup_teardown', 'example_task_group', 'example_trigger_controller_dag', 'example_setup_teardown_taskflow', 'dag_id_1', 'example_xcom_args', 'example_complex', 'example_bash_operator', 'example_nested_branch_dag', 'example_subdag_operator.section-1', 'tutorial_dag', 'dataset_produces_2', 'dataset_consumes_unknown_never_scheduled', 'example_branch_labels', 'example_skip_dag', 'latest_only', 'example_xcom', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_branch_datetime_operator', 'example_time_delta_sensor_async', 'example_branch_datetime_operator_3', 'example_trigger_target_dag', 'dag_id_2', 'tutorial', 'example_short_circuit_decorator', 'example_branch_datetime_operator_2', 'example_dynamic_task_mapping', 'example_task_group_decorator', 'example_xcom_args_with_operators', 'example_python_decorator', 'example_dag_decorator', 'dag_id_3', 'example_passing_params_via_test_command', 'example_weekday_branch_operator', 'example_external_task_marker_child', 'tutorial_taskflow_api', 'dataset_consumes_1', 'example_python_operator', 'example_params_trigger_ui', 'latest_only_with_trigger', 'example_sensors', 'example_external_task_marker_parent', 'example_sla_dag', 'example_branch_dop_operator_v3', 'dataset_consumes_1_and_2', 'dataset_consumes_1_never_scheduled', 'example_params_ui_tutorial', 'dataset_produces_1', 'tutorial_objectstorage', 'example_short_circuit_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:37:15.249+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.249+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:37:15.264+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.264+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:37:15.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.266+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:37:15.267+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.267+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:37:15.267+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.267+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:37:15.268+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.268+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:37:15.269+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.269+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:37:15.269+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.269+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:37:15.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.271+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.272+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.272+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:37:15.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.274+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.275+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.277+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.279+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.279+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.283+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.283+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:36:00+00:00, run_after=2024-03-07 08:37:00+00:00
[2024-03-07T10:37:15.285+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.285+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.286+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.286+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:37:15.287+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.287+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:37:15.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.287+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:37:15.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.288+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.289+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.289+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:37:15.290+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.289+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:37:15.291+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.291+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.292+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.292+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:37:15.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.292+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:37:15.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.297+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:36:00+00:00, run_after=2024-03-07 08:37:00+00:00
[2024-03-07T10:37:15.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.297+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:37:15.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.298+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:37:15.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.299+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:37:15.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.300+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:37:15.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.300+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.301+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.302+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.302+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.303+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.303+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.306+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:34:00+00:00, run_after=2024-03-07 08:36:00+00:00
[2024-03-07T10:37:15.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.307+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:37:15.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.308+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:37:15.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.308+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:37:15.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.309+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.310+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.310+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:37:15.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.311+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:37:15.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.312+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:37:15.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.314+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.314+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:37:15.315+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.315+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:37:15.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.316+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:37:15.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.316+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:37:15.317+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.317+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:37:15.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.318+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:37:15.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.318+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:37:15.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.319+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:37:15.320+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.320+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:37:15.341+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.341+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:37:15.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.344+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:37:15.345+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:37:15.345+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:37:15.356+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.843 seconds
[2024-03-07T10:38:38.599+0200] {processor.py:161} INFO - Started process (PID=35764) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:38:38.600+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:38:38.600+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.600+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:38:38.602+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.602+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:38:38.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.655+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:38:38.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.656+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:38:38.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.673+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:38:38.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.674+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:38:38.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.725+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:38:38.741+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.741+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:38:38.906+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.906+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:38:38.924+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:38.924+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:38:39.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.021+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:38:39.033+0200] {processor.py:840} INFO - DAG(s) 'example_setup_teardown', 'example_dag_decorator', 'example_passing_params_via_test_command', 'example_dynamic_task_mapping', 'example_nested_branch_dag', 'example_branch_datetime_operator', 'dataset_consumes_1_never_scheduled', 'example_xcom_args', 'example_external_task_marker_child', 'tutorial_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dag_id_2', 'latest_only_with_trigger', 'example_trigger_target_dag', 'example_short_circuit_decorator', 'example_branch_dop_operator_v3', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'example_xcom_args_with_operators', 'example_sensor_decorator', 'example_weekday_branch_operator', 'example_branch_labels', 'tutorial_taskflow_api', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_task_group', 'dataset_consumes_1_and_2', 'latest_only', 'example_params_trigger_ui', 'example_sensors', 'example_task_group_decorator', 'example_python_operator', 'example_skip_dag', 'example_branch_datetime_operator_2', 'tutorial_objectstorage', 'dataset_produces_1', 'example_time_delta_sensor_async', 'example_complex', 'tutorial', 'dataset_consumes_1', 'example_short_circuit_operator', 'example_python_decorator', 'example_bash_operator', 'dag_id_1', 'example_setup_teardown_taskflow', 'example_xcom', 'example_sla_dag', 'dataset_consumes_unknown_never_scheduled', 'example_branch_datetime_operator_3', 'dataset_produces_2', 'example_external_task_marker_parent', 'dag_id_3' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:38:39.411+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.411+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:38:39.428+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.428+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:38:39.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.430+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:38:39.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.430+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:38:39.431+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.431+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:38:39.432+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.432+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:38:39.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.432+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:38:39.433+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.433+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:38:39.435+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.435+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.436+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.436+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:38:39.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.438+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.440+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.442+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.444+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.448+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:37:00+00:00, run_after=2024-03-07 08:38:00+00:00
[2024-03-07T10:38:39.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.450+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.451+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:38:39.451+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.451+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:38:39.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:38:39.453+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.453+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.454+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:38:39.455+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.455+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:38:39.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.457+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:38:39.458+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.458+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:38:39.462+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.462+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:37:00+00:00, run_after=2024-03-07 08:38:00+00:00
[2024-03-07T10:38:39.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:38:39.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.464+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:38:39.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.464+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:38:39.465+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.465+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:38:39.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.469+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:36:00+00:00, run_after=2024-03-07 08:38:00+00:00
[2024-03-07T10:38:39.473+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.473+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:38:39.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:38:39.474+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.474+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:38:39.475+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.475+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:38:39.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:38:39.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:38:39.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:38:39.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.481+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:38:39.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:38:39.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.483+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:38:39.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.483+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:38:39.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.484+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:38:39.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.485+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:38:39.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.486+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:38:39.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.486+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:38:39.510+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.510+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:38:39.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.512+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:38:39.513+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:38:39.513+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:38:39.524+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.926 seconds
[2024-03-07T10:40:14.193+0200] {processor.py:161} INFO - Started process (PID=35901) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:40:14.194+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:40:14.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.194+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:40:14.196+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.196+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:40:14.255+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.255+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:40:14.256+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.256+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:40:14.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.274+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:40:14.275+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.275+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:40:14.329+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.328+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:40:14.341+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.341+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:40:14.521+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.520+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:40:14.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.538+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:40:14.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:14.644+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:40:14.657+0200] {processor.py:840} INFO - DAG(s) 'dataset_produces_2', 'dataset_consumes_1_never_scheduled', 'example_subdag_operator.section-1', 'example_short_circuit_decorator', 'example_short_circuit_operator', 'latest_only', 'dataset_consumes_1_and_2', 'example_setup_teardown', 'example_complex', 'example_python_decorator', 'example_xcom', 'example_xcom_args_with_operators', 'example_weekday_branch_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_python_operator', 'example_task_group', 'example_params_trigger_ui', 'example_passing_params_via_test_command', 'example_branch_labels', 'example_dag_decorator', 'dag_id_2', 'tutorial_dag', 'example_external_task_marker_child', 'example_sla_dag', 'example_params_ui_tutorial', 'example_branch_dop_operator_v3', 'example_sensors', 'tutorial_taskflow_api', 'example_nested_branch_dag', 'example_external_task_marker_parent', 'dataset_produces_1', 'example_branch_datetime_operator', 'dag_id_3', 'tutorial', 'example_time_delta_sensor_async', 'example_task_group_decorator', 'dag_id_1', 'example_xcom_args', 'example_skip_dag', 'example_branch_datetime_operator_2', 'example_trigger_target_dag', 'tutorial_objectstorage', 'example_sensor_decorator', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_branch_datetime_operator_3', 'example_setup_teardown_taskflow', 'example_trigger_controller_dag', 'dataset_consumes_unknown_never_scheduled', 'example_bash_operator', 'dataset_consumes_1', 'latest_only_with_trigger', 'example_dynamic_task_mapping' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:40:15.028+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.028+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:40:15.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.046+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:40:15.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.048+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:40:15.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.049+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:40:15.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.050+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:40:15.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.050+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:40:15.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.051+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:40:15.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.052+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:40:15.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.054+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.054+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:40:15.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.059+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.059+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.061+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.061+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:39:00+00:00, run_after=2024-03-07 08:40:00+00:00
[2024-03-07T10:40:15.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:40:15.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:40:15.074+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:40:15.075+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.075+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:40:15.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:40:15.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:40:15.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:40:15.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:39:00+00:00, run_after=2024-03-07 08:40:00+00:00
[2024-03-07T10:40:15.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.093+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:40:15.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:40:15.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:40:15.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.096+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:40:15.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.097+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.099+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.101+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.103+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.102+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.104+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.104+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.111+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.110+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:38:00+00:00, run_after=2024-03-07 08:40:00+00:00
[2024-03-07T10:40:15.112+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.112+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:40:15.113+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.113+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:40:15.114+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.114+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:40:15.115+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.115+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.116+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.116+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.117+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.117+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:40:15.118+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.118+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:40:15.119+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.119+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:40:15.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.121+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.122+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.122+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:40:15.123+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.123+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:40:15.124+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.124+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:40:15.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.125+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:40:15.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.126+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:40:15.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.127+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:40:15.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.129+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:40:15.131+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.130+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:40:15.132+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.132+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:40:15.162+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.162+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:40:15.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.165+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:40:15.166+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:40:15.166+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:40:15.178+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.986 seconds
[2024-03-07T10:41:58.897+0200] {processor.py:161} INFO - Started process (PID=36019) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:41:58.898+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:41:58.899+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:58.899+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:41:58.900+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:58.900+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:41:58.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:58.960+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:41:58.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:58.961+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:41:58.979+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:58.979+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:41:58.981+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:58.981+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:41:59.039+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.037+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:41:59.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.050+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:41:59.239+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.238+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:41:59.259+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.259+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:41:59.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.386+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:41:59.401+0200] {processor.py:840} INFO - DAG(s) 'example_time_delta_sensor_async', 'dataset_consumes_1', 'example_weekday_branch_operator', 'example_branch_datetime_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_setup_teardown', 'dataset_consumes_1_never_scheduled', 'example_python_decorator', 'example_setup_teardown_taskflow', 'example_branch_datetime_operator_2', 'dataset_produces_1', 'example_branch_dop_operator_v3', 'example_passing_params_via_test_command', 'dataset_consumes_unknown_never_scheduled', 'example_sensor_decorator', 'example_short_circuit_operator', 'latest_only', 'example_params_trigger_ui', 'tutorial_taskflow_api', 'example_sensors', 'example_xcom', 'example_xcom_args', 'example_task_group_decorator', 'example_dag_decorator', 'dag_id_1', 'example_skip_dag', 'example_short_circuit_decorator', 'example_params_ui_tutorial', 'tutorial_dag', 'latest_only_with_trigger', 'dag_id_3', 'tutorial_objectstorage', 'example_trigger_target_dag', 'example_branch_labels', 'example_sla_dag', 'tutorial', 'dataset_produces_2', 'dataset_consumes_1_and_2', 'example_complex', 'example_nested_branch_dag', 'example_external_task_marker_parent', 'example_task_group', 'example_trigger_controller_dag', 'example_branch_datetime_operator_3', 'example_bash_operator', 'example_xcom_args_with_operators', 'example_external_task_marker_child', 'example_python_operator', 'example_dynamic_task_mapping', 'dag_id_2' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:41:59.901+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.901+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:41:59.923+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.922+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:41:59.925+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.925+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:41:59.927+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.926+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:41:59.928+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.927+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:41:59.928+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.928+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:41:59.929+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.929+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:41:59.930+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.930+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:41:59.933+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.933+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.934+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.934+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:41:59.937+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.937+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.939+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.939+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.941+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.941+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.944+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.943+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.949+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.949+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:40:00+00:00, run_after=2024-03-07 08:41:00+00:00
[2024-03-07T10:41:59.952+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.952+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.953+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.953+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:41:59.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.954+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:41:59.955+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.955+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:41:59.956+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.956+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.957+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.957+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:41:59.958+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.957+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:41:59.960+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.960+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.961+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.961+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:41:59.962+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.962+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:41:59.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.967+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:40:00+00:00, run_after=2024-03-07 08:41:00+00:00
[2024-03-07T10:41:59.968+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.968+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:41:59.969+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.969+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:41:59.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.970+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:41:59.971+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.971+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:41:59.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.972+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.973+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.973+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.974+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.974+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.975+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.976+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.976+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.980+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.980+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:38:00+00:00, run_after=2024-03-07 08:40:00+00:00
[2024-03-07T10:41:59.981+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.981+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:41:59.982+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.982+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:41:59.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:41:59.984+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.984+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.985+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.985+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.986+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.986+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:41:59.987+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.987+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:41:59.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:41:59.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:41:59.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.992+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:41:59.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.993+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:41:59.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.994+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:41:59.995+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.995+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:41:59.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.996+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:41:59.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.997+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:41:59.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.998+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:41:59.999+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:41:59.999+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:42:00.031+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:42:00.031+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:42:00.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:42:00.034+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:42:00.035+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:42:00.035+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:42:00.048+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.152 seconds
[2024-03-07T10:43:36.707+0200] {processor.py:161} INFO - Started process (PID=36133) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:43:36.708+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:43:36.708+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.708+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:43:36.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.709+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:43:36.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.769+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:43:36.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.769+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:43:36.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.787+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:43:36.788+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.788+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:43:36.852+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.851+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:43:36.863+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:36.863+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:43:37.040+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.039+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:43:37.056+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.056+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:43:37.155+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.155+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:43:37.167+0200] {processor.py:840} INFO - DAG(s) 'example_nested_branch_dag', 'tutorial_objectstorage', 'example_branch_dop_operator_v3', 'example_params_ui_tutorial', 'example_task_group', 'example_dynamic_task_mapping', 'example_subdag_operator.section-2', 'example_external_task_marker_child', 'tutorial_taskflow_api', 'dataset_produces_2', 'example_sensors', 'example_task_group_decorator', 'example_weekday_branch_operator', 'example_subdag_operator.section-1', 'example_subdag_operator', 'example_trigger_controller_dag', 'example_sensor_decorator', 'dag_id_2', 'example_xcom_args_with_operators', 'example_passing_params_via_test_command', 'dataset_consumes_1', 'example_xcom_args', 'example_dag_decorator', 'latest_only', 'example_xcom', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_setup_teardown_taskflow', 'dataset_consumes_1_and_2', 'dataset_consumes_unknown_never_scheduled', 'example_time_delta_sensor_async', 'example_setup_teardown', 'dataset_consumes_1_never_scheduled', 'dag_id_1', 'example_bash_operator', 'example_branch_labels', 'example_python_decorator', 'example_sla_dag', 'example_python_operator', 'example_params_trigger_ui', 'example_branch_datetime_operator', 'example_short_circuit_operator', 'latest_only_with_trigger', 'example_skip_dag', 'example_branch_datetime_operator_3', 'example_trigger_target_dag', 'example_branch_datetime_operator_2', 'tutorial_dag', 'dag_id_3', 'example_complex', 'example_external_task_marker_parent', 'example_short_circuit_decorator', 'tutorial', 'dataset_produces_1' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:43:37.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.508+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:43:37.525+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.525+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:43:37.527+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.527+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:43:37.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.528+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:43:37.528+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.528+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:43:37.529+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.529+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:43:37.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.530+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:43:37.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.530+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:43:37.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.532+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.533+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.533+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:43:37.536+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.535+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.537+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.537+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.539+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.541+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.546+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.546+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:42:00+00:00, run_after=2024-03-07 08:43:00+00:00
[2024-03-07T10:43:37.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.547+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.548+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:43:37.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.549+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:43:37.550+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.550+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:43:37.551+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.551+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.552+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.551+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:43:37.552+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.552+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:43:37.554+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.554+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.555+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:43:37.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.555+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:43:37.560+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.560+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:42:00+00:00, run_after=2024-03-07 08:43:00+00:00
[2024-03-07T10:43:37.560+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.560+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:43:37.561+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.561+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:43:37.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.562+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:43:37.563+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.562+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:43:37.563+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.563+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.564+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.564+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.565+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.565+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.566+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.566+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.567+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.567+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.570+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.570+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:40:00+00:00, run_after=2024-03-07 08:42:00+00:00
[2024-03-07T10:43:37.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.570+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:43:37.571+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.571+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:43:37.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.572+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:43:37.573+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.573+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.574+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.574+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:43:37.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.575+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:43:37.576+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.576+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:43:37.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.578+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.579+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:43:37.580+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.580+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:43:37.581+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.581+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:43:37.582+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.582+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:43:37.582+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.582+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:43:37.583+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.583+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:43:37.584+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.584+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:43:37.585+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.585+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:43:37.585+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.585+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:43:37.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.618+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:43:37.623+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.622+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:43:37.623+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:43:37.623+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:43:37.637+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.932 seconds
[2024-03-07T10:45:10.225+0200] {processor.py:161} INFO - Started process (PID=36239) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:45:10.226+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:45:10.227+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.226+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:45:10.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.228+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:45:10.280+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.279+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:45:10.280+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.280+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:45:10.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.297+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:45:10.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.298+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:45:10.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.351+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:45:10.363+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.363+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:45:10.541+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.540+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:45:10.556+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.556+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:45:10.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:10.650+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:45:10.662+0200] {processor.py:840} INFO - DAG(s) 'example_time_delta_sensor_async', 'tutorial_objectstorage', 'dag_id_1', 'example_branch_labels', 'example_xcom_args', 'example_external_task_marker_parent', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'example_task_group', 'example_branch_dop_operator_v3', 'example_params_trigger_ui', 'dag_id_3', 'example_branch_datetime_operator_2', 'example_subdag_operator.section-2', 'tutorial', 'example_python_decorator', 'dag_id_2', 'example_dynamic_task_mapping', 'example_sla_dag', 'example_bash_operator', 'dataset_consumes_1', 'example_setup_teardown', 'example_external_task_marker_child', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_subdag_operator.section-1', 'latest_only', 'dataset_consumes_1_and_2', 'example_short_circuit_decorator', 'dataset_consumes_1_never_scheduled', 'dataset_produces_1', 'example_passing_params_via_test_command', 'example_xcom_args_with_operators', 'example_weekday_branch_operator', 'example_skip_dag', 'example_subdag_operator', 'example_complex', 'example_branch_datetime_operator_3', 'dataset_produces_2', 'example_xcom', 'tutorial_dag', 'example_sensor_decorator', 'example_trigger_target_dag', 'latest_only_with_trigger', 'example_setup_teardown_taskflow', 'example_sensors', 'example_branch_datetime_operator', 'example_task_group_decorator', 'example_dag_decorator', 'example_nested_branch_dag', 'example_short_circuit_operator', 'tutorial_taskflow_api', 'example_python_operator', 'dataset_consumes_unknown_never_scheduled' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:45:11.029+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.028+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:45:11.044+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.044+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:45:11.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.046+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:45:11.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.047+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:45:11.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.048+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:45:11.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.048+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:45:11.049+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.049+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:45:11.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.050+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:45:11.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.051+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.052+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.052+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:45:11.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.054+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.056+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.056+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.058+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.059+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.059+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:44:00+00:00, run_after=2024-03-07 08:45:00+00:00
[2024-03-07T10:45:11.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:45:11.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:45:11.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:45:11.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.069+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.069+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:45:11.070+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.070+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:45:11.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:45:11.073+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.073+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:45:11.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:44:00+00:00, run_after=2024-03-07 08:45:00+00:00
[2024-03-07T10:45:11.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:45:11.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:45:11.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:45:11.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:45:11.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.084+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.084+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.087+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:42:00+00:00, run_after=2024-03-07 08:44:00+00:00
[2024-03-07T10:45:11.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:45:11.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:45:11.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.089+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:45:11.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:45:11.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:45:11.093+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:45:11.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:45:11.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.096+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:45:11.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.096+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:45:11.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.097+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:45:11.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.098+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:45:11.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.099+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:45:11.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.099+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:45:11.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.100+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:45:11.101+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.101+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:45:11.125+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.124+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:45:11.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.127+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:45:11.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:45:11.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:45:11.143+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.919 seconds
[2024-03-07T10:46:34.010+0200] {processor.py:161} INFO - Started process (PID=36328) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:46:34.011+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:46:34.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.012+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:46:34.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.014+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:46:34.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.063+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:46:34.064+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.063+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:46:34.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.081+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:46:34.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.082+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:46:34.136+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.134+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:46:34.150+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.150+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:46:34.317+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.316+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:46:34.334+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.334+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:46:34.430+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.429+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:46:34.441+0200] {processor.py:840} INFO - DAG(s) 'example_sensor_decorator', 'example_external_task_marker_child', 'tutorial_dag', 'dataset_consumes_1_and_2', 'example_xcom', 'example_time_delta_sensor_async', 'example_dag_decorator', 'latest_only', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_trigger_ui', 'example_sla_dag', 'example_skip_dag', 'example_setup_teardown', 'dataset_consumes_unknown_never_scheduled', 'example_trigger_target_dag', 'example_branch_dop_operator_v3', 'example_python_decorator', 'example_nested_branch_dag', 'example_bash_operator', 'example_short_circuit_decorator', 'example_params_ui_tutorial', 'example_short_circuit_operator', 'example_task_group_decorator', 'example_branch_datetime_operator', 'example_subdag_operator.section-1', 'example_setup_teardown_taskflow', 'example_trigger_controller_dag', 'dag_id_2', 'example_task_group', 'example_xcom_args', 'dataset_produces_2', 'dataset_consumes_1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_python_operator', 'example_sensors', 'tutorial_objectstorage', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator_2', 'dataset_produces_1', 'tutorial_taskflow_api', 'tutorial', 'example_passing_params_via_test_command', 'example_branch_datetime_operator_3', 'dag_id_1', 'example_external_task_marker_parent', 'latest_only_with_trigger', 'dag_id_3', 'example_dynamic_task_mapping', 'example_complex', 'example_weekday_branch_operator', 'example_branch_labels', 'example_xcom_args_with_operators' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:46:34.739+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.739+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:46:34.755+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.755+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:46:34.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.757+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:46:34.757+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.757+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:46:34.758+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.758+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:46:34.759+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.759+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:46:34.759+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.759+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:46:34.760+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.760+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:46:34.762+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.762+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.763+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.763+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:46:34.765+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.765+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.767+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.766+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.768+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.768+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.770+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.774+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.774+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:45:00+00:00, run_after=2024-03-07 08:46:00+00:00
[2024-03-07T10:46:34.776+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.776+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.776+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:46:34.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.777+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:46:34.778+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.778+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:46:34.779+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.779+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.779+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:46:34.780+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.780+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:46:34.782+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.782+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.782+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:46:34.783+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.783+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:46:34.787+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.787+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:45:00+00:00, run_after=2024-03-07 08:46:00+00:00
[2024-03-07T10:46:34.788+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.788+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:46:34.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.788+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:46:34.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.789+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:46:34.790+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.790+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:46:34.791+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.791+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.791+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.791+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.792+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.792+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.793+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.793+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.794+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.794+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.797+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:44:00+00:00, run_after=2024-03-07 08:46:00+00:00
[2024-03-07T10:46:34.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:46:34.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.798+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:46:34.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.799+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:46:34.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.800+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.801+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.801+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.801+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:46:34.802+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.802+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:46:34.803+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.803+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:46:34.804+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.804+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.805+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:46:34.806+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.806+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:46:34.806+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.806+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:46:34.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.807+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:46:34.808+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.808+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:46:34.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.809+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:46:34.809+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.809+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:46:34.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.810+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:46:34.811+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.811+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:46:34.832+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.832+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:46:34.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.835+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:46:34.835+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:46:34.835+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:46:34.846+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.837 seconds
[2024-03-07T10:47:58.400+0200] {processor.py:161} INFO - Started process (PID=36420) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:47:58.401+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:47:58.401+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.401+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:47:58.402+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.402+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:47:58.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.451+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:47:58.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.452+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:47:58.469+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.469+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:47:58.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.470+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:47:58.520+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.519+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:47:58.532+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.532+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:47:58.697+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.696+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:47:58.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.712+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:47:58.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:58.807+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:47:58.818+0200] {processor.py:840} INFO - DAG(s) 'example_nested_branch_dag', 'example_branch_datetime_operator_2', 'example_task_group_decorator', 'example_complex', 'dag_id_2', 'dag_id_3', 'dag_id_1', 'example_xcom', 'example_sensor_decorator', 'tutorial_objectstorage', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_ui_tutorial', 'example_branch_dop_operator_v3', 'example_dynamic_task_mapping', 'example_xcom_args', 'example_trigger_target_dag', 'example_time_delta_sensor_async', 'tutorial_dag', 'example_setup_teardown', 'example_dag_decorator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_task_group', 'example_branch_datetime_operator', 'example_python_operator', 'example_external_task_marker_parent', 'example_bash_operator', 'example_short_circuit_decorator', 'latest_only', 'example_params_trigger_ui', 'tutorial', 'example_xcom_args_with_operators', 'dataset_produces_1', 'example_passing_params_via_test_command', 'dataset_produces_2', 'example_branch_datetime_operator_3', 'example_trigger_controller_dag', 'dataset_consumes_1_and_2', 'example_external_task_marker_child', 'example_weekday_branch_operator', 'example_setup_teardown_taskflow', 'dataset_consumes_1', 'dataset_consumes_unknown_never_scheduled', 'tutorial_taskflow_api', 'example_sensors', 'example_branch_labels', 'example_python_decorator', 'example_short_circuit_operator', 'latest_only_with_trigger', 'dataset_consumes_1_never_scheduled', 'example_skip_dag', 'example_sla_dag' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:47:59.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.208+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:47:59.224+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.224+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:47:59.226+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.226+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:47:59.227+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.227+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:47:59.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.227+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:47:59.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.228+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:47:59.229+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.229+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:47:59.230+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.229+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:47:59.231+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.231+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.232+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:47:59.234+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.234+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.236+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.236+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.238+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.238+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.240+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.240+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.244+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.244+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:46:00+00:00, run_after=2024-03-07 08:47:00+00:00
[2024-03-07T10:47:59.246+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.246+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.247+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.246+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:47:59.247+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.247+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:47:59.248+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.248+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:47:59.249+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.249+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.250+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.249+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:47:59.250+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.250+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:47:59.252+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.252+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.253+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.253+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:47:59.253+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.253+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:47:59.258+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.258+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:46:00+00:00, run_after=2024-03-07 08:47:00+00:00
[2024-03-07T10:47:59.258+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.258+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:47:59.259+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.259+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:47:59.260+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.260+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:47:59.260+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.260+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:47:59.261+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.261+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.262+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.262+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.263+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.263+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.264+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.263+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.264+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.264+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.268+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.267+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:44:00+00:00, run_after=2024-03-07 08:46:00+00:00
[2024-03-07T10:47:59.268+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.268+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:47:59.269+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.269+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:47:59.270+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.269+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:47:59.270+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.270+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.271+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.272+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.272+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:47:59.273+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.272+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:47:59.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.273+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:47:59.275+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.275+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.276+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:47:59.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.277+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:47:59.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.277+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:47:59.278+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.278+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:47:59.279+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.279+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:47:59.280+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.280+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:47:59.281+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.280+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:47:59.281+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.281+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:47:59.282+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.282+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:47:59.306+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.306+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:47:59.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.308+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:47:59.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:47:59.309+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:47:59.325+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.926 seconds
[2024-03-07T10:49:28.162+0200] {processor.py:161} INFO - Started process (PID=36520) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:49:28.163+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:49:28.163+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.163+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:49:28.165+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.164+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:49:28.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.217+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:49:28.218+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.217+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:49:28.235+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.235+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:49:28.236+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.236+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:49:28.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.287+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:49:28.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.299+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:49:28.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.465+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:49:28.483+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.482+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:49:28.587+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.586+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:49:28.599+0200] {processor.py:840} INFO - DAG(s) 'example_xcom_args_with_operators', 'dag_id_2', 'dataset_produces_2', 'example_params_ui_tutorial', 'example_branch_labels', 'example_complex', 'example_python_operator', 'example_branch_dop_operator_v3', 'example_dag_decorator', 'dag_id_1', 'example_task_group_decorator', 'example_xcom', 'dataset_consumes_1_and_2', 'tutorial_taskflow_api', 'dataset_consumes_1_never_scheduled', 'tutorial', 'example_sla_dag', 'example_sensors', 'example_nested_branch_dag', 'example_bash_operator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_trigger_controller_dag', 'example_external_task_marker_parent', 'example_task_group', 'latest_only_with_trigger', 'example_dynamic_task_mapping', 'example_params_trigger_ui', 'example_external_task_marker_child', 'example_branch_datetime_operator', 'dataset_consumes_unknown_never_scheduled', 'example_xcom_args', 'example_time_delta_sensor_async', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_produces_1', 'example_trigger_target_dag', 'dataset_consumes_1', 'example_branch_datetime_operator_3', 'dag_id_3', 'example_skip_dag', 'example_setup_teardown_taskflow', 'example_setup_teardown', 'example_passing_params_via_test_command', 'example_weekday_branch_operator', 'tutorial_objectstorage', 'example_short_circuit_operator', 'example_sensor_decorator', 'latest_only', 'example_short_circuit_decorator', 'tutorial_dag', 'example_python_decorator', 'example_branch_datetime_operator_2' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:49:28.950+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.949+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:49:28.967+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.967+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:49:28.969+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.969+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:49:28.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.970+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:49:28.970+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.970+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:49:28.971+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.971+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:49:28.972+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.972+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:49:28.973+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.972+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:49:28.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.974+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.975+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.975+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:49:28.977+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.977+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.979+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.979+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.981+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.981+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.983+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.983+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.988+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.988+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:48:00+00:00, run_after=2024-03-07 08:49:00+00:00
[2024-03-07T10:49:28.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.990+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.990+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:49:28.991+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.991+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:49:28.992+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.992+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:49:28.993+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.993+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.994+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:49:28.994+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.994+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:49:28.996+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.996+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:28.997+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.997+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:49:28.998+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:28.998+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:49:29.002+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.002+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:48:00+00:00, run_after=2024-03-07 08:49:00+00:00
[2024-03-07T10:49:29.003+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:49:29.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.003+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:49:29.004+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.004+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:49:29.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.005+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:49:29.006+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.006+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.007+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.007+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.007+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.008+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.008+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.009+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.009+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.012+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.012+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:46:00+00:00, run_after=2024-03-07 08:48:00+00:00
[2024-03-07T10:49:29.013+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.013+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:49:29.014+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.014+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:49:29.015+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.014+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:49:29.015+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.015+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.016+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.016+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.017+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.017+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:49:29.018+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.017+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:49:29.018+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.018+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:49:29.020+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.020+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.021+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.021+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:49:29.022+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.022+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:49:29.022+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.022+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:49:29.023+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.023+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:49:29.024+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.024+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:49:29.025+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.025+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:49:29.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.025+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:49:29.026+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.026+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:49:29.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.027+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:49:29.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.050+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:49:29.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:49:29.054+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:49:29.054+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:49:29.064+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.903 seconds
[2024-03-07T10:51:05.385+0200] {processor.py:161} INFO - Started process (PID=36625) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:51:05.386+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:51:05.386+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.386+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:51:05.387+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.387+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:51:05.438+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.438+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:51:05.439+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.438+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:51:05.456+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.456+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:51:05.457+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.457+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:51:05.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.506+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:51:05.519+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.519+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:51:05.707+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.707+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:51:05.727+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.727+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:51:05.837+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:05.837+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:51:05.850+0200] {processor.py:840} INFO - DAG(s) 'dataset_consumes_unknown_never_scheduled', 'example_dynamic_task_mapping', 'example_bash_operator', 'example_subdag_operator.section-1', 'example_python_decorator', 'example_weekday_branch_operator', 'dataset_produces_2', 'dataset_consumes_1_and_2', 'tutorial', 'example_complex', 'dag_id_3', 'example_task_group', 'example_sla_dag', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'dag_id_2', 'tutorial_taskflow_api', 'example_nested_branch_dag', 'dataset_consumes_1_never_scheduled', 'tutorial_dag', 'example_task_group_decorator', 'example_short_circuit_operator', 'example_setup_teardown', 'latest_only', 'example_time_delta_sensor_async', 'example_short_circuit_decorator', 'example_sensors', 'example_sensor_decorator', 'example_subdag_operator.section-2', 'tutorial_objectstorage', 'example_external_task_marker_child', 'example_xcom', 'example_trigger_target_dag', 'example_xcom_args', 'example_setup_teardown_taskflow', 'example_trigger_controller_dag', 'example_python_operator', 'latest_only_with_trigger', 'example_branch_labels', 'example_dag_decorator', 'dataset_consumes_1', 'example_external_task_marker_parent', 'example_branch_dop_operator_v3', 'example_params_trigger_ui', 'dataset_produces_1', 'example_xcom_args_with_operators', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_skip_dag', 'dag_id_1', 'example_subdag_operator', 'example_passing_params_via_test_command', 'example_params_ui_tutorial', 'example_branch_datetime_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:51:06.248+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.248+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:51:06.264+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.264+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:51:06.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.266+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:51:06.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.266+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:51:06.267+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.267+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:51:06.268+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.268+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:51:06.268+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.268+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:51:06.269+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.269+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:51:06.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.271+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.272+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.272+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:51:06.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.274+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.276+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.277+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.279+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.279+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.284+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.284+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:50:00+00:00, run_after=2024-03-07 08:51:00+00:00
[2024-03-07T10:51:06.285+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.285+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.286+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.286+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:51:06.287+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.287+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:51:06.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.288+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:51:06.288+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.288+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.289+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.289+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:51:06.290+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.290+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:51:06.292+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.291+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.292+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.292+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:51:06.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.293+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:51:06.297+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.297+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:50:00+00:00, run_after=2024-03-07 08:51:00+00:00
[2024-03-07T10:51:06.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.298+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:51:06.298+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.298+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:51:06.299+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.299+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:51:06.300+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.300+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:51:06.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.300+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.301+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.301+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.302+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.302+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.303+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.303+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.304+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.304+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.307+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:48:00+00:00, run_after=2024-03-07 08:50:00+00:00
[2024-03-07T10:51:06.307+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.307+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:51:06.308+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.308+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:51:06.309+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.309+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:51:06.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.309+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.310+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.311+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.311+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:51:06.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.311+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:51:06.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.312+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:51:06.314+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.314+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.315+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.315+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:51:06.315+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.315+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:51:06.316+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.316+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:51:06.317+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.317+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:51:06.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.317+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:51:06.319+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.319+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:51:06.320+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.320+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:51:06.321+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.321+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:51:06.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.322+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:51:06.350+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.349+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:51:06.352+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:51:06.353+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:51:06.352+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:51:06.363+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.980 seconds
[2024-03-07T10:52:39.479+0200] {processor.py:161} INFO - Started process (PID=36732) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:52:39.480+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:52:39.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.480+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:52:39.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.481+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:52:39.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.530+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:52:39.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.531+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:52:39.548+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.548+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:52:39.549+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.549+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:52:39.600+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.599+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:52:39.611+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.611+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:52:39.784+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.783+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:52:39.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.799+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:52:39.895+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:39.895+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:52:39.907+0200] {processor.py:840} INFO - DAG(s) 'dag_id_2', 'dataset_consumes_1_never_scheduled', 'example_branch_dop_operator_v3', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_sensors', 'example_bash_operator', 'example_external_task_marker_child', 'example_branch_datetime_operator_3', 'tutorial_dag', 'example_xcom_args', 'tutorial_objectstorage', 'latest_only_with_trigger', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'example_branch_labels', 'example_dynamic_task_mapping', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'example_sensor_decorator', 'latest_only', 'example_time_delta_sensor_async', 'tutorial_taskflow_api', 'example_subdag_operator.section-1', 'dataset_consumes_unknown_never_scheduled', 'example_branch_datetime_operator', 'example_dag_decorator', 'example_python_decorator', 'example_weekday_branch_operator', 'example_external_task_marker_parent', 'example_sla_dag', 'example_branch_datetime_operator_2', 'example_subdag_operator.section-2', 'example_subdag_operator', 'dag_id_1', 'example_complex', 'example_xcom', 'example_trigger_target_dag', 'example_task_group_decorator', 'example_params_trigger_ui', 'tutorial', 'dataset_produces_2', 'example_xcom_args_with_operators', 'example_params_ui_tutorial', 'example_trigger_controller_dag', 'example_python_operator', 'example_task_group', 'example_nested_branch_dag', 'example_short_circuit_operator', 'example_skip_dag', 'dataset_consumes_1_and_2', 'dataset_produces_1', 'dag_id_3', 'example_setup_teardown' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:52:40.223+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.222+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:52:40.238+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.238+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:52:40.240+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.240+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:52:40.241+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.241+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:52:40.242+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.241+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:52:40.242+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.242+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:52:40.243+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.243+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:52:40.244+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.243+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:52:40.245+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.245+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.246+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.246+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:52:40.248+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.248+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.250+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.250+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.252+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.252+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.254+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.253+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.258+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.258+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:51:00+00:00, run_after=2024-03-07 08:52:00+00:00
[2024-03-07T10:52:40.260+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.259+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.260+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.260+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:52:40.261+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.261+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:52:40.262+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.262+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:52:40.263+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.263+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.263+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.263+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:52:40.264+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.264+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:52:40.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.266+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.266+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.266+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:52:40.267+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.267+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:52:40.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.271+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:51:00+00:00, run_after=2024-03-07 08:52:00+00:00
[2024-03-07T10:52:40.272+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.272+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:52:40.273+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.273+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:52:40.273+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.273+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:52:40.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.274+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:52:40.275+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.275+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.276+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.276+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.276+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.277+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.277+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.278+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.278+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.281+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.281+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:50:00+00:00, run_after=2024-03-07 08:52:00+00:00
[2024-03-07T10:52:40.282+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.282+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:52:40.283+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.283+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:52:40.283+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.283+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:52:40.284+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.284+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.285+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.285+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.286+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.286+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:52:40.286+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.286+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:52:40.287+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.287+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:52:40.289+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.289+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.289+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.289+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:52:40.290+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.290+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:52:40.291+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.291+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:52:40.292+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.292+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:52:40.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.292+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:52:40.293+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.293+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:52:40.294+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.294+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:52:40.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.295+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:52:40.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.295+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:52:40.318+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.318+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:52:40.321+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.321+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:52:40.322+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:52:40.322+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:52:40.332+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.854 seconds
[2024-03-07T10:54:11.669+0200] {processor.py:161} INFO - Started process (PID=36826) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:54:11.670+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:54:11.670+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.670+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:54:11.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.671+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:54:11.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.725+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:54:11.726+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.726+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:54:11.744+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.744+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:54:11.745+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.745+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:54:11.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.798+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:54:11.811+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.811+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:54:11.987+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:11.986+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:54:12.005+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.004+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:54:12.140+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.139+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:54:12.155+0200] {processor.py:840} INFO - DAG(s) 'example_time_delta_sensor_async', 'example_nested_branch_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_trigger_ui', 'example_sensors', 'example_short_circuit_decorator', 'example_weekday_branch_operator', 'example_python_decorator', 'example_trigger_controller_dag', 'example_params_ui_tutorial', 'dataset_produces_1', 'dataset_consumes_1_and_2', 'example_branch_datetime_operator_3', 'example_branch_dop_operator_v3', 'tutorial_dag', 'dataset_consumes_1', 'dataset_consumes_1_never_scheduled', 'tutorial_taskflow_api', 'latest_only_with_trigger', 'example_xcom_args_with_operators', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_skip_dag', 'dag_id_2', 'example_external_task_marker_child', 'example_xcom', 'dataset_produces_2', 'example_trigger_target_dag', 'example_python_operator', 'example_branch_labels', 'dag_id_1', 'example_task_group', 'example_dag_decorator', 'example_sensor_decorator', 'example_branch_datetime_operator_2', 'example_sla_dag', 'example_setup_teardown', 'example_dynamic_task_mapping', 'dag_id_3', 'example_branch_datetime_operator', 'tutorial_objectstorage', 'latest_only', 'example_passing_params_via_test_command', 'example_task_group_decorator', 'example_complex', 'example_external_task_marker_parent', 'example_bash_operator', 'example_xcom_args', 'tutorial', 'dataset_consumes_unknown_never_scheduled', 'example_short_circuit_operator', 'example_setup_teardown_taskflow' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:54:12.598+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.598+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:54:12.615+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.615+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:54:12.617+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.617+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:54:12.618+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.617+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:54:12.618+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.618+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:54:12.619+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.619+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:54:12.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.620+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:54:12.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.620+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:54:12.622+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.622+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.623+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.623+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:54:12.625+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.625+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.627+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.627+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.629+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.629+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.631+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.631+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:53:00+00:00, run_after=2024-03-07 08:54:00+00:00
[2024-03-07T10:54:12.637+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.637+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.638+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.638+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:54:12.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.638+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:54:12.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.639+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:54:12.640+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.640+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.641+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.641+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:54:12.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.642+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:54:12.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.644+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.644+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:54:12.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.645+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:54:12.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.649+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:53:00+00:00, run_after=2024-03-07 08:54:00+00:00
[2024-03-07T10:54:12.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.650+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:54:12.651+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.651+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:54:12.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.652+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:54:12.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.652+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:54:12.653+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.653+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.655+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.655+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.656+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.657+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.656+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.660+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.660+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:52:00+00:00, run_after=2024-03-07 08:54:00+00:00
[2024-03-07T10:54:12.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.660+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:54:12.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.661+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:54:12.662+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.662+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:54:12.663+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.663+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.664+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.664+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:54:12.665+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.665+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:54:12.666+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.666+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:54:12.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.667+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.668+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:54:12.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.669+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:54:12.670+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.670+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:54:12.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.670+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:54:12.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.671+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:54:12.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.672+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:54:12.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.673+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:54:12.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.673+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:54:12.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.674+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:54:12.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.699+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:54:12.703+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:54:12.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:54:12.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:54:12.717+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.050 seconds
[2024-03-07T10:55:48.768+0200] {processor.py:161} INFO - Started process (PID=36930) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:55:48.769+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T10:55:48.769+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.769+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:55:48.770+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.770+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T10:55:48.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.820+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T10:55:48.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.821+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:55:48.838+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.838+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:55:48.839+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.839+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T10:55:48.890+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.889+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:55:48.902+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:48.902+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T10:55:49.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.071+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T10:55:49.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.087+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T10:55:49.190+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.190+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T10:55:49.203+0200] {processor.py:840} INFO - DAG(s) 'example_external_task_marker_child', 'example_bash_operator', 'example_task_group_decorator', 'example_nested_branch_dag', 'example_short_circuit_operator', 'example_params_ui_tutorial', 'example_xcom_args', 'example_trigger_controller_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'dataset_consumes_1_and_2', 'tutorial_dag', 'example_sla_dag', 'latest_only_with_trigger', 'example_params_trigger_ui', 'example_dynamic_task_mapping', 'example_skip_dag', 'example_branch_datetime_operator_2', 'dag_id_1', 'tutorial_objectstorage', 'example_subdag_operator.section-2', 'example_setup_teardown', 'example_short_circuit_decorator', 'dataset_produces_2', 'latest_only', 'example_complex', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator_3', 'example_passing_params_via_test_command', 'example_dag_decorator', 'example_weekday_branch_operator', 'example_subdag_operator.section-1', 'example_task_group', 'example_python_decorator', 'example_xcom_args_with_operators', 'dataset_produces_1', 'example_setup_teardown_taskflow', 'dag_id_2', 'example_time_delta_sensor_async', 'example_xcom', 'example_branch_datetime_operator', 'tutorial', 'dag_id_3', 'dataset_consumes_unknown_never_scheduled', 'tutorial_taskflow_api', 'example_python_operator', 'example_sensor_decorator', 'example_subdag_operator', 'example_external_task_marker_parent', 'example_branch_dop_operator_v3', 'example_trigger_target_dag', 'example_sensors', 'dataset_consumes_1', 'example_branch_labels' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T10:55:49.536+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.536+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T10:55:49.552+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.552+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T10:55:49.554+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.554+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T10:55:49.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.554+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T10:55:49.555+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.555+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T10:55:49.556+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.556+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T10:55:49.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.557+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T10:55:49.557+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.557+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T10:55:49.559+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.559+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.560+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.560+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T10:55:49.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.562+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.564+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.564+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.566+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.566+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.568+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.568+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.572+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.572+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 08:54:00+00:00, run_after=2024-03-07 08:55:00+00:00
[2024-03-07T10:55:49.574+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.574+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.575+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T10:55:49.575+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.575+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T10:55:49.576+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.576+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T10:55:49.577+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.577+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.578+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T10:55:49.578+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.578+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T10:55:49.580+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.580+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.581+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.581+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T10:55:49.582+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.581+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T10:55:49.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.586+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 08:54:00+00:00, run_after=2024-03-07 08:55:00+00:00
[2024-03-07T10:55:49.586+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.586+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T10:55:49.587+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.587+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T10:55:49.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.588+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T10:55:49.588+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.588+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T10:55:49.589+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.589+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.590+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.590+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.591+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.591+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.591+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.592+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.592+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.596+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.596+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 08:52:00+00:00, run_after=2024-03-07 08:54:00+00:00
[2024-03-07T10:55:49.596+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.596+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T10:55:49.597+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.597+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:55:49.598+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.598+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:55:49.599+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.598+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.599+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.599+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.600+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.600+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T10:55:49.601+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.601+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:55:49.601+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.601+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T10:55:49.603+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.603+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.604+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.604+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T10:55:49.605+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.604+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T10:55:49.605+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.605+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T10:55:49.606+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.606+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:55:49.607+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.607+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T10:55:49.608+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.607+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T10:55:49.608+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.608+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T10:55:49.609+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.609+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T10:55:49.610+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.609+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T10:55:49.632+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.632+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T10:55:49.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T10:55:49.635+0200] {logging_mixin.py:188} INFO - [2024-03-07T10:55:49.635+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T10:55:49.650+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.883 seconds
[2024-03-07T11:26:57.365+0200] {processor.py:161} INFO - Started process (PID=37139) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:26:57.366+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T11:26:57.367+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.367+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:26:57.369+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.368+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T11:26:57.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.447+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T11:26:57.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.448+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:26:57.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.482+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:26:57.486+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.486+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T11:26:57.579+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.577+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:26:57.599+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.598+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:26:57.807+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.806+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:26:57.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.825+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:26:57.953+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:57.953+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T11:26:57.969+0200] {processor.py:840} INFO - DAG(s) 'example_sla_dag', 'example_python_decorator', 'tutorial_taskflow_api', 'latest_only', 'tutorial_objectstorage', 'tutorial_dag', 'example_trigger_controller_dag', 'example_external_task_marker_parent', 'example_task_group_decorator', 'dataset_consumes_unknown_never_scheduled', 'example_short_circuit_decorator', 'example_subdag_operator.section-1', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_passing_params_via_test_command', 'example_bash_operator', 'example_python_operator', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'example_xcom_args', 'example_sensor_decorator', 'example_external_task_marker_child', 'example_time_delta_sensor_async', 'example_setup_teardown', 'tutorial', 'latest_only_with_trigger', 'example_complex', 'example_task_group', 'dag_id_2', 'example_skip_dag', 'example_xcom', 'example_branch_dop_operator_v3', 'example_dynamic_task_mapping', 'dataset_consumes_1_and_2', 'example_branch_datetime_operator_3', 'example_xcom_args_with_operators', 'example_branch_datetime_operator', 'dag_id_3', 'dataset_consumes_1_never_scheduled', 'example_branch_datetime_operator_2', 'example_trigger_target_dag', 'example_short_circuit_operator', 'example_dag_decorator', 'example_nested_branch_dag', 'example_sensors', 'dataset_produces_2', 'dag_id_1', 'example_branch_labels', 'example_params_trigger_ui', 'example_weekday_branch_operator', 'dataset_produces_1', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_params_ui_tutorial' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:26:58.620+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.620+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T11:26:58.639+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.639+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T11:26:58.642+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.642+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T11:26:58.643+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.643+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T11:26:58.644+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.644+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T11:26:58.645+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.645+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T11:26:58.646+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.646+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T11:26:58.647+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.647+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T11:26:58.649+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.649+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.650+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.649+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T11:26:58.652+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.652+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.654+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.654+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.656+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.656+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.658+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.658+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.664+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.664+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 09:25:00+00:00, run_after=2024-03-07 09:26:00+00:00
[2024-03-07T11:26:58.668+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.667+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.669+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.669+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T11:26:58.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.671+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T11:26:58.672+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.672+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T11:26:58.673+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.673+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.674+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.674+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T11:26:58.675+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.675+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T11:26:58.677+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.677+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.679+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.678+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T11:26:58.680+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.679+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T11:26:58.686+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.685+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 09:25:00+00:00, run_after=2024-03-07 09:26:00+00:00
[2024-03-07T11:26:58.687+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.687+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T11:26:58.688+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.687+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T11:26:58.688+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.688+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T11:26:58.689+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.689+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T11:26:58.690+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.690+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.691+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.691+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.692+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.692+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.693+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.693+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.694+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.694+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.699+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.699+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 09:24:00+00:00, run_after=2024-03-07 09:26:00+00:00
[2024-03-07T11:26:58.700+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.700+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T11:26:58.701+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:26:58.702+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.701+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:26:58.703+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.702+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.703+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.704+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.704+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T11:26:58.705+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.705+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:26:58.706+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.706+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T11:26:58.709+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.708+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.709+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:26:58.710+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.710+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T11:26:58.711+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.711+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T11:26:58.712+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.712+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:26:58.714+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.713+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:26:58.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.714+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:26:58.715+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.715+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T11:26:58.716+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.716+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T11:26:58.717+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.717+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T11:26:58.819+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.819+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T11:26:58.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.823+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:26:58.824+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:26:58.823+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:26:58.839+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.476 seconds
[2024-03-07T11:31:30.124+0200] {processor.py:161} INFO - Started process (PID=37369) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:31:30.126+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T11:31:30.126+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.126+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:31:30.127+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.127+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T11:31:30.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.198+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T11:31:30.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.199+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:31:30.223+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.223+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:31:30.224+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.224+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T11:31:30.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.294+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:31:30.310+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.310+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:31:30.523+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.522+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:31:30.544+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.544+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:31:30.671+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:30.671+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T11:31:30.687+0200] {processor.py:840} INFO - DAG(s) 'example_time_delta_sensor_async', 'dag_id_2', 'example_bash_operator', 'example_branch_datetime_operator_3', 'example_passing_params_via_test_command', 'example_short_circuit_decorator', 'example_external_task_marker_parent', 'example_xcom', 'latest_only', 'example_python_operator', 'example_sensors', 'dataset_consumes_1', 'example_subdag_operator.section-1', 'example_dynamic_task_mapping', 'example_branch_datetime_operator_2', 'example_setup_teardown_taskflow', 'dataset_produces_2', 'example_external_task_marker_child', 'example_short_circuit_operator', 'example_complex', 'example_xcom_args', 'dataset_consumes_unknown_never_scheduled', 'example_dag_decorator', 'dataset_consumes_1_and_2', 'example_python_decorator', 'dataset_consumes_1_never_scheduled', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_weekday_branch_operator', 'tutorial_dag', 'example_params_trigger_ui', 'example_task_group', 'dag_id_3', 'example_branch_datetime_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_xcom_args_with_operators', 'dataset_produces_1', 'example_branch_dop_operator_v3', 'example_trigger_target_dag', 'dag_id_1', 'tutorial_objectstorage', 'tutorial', 'example_nested_branch_dag', 'example_task_group_decorator', 'latest_only_with_trigger', 'example_sensor_decorator', 'example_skip_dag', 'example_params_ui_tutorial', 'example_setup_teardown', 'example_branch_labels', 'example_sla_dag', 'tutorial_taskflow_api', 'example_trigger_controller_dag' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:31:31.148+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.148+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T11:31:31.169+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.169+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T11:31:31.172+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.171+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T11:31:31.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.172+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T11:31:31.173+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.173+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T11:31:31.174+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.174+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T11:31:31.175+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.175+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T11:31:31.176+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.176+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T11:31:31.179+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.178+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.179+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.179+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T11:31:31.182+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.182+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.184+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.184+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.187+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.187+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.189+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.189+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.195+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.195+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 09:30:00+00:00, run_after=2024-03-07 09:31:00+00:00
[2024-03-07T11:31:31.197+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.197+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.198+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.198+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T11:31:31.199+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.199+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T11:31:31.200+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.200+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T11:31:31.201+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.201+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.203+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.202+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T11:31:31.204+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.203+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T11:31:31.206+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.206+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.207+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.207+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T11:31:31.208+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.207+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T11:31:31.213+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.213+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 09:30:00+00:00, run_after=2024-03-07 09:31:00+00:00
[2024-03-07T11:31:31.214+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.214+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T11:31:31.215+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.215+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T11:31:31.216+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.216+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T11:31:31.217+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.217+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T11:31:31.218+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.218+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.219+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.219+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.220+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.220+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.221+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.221+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.222+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.222+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.226+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.226+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 09:28:00+00:00, run_after=2024-03-07 09:30:00+00:00
[2024-03-07T11:31:31.227+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.227+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T11:31:31.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.228+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:31:31.228+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.228+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:31:31.229+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.229+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.230+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.230+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.231+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.231+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T11:31:31.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.232+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:31:31.232+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.232+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T11:31:31.235+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.235+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.236+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.235+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:31:31.236+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.236+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T11:31:31.237+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.237+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T11:31:31.238+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.238+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:31:31.239+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.239+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:31:31.240+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.240+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:31:31.241+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.240+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T11:31:31.241+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.241+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T11:31:31.242+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.242+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T11:31:31.271+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.270+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T11:31:31.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.274+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:31:31.274+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:31:31.274+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:31:31.287+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.164 seconds
[2024-03-07T11:33:16.776+0200] {processor.py:161} INFO - Started process (PID=37485) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:33:16.777+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T11:33:16.777+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.777+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:33:16.779+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.778+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T11:33:16.842+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.841+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T11:33:16.842+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.842+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:33:16.863+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.863+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:33:16.865+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.864+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T11:33:16.927+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.926+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:33:16.941+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:16.941+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:33:17.137+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.136+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:33:17.158+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.158+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:33:17.279+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.279+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T11:33:17.294+0200] {processor.py:840} INFO - DAG(s) 'example_short_circuit_decorator', 'example_trigger_target_dag', 'example_dynamic_task_mapping', 'example_short_circuit_operator', 'example_branch_datetime_operator_3', 'example_branch_datetime_operator_2', 'example_python_decorator', 'example_skip_dag', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_dag_decorator', 'example_xcom_args_with_operators', 'dataset_consumes_1', 'example_setup_teardown_taskflow', 'example_subdag_operator.section-1', 'latest_only', 'example_params_ui_tutorial', 'example_external_task_marker_child', 'example_complex', 'dataset_produces_1', 'tutorial_objectstorage', 'example_setup_teardown', 'example_branch_datetime_operator', 'example_subdag_operator.section-2', 'example_time_delta_sensor_async', 'example_sla_dag', 'example_xcom_args', 'example_external_task_marker_parent', 'tutorial_dag', 'example_branch_labels', 'example_sensor_decorator', 'example_xcom', 'dag_id_3', 'example_branch_dop_operator_v3', 'example_task_group', 'example_sensors', 'dag_id_1', 'example_params_trigger_ui', 'example_python_operator', 'tutorial_taskflow_api', 'dataset_consumes_unknown_never_scheduled', 'example_nested_branch_dag', 'latest_only_with_trigger', 'dataset_consumes_1_never_scheduled', 'example_trigger_controller_dag', 'dag_id_2', 'example_subdag_operator', 'example_passing_params_via_test_command', 'example_weekday_branch_operator', 'dataset_produces_2', 'dataset_consumes_1_and_2', 'tutorial', 'example_task_group_decorator', 'example_bash_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:33:17.772+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.771+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T11:33:17.792+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.792+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T11:33:17.795+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.795+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T11:33:17.796+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.796+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T11:33:17.797+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.797+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T11:33:17.798+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.798+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T11:33:17.799+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.799+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T11:33:17.800+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.799+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T11:33:17.802+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.802+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.803+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.803+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T11:33:17.805+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.805+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.808+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.808+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.810+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.810+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.812+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.812+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.817+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.817+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 09:32:00+00:00, run_after=2024-03-07 09:33:00+00:00
[2024-03-07T11:33:17.820+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.819+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.821+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.821+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T11:33:17.822+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.822+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T11:33:17.823+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.823+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T11:33:17.824+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.824+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.825+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.825+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T11:33:17.826+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.826+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T11:33:17.828+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.828+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.829+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.829+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T11:33:17.830+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.830+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T11:33:17.836+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.836+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 09:32:00+00:00, run_after=2024-03-07 09:33:00+00:00
[2024-03-07T11:33:17.837+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.837+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T11:33:17.838+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.837+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T11:33:17.838+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.838+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T11:33:17.839+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.839+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T11:33:17.840+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.840+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.841+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.841+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.842+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.842+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.843+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.843+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.844+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.844+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.848+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.848+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 09:30:00+00:00, run_after=2024-03-07 09:32:00+00:00
[2024-03-07T11:33:17.849+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.849+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T11:33:17.850+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.850+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:33:17.851+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.851+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:33:17.852+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.851+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.852+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.852+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.853+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.853+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T11:33:17.854+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.854+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:33:17.855+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.855+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T11:33:17.857+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.857+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.858+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.858+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:33:17.859+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.859+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T11:33:17.860+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.859+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T11:33:17.860+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.860+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:33:17.861+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.861+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:33:17.863+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.862+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:33:17.863+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.863+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T11:33:17.864+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.864+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T11:33:17.865+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.865+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T11:33:17.892+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.892+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T11:33:17.895+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.895+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:33:17.896+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:33:17.895+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:33:17.908+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.133 seconds
[2024-03-07T11:34:54.242+0200] {processor.py:161} INFO - Started process (PID=37598) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:34:54.243+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T11:34:54.243+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.243+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:34:54.244+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.244+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T11:34:54.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.295+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T11:34:54.295+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.295+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:34:54.312+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.312+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:34:54.313+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.313+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T11:34:54.366+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.365+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:34:54.378+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.377+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:34:54.545+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.544+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:34:54.562+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.562+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:34:54.661+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:54.661+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T11:34:54.674+0200] {processor.py:840} INFO - DAG(s) 'tutorial_objectstorage', 'dataset_consumes_1_never_scheduled', 'tutorial_dag', 'example_time_delta_sensor_async', 'example_trigger_controller_dag', 'example_short_circuit_decorator', 'example_complex', 'example_passing_params_via_test_command', 'example_params_ui_tutorial', 'tutorial', 'latest_only', 'example_python_operator', 'dag_id_1', 'example_dynamic_task_mapping', 'example_subdag_operator.section-2', 'example_bash_operator', 'example_skip_dag', 'dataset_produces_1', 'dataset_produces_2', 'example_branch_datetime_operator', 'example_xcom_args_with_operators', 'example_sensor_decorator', 'example_setup_teardown', 'example_branch_dop_operator_v3', 'example_external_task_marker_parent', 'example_task_group_decorator', 'dataset_consumes_unknown_never_scheduled', 'example_branch_datetime_operator_2', 'example_external_task_marker_child', 'latest_only_with_trigger', 'example_sla_dag', 'example_xcom_args', 'dag_id_3', 'example_dag_decorator', 'dataset_consumes_1_and_2', 'example_subdag_operator.section-1', 'example_xcom', 'tutorial_taskflow_api', 'example_short_circuit_operator', 'example_params_trigger_ui', 'example_nested_branch_dag', 'example_sensors', 'example_python_decorator', 'example_branch_labels', 'example_branch_datetime_operator_3', 'example_weekday_branch_operator', 'dag_id_2', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_trigger_target_dag', 'example_setup_teardown_taskflow', 'dataset_consumes_1', 'example_task_group', 'example_subdag_operator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:34:55.027+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.026+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T11:34:55.042+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.042+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T11:34:55.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.045+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T11:34:55.045+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.045+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T11:34:55.046+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.046+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T11:34:55.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.047+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T11:34:55.047+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.047+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T11:34:55.048+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.048+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T11:34:55.050+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.050+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.051+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.051+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T11:34:55.053+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.053+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.055+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.055+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.057+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.057+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.058+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.058+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.063+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.063+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 09:33:00+00:00, run_after=2024-03-07 09:34:00+00:00
[2024-03-07T11:34:55.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.065+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.065+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T11:34:55.066+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.066+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T11:34:55.067+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.067+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T11:34:55.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.068+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.068+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T11:34:55.069+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.069+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T11:34:55.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.071+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.071+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T11:34:55.072+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.072+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T11:34:55.076+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.076+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 09:33:00+00:00, run_after=2024-03-07 09:34:00+00:00
[2024-03-07T11:34:55.077+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.077+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T11:34:55.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T11:34:55.078+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.078+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T11:34:55.079+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.079+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T11:34:55.080+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.080+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.081+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.081+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.082+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.082+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.083+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.083+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.086+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.086+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 09:32:00+00:00, run_after=2024-03-07 09:34:00+00:00
[2024-03-07T11:34:55.087+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.087+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T11:34:55.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:34:55.088+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.088+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:34:55.089+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.089+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.090+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.090+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T11:34:55.091+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.091+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:34:55.092+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.092+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T11:34:55.094+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.094+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:34:55.095+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.095+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T11:34:55.096+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.096+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T11:34:55.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.097+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:34:55.097+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.097+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:34:55.098+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.098+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:34:55.099+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.099+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T11:34:55.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.100+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T11:34:55.100+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.100+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T11:34:55.126+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.125+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T11:34:55.128+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.128+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:34:55.129+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:34:55.129+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:34:55.139+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 0.898 seconds
[2024-03-07T11:36:32.457+0200] {processor.py:161} INFO - Started process (PID=37702) to work on /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:36:32.458+0200] {processor.py:830} INFO - Processing file /Users/abatcoveanu/airflow/dags/add_dag_bags.py for tasks to queue
[2024-03-07T11:36:32.459+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.459+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:36:32.460+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.460+0200] {dagbag.py:540} INFO - Filling up the DagBag from /Users/abatcoveanu/airflow/dags/dag_folder
[2024-03-07T11:36:32.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.512+0200] {example_local_kubernetes_executor.py:39} WARNING - Could not import DAGs in example_local_kubernetes_executor.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 37, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[2024-03-07T11:36:32.512+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.512+0200] {example_local_kubernetes_executor.py:40} WARNING - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:36:32.530+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.530+0200] {example_python_operator.py:88} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:36:32.531+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.531+0200] {tutorial_taskflow_api_virtualenv.py:29} WARNING - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.
[2024-03-07T11:36:32.587+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.586+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator.py", line 138, in <module>
    branching_venv = BranchPythonVirtualenvOperator(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:36:32.599+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.599+0200] {example_python_decorator.py:79} WARNING - The virtalenv_python example task requires virtualenv, please install it.
[2024-03-07T11:36:32.765+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.764+0200] {dagbag.py:350} ERROR - Failed to import: /usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py
Traceback (most recent call last):
  File "/usr/local/lib/python3.8/site-packages/airflow/models/dagbag.py", line 346, in parse
    loader.exec_module(new_module)
  File "<frozen importlib._bootstrap_external>", line 843, in exec_module
  File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed
  File "/usr/local/lib/python3.8/site-packages/airflow/example_dags/example_branch_operator_decorator.py", line 125, in <module>
    random_choice_venv = branching_virtualenv(choices=options)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 366, in __call__
    op = self.operator_class(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/python.py", line 52, in __init__
    super().__init__(
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/decorators/base.py", line 233, in __init__
    super().__init__(task_id=task_id, **kwargs_to_upstream, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/models/baseoperator.py", line 437, in apply_defaults
    result = func(self, **kwargs, default_args=default_args)
  File "/usr/local/lib/python3.8/site-packages/airflow/operators/python.py", line 591, in __init__
    raise AirflowException("PythonVirtualenvOperator requires virtualenv, please install it.")
airflow.exceptions.AirflowException: PythonVirtualenvOperator requires virtualenv, please install it.
[2024-03-07T11:36:32.789+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.789+0200] {example_kubernetes_executor.py:38} WARNING - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes]
[2024-03-07T11:36:32.954+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:32.954+0200] {workday.py:40} WARNING - Could not import pandas. Holidays will not be considered.
[2024-03-07T11:36:32.972+0200] {processor.py:840} INFO - DAG(s) 'example_external_task_marker_child', 'example_short_circuit_operator', 'latest_only', 'example_params_trigger_ui', 'example_skip_dag', 'dataset_produces_2', 'example_subdag_operator.section-1', 'tutorial_taskflow_api', 'dataset_consumes_1_and_2', 'example_dag_decorator', 'dataset_consumes_1', 'example_branch_datetime_operator_2', 'dataset_produces_1', 'example_external_task_marker_parent', 'example_subdag_operator.section-2', 'example_subdag_operator', 'example_dynamic_task_mapping_with_no_taskflow_operators', 'example_branch_datetime_operator', 'example_task_group', 'example_trigger_target_dag', 'example_setup_teardown_taskflow', 'dag_id_2', 'example_python_operator', 'example_setup_teardown', 'example_xcom', 'example_branch_dop_operator_v3', 'tutorial_objectstorage', 'example_trigger_controller_dag', 'dataset_consumes_1_never_scheduled', 'example_branch_labels', 'example_short_circuit_decorator', 'example_time_delta_sensor_async', 'example_weekday_branch_operator', 'dag_id_1', 'latest_only_with_trigger', 'tutorial_dag', 'example_sensors', 'example_sensor_decorator', 'example_complex', 'example_python_decorator', 'dag_id_3', 'example_xcom_args', 'dataset_consumes_unknown_never_scheduled', 'example_xcom_args_with_operators', 'example_bash_operator', 'example_branch_datetime_operator_3', 'example_nested_branch_dag', 'example_params_ui_tutorial', 'example_dynamic_task_mapping', 'example_sla_dag', 'example_passing_params_via_test_command', 'tutorial', 'example_task_group_decorator' retrieved from /Users/abatcoveanu/airflow/dags/add_dag_bags.py
[2024-03-07T11:36:33.423+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.423+0200] {dag.py:3047} INFO - Sync 53 DAGs
[2024-03-07T11:36:33.440+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.440+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_1 to None, run_after=None
[2024-03-07T11:36:33.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.441+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_2 to None, run_after=None
[2024-03-07T11:36:33.442+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.442+0200] {dag.py:3834} INFO - Setting next_dagrun for dag_id_3 to None, run_after=None
[2024-03-07T11:36:33.443+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.443+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1 to None, run_after=None
[2024-03-07T11:36:33.444+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.444+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_and_2 to None, run_after=None
[2024-03-07T11:36:33.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.444+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_1_never_scheduled to None, run_after=None
[2024-03-07T11:36:33.445+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.445+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_consumes_unknown_never_scheduled to None, run_after=None
[2024-03-07T11:36:33.447+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.447+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_1 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.448+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.448+0200] {dag.py:3834} INFO - Setting next_dagrun for dataset_produces_2 to None, run_after=None
[2024-03-07T11:36:33.450+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.450+0200] {dag.py:3834} INFO - Setting next_dagrun for example_bash_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.452+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.452+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.454+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.454+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_2 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.456+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.456+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_datetime_operator_3 to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.461+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.461+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_dop_operator_v3 to 2024-03-07 09:35:00+00:00, run_after=2024-03-07 09:36:00+00:00
[2024-03-07T11:36:33.463+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_branch_labels to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.463+0200] {dag.py:3834} INFO - Setting next_dagrun for example_complex to None, run_after=None
[2024-03-07T11:36:33.464+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.464+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dag_decorator to None, run_after=None
[2024-03-07T11:36:33.466+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.466+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping to 2022-03-04 00:00:00+00:00, run_after=2022-03-05 00:00:00+00:00
[2024-03-07T11:36:33.467+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.467+0200] {dag.py:3834} INFO - Setting next_dagrun for example_dynamic_task_mapping_with_no_taskflow_operators to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_child to None, run_after=None
[2024-03-07T11:36:33.468+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.468+0200] {dag.py:3834} INFO - Setting next_dagrun for example_external_task_marker_parent to None, run_after=None
[2024-03-07T11:36:33.470+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.470+0200] {dag.py:3834} INFO - Setting next_dagrun for example_nested_branch_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.471+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.471+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_trigger_ui to None, run_after=None
[2024-03-07T11:36:33.472+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.472+0200] {dag.py:3834} INFO - Setting next_dagrun for example_params_ui_tutorial to None, run_after=None
[2024-03-07T11:36:33.476+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.476+0200] {dag.py:3834} INFO - Setting next_dagrun for example_passing_params_via_test_command to 2024-03-07 09:35:00+00:00, run_after=2024-03-07 09:36:00+00:00
[2024-03-07T11:36:33.477+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.477+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_decorator to None, run_after=None
[2024-03-07T11:36:33.478+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_python_operator to None, run_after=None
[2024-03-07T11:36:33.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.478+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensor_decorator to None, run_after=None
[2024-03-07T11:36:33.479+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.479+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sensors to None, run_after=None
[2024-03-07T11:36:33.480+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.480+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.481+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.481+0200] {dag.py:3834} INFO - Setting next_dagrun for example_setup_teardown_taskflow to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.482+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.482+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.484+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.484+0200] {dag.py:3834} INFO - Setting next_dagrun for example_short_circuit_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.485+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.485+0200] {dag.py:3834} INFO - Setting next_dagrun for example_skip_dag to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.488+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.488+0200] {dag.py:3834} INFO - Setting next_dagrun for example_sla_dag to 2024-03-07 09:34:00+00:00, run_after=2024-03-07 09:36:00+00:00
[2024-03-07T11:36:33.489+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.489+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator to 2022-01-01 00:00:00+00:00, run_after=2022-01-01 00:00:00+00:00
[2024-03-07T11:36:33.490+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.490+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:36:33.491+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.491+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:36:33.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.492+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.493+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.493+0200] {dag.py:3834} INFO - Setting next_dagrun for example_task_group_decorator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.494+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.494+0200] {dag.py:3834} INFO - Setting next_dagrun for example_time_delta_sensor_async to None, run_after=None
[2024-03-07T11:36:33.495+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.495+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_controller_dag to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:36:33.496+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.496+0200] {dag.py:3834} INFO - Setting next_dagrun for example_trigger_target_dag to None, run_after=None
[2024-03-07T11:36:33.498+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.498+0200] {dag.py:3834} INFO - Setting next_dagrun for example_weekday_branch_operator to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.499+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.499+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom to 2021-01-01 00:00:00+00:00, run_after=2021-01-01 00:00:00+00:00
[2024-03-07T11:36:33.500+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.500+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args to None, run_after=None
[2024-03-07T11:36:33.501+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.501+0200] {dag.py:3834} INFO - Setting next_dagrun for example_xcom_args_with_operators to None, run_after=None
[2024-03-07T11:36:33.503+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.502+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:36:33.504+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.503+0200] {dag.py:3834} INFO - Setting next_dagrun for latest_only_with_trigger to 2024-03-07 04:00:00+00:00, run_after=2024-03-07 08:00:00+00:00
[2024-03-07T11:36:33.505+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.505+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial to 2024-03-06 00:00:00+00:00, run_after=2024-03-07 00:00:00+00:00
[2024-03-07T11:36:33.506+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.505+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_dag to None, run_after=None
[2024-03-07T11:36:33.507+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.507+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_objectstorage to None, run_after=None
[2024-03-07T11:36:33.508+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.508+0200] {dag.py:3834} INFO - Setting next_dagrun for tutorial_taskflow_api to None, run_after=None
[2024-03-07T11:36:33.539+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.539+0200] {dag.py:3047} INFO - Sync 2 DAGs
[2024-03-07T11:36:33.543+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.543+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-1 to None, run_after=None
[2024-03-07T11:36:33.544+0200] {logging_mixin.py:188} INFO - [2024-03-07T11:36:33.544+0200] {dag.py:3834} INFO - Setting next_dagrun for example_subdag_operator.section-2 to None, run_after=None
[2024-03-07T11:36:33.559+0200] {processor.py:183} INFO - Processing /Users/abatcoveanu/airflow/dags/add_dag_bags.py took 1.103 seconds
